(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{429:function(t,_,v){"use strict";v.r(_);var r=v(4),a=Object(r.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),_("p",[t._v("先来一个问题："),_("strong",[t._v("如何解决复杂 where 下的缓存穿透？")])]),t._v(" "),_("ul",[_("li",[t._v("分为正常请求和非法请求")]),t._v(" "),_("li",[t._v("正常请求：给 where 进行 hash，然后存 redis，合理设置过期时间，并利用布隆过滤器过滤")]),t._v(" "),_("li",[t._v("非法请求：记录查询 null 的次数，如果太大，进行封禁，采用指数退避算法")])]),t._v(" "),_("h2",{attrs:{id:"什么是缓存穿透"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是缓存穿透"}},[t._v("#")]),t._v(" "),_("strong",[t._v("什么是缓存穿透")])]),t._v(" "),_("p",[t._v("缓存穿透最直白的意思就是，我们的业务系统在接收到请求时在缓存中并没有查到数据，从而穿透到了后端数据库里面查数据的过程。")]),t._v(" "),_("p",[t._v("当然，既然使用了缓存，肯定会难免有穿透的发生，正常的少量穿透是对我们业务来说是不会造成任何影响的，因为:")]),t._v(" "),_("ul",[_("li",[t._v("毕竟我们的缓存容量有限，不可能去缓存所有数据，当面临较大请求时，查询到未被缓存的数据时，就会发生穿透。")]),t._v(" "),_("li",[t._v("互联网业务的数据访问模型一般是遵循“二八”原则的，即 20% 的数据为热点数据，80% 的数据是非热点不被常访问的数据。")])]),t._v(" "),_("p",[t._v("现在既然我们的缓存容量有限，然后 20% 的数据为热点数据，也就是说，我们可以利用有限的容量去缓存那 20% 的数据，其实就是可以保护我们的后端系统的，至于80%非热点不常用的数据发生穿透了，是我们能够接受的。")]),t._v(" "),_("p",[t._v("那究竟什么的缓存穿透会影响到我们的系统呢？是大量的穿透请求超过了我们后端系统的承受范围，比如恶意的穿透攻击，这样的穿透就很有可能把我们的系统给干崩溃。接下来，我们就来基于相关应用场景来解决这种缓存穿透。")]),t._v(" "),_("h2",{attrs:{id:"缓存穿透如何解决"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透如何解决"}},[t._v("#")]),t._v(" "),_("strong",[t._v("缓存穿透如何解决")])]),t._v(" "),_("p",[t._v("在我们APP的在线搜索相关系统里面，有个产品product 1 并没有在数据库中进行存储，现在通过cache aside pattern 策略（"),_("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/I9XPyRtesLcc1nNmzltG-A",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存读写策略，开发必备"),_("OutboundLink")],1),t._v("）查这个product 1 。")]),t._v(" "),_("p",[t._v("那查询一个数据库中本身就没有的数据后面会怎样呢？依照cache aside 策略，读取时，首先会读取缓存，没读到数据就会穿透到读数据库，现在数据库也没有，也就没有数据写回缓存。那么，再来个请求依然如此，更多的请求来还是一样，这样的缓存就没意义了。")]),t._v(" "),_("p",[t._v("通过上面场景我们可以看到，这样的系统面临非正常的穿透是会崩溃掉的，那我们该怎么去解决呢？一般我们对此有两种方案，都是有用的：")]),t._v(" "),_("ul",[_("li",[t._v("设置空值")]),t._v(" "),_("li",[t._v("布隆过滤器")])]),t._v(" "),_("h3",{attrs:{id:"设置空值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#设置空值"}},[t._v("#")]),t._v(" "),_("strong",[t._v("设置空值")])]),t._v(" "),_("p",[t._v("通过上面场景我们知道，当有大量恶意的穿透请求到数据库，就会给我们系统带来灾难。")]),t._v(" "),_("p",[t._v("所以，当我们请求数据中没有数据或者因为代码bug带来的异常造成的数据为空，这个时候我们就可以回写一个空值null到缓存中。同时，我们还要给这个null值设置过期时间，因为这个空值不具有实际业务性，而且还占用空间。")]),t._v(" "),_("p",[t._v("可见设置空值是可以阻挡大量穿透请求的，但是如果有大量的获取并不存在数据的穿透请求的话例如恶意攻击，则会浪费缓存空间，如果这种null值过量的话，还会淘汰掉本身缓存存在的数据，这就会使我们的缓存命中率下降。")]),t._v(" "),_("p",[t._v("**生产建议，**在使用设置空值方案时，我们要做好监控，"),_("strong",[t._v("预防缓存空间被过多null值占领")]),t._v("造成的缓存空间浪费，如果这种数据量太大，就不再建议使用，那就使用另一种方案，即布隆过滤器。")]),t._v(" "),_("h3",{attrs:{id:"布隆过滤器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" "),_("strong",[t._v("布隆过滤器")])]),t._v(" "),_("p",[_("strong",[t._v("生产建议：")])]),t._v(" "),_("ul",[_("li",[t._v("采用多个hash 算法计算hash 值，这样可以减少误判的几率。")]),t._v(" "),_("li",[t._v("布隆过滤器会消耗一定内存空间，根据业务场景进行评估需要多大内存，最后依据公司资源以及成本，看是否能够接受。")])]),t._v(" "),_("h3",{attrs:{id:"接口限流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#接口限流"}},[t._v("#")]),t._v(" 接口限流")]),t._v(" "),_("p",[t._v("根据用户或者 IP 对接口进行限流，对于异常频繁的访问行为，还可以采取黑名单机制，例如将异常 IP 列入黑名单。")]),t._v(" "),_("p",[t._v("后面提到的缓存击穿和雪崩都可以配合接口限流来解决，毕竟这些问题的关键都是有很多请求落到了数据库上造成数据库压力过大。")])])}),[],!1,null,null,null);_.default=a.exports}}]);