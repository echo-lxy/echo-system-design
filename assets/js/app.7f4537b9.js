(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(e){function n(n){for(var r,a,s=n[0],c=n[1],l=n[2],d=0,p=[];d<s.length;d++)a=s[d],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&p.push(o[a][0]),o[a]=0;for(r in c)Object.prototype.hasOwnProperty.call(c,r)&&(e[r]=c[r]);for(u&&u(n);p.length;)p.shift()();return i.push.apply(i,l||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],r=!0,s=1;s<t.length;s++){var c=t[s];0!==o[c]&&(r=!1)}r&&(i.splice(n--,1),e=a(a.s=t[0]))}return e}var r={},o={1:0},i=[];function a(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.e=function(e){var n=[],t=o[e];if(0!==t)if(t)n.push(t[2]);else{var r=new Promise((function(n,r){t=o[e]=[n,r]}));n.push(t[2]=r);var i,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"assets/js/"+({}[e]||e)+"."+{2:"81691b95",3:"8a6e4f60",4:"d012670c",5:"5f9e995c",6:"1d69a153",7:"99be63e1",8:"d3065773",9:"6172e511",10:"98d0f823",11:"94000fed",12:"d49e0bbf",13:"8551385d",14:"fb3ae722",15:"11fba25d",16:"547b2df8",17:"74c1ee01",18:"db366867",19:"5047ad2c",20:"a4475b59",21:"126d3832",22:"2732fbb2",23:"f113424f",24:"83a3b3ed",25:"ca3f1e35",26:"30d465a0",27:"6edcc0cf",28:"711f144c",29:"0893d0c8",30:"5d96a46b",31:"8ad5e790",32:"fce01ee9",33:"ad50e54f"}[e]+".js"}(e);var c=new Error;i=function(n){s.onerror=s.onload=null,clearTimeout(l);var t=o[e];if(0!==t){if(t){var r=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;c.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",c.name="ChunkLoadError",c.type=r,c.request=i,t[1](c)}o[e]=void 0}};var l=setTimeout((function(){i({type:"timeout",target:s})}),12e4);s.onerror=s.onload=i,document.head.appendChild(s)}return Promise.all(n)},a.m=e,a.c=r,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="/",a.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],c=s.push.bind(s);s.push=n,s=s.slice();for(var l=0;l<s.length;l++)n(s[l]);var u=c;i.push([106,0]),t()}([function(e,n,t){"use strict";var r=function(e){return e&&e.Math===Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||r("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(e,n,t){"use strict";var r="object"==typeof document&&document.all;e.exports=void 0===r&&void 0!==r?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},function(e,n,t){"use strict";var r=t(26),o=Function.prototype,i=o.call,a=r&&o.bind.bind(i,i);e.exports=r?a:function(e){return function(){return i.apply(e,arguments)}}},function(e,n,t){"use strict";e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,n,t){"use strict";function r(e,n,t,r,o,i,a,s){var c,l="function"==typeof e?e.options:e;if(n&&(l.render=n,l.staticRenderFns=t,l._compiled=!0),r&&(l.functional=!0),i&&(l._scopeId="data-v-"+i),a?(c=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),o&&o.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(a)},l._ssrRegister=c):o&&(c=s?function(){o.call(this,(l.functional?this.parent:this).$root.$options.shadowRoot)}:o),c)if(l.functional){l._injectStyles=c;var u=l.render;l.render=function(e,n){return c.call(n),u(e,n)}}else{var d=l.beforeCreate;l.beforeCreate=d?[].concat(d,c):[c]}return{exports:e,options:l}}t.d(n,"a",(function(){return r}))},function(e,n,t){"use strict";var r=t(3);e.exports=!r((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,n){var t=Array.isArray;e.exports=t},function(e,n,t){"use strict";var r=t(1);e.exports=function(e){return"object"==typeof e?null!==e:r(e)}},function(e,n,t){var r=t(69),o="object"==typeof self&&self&&self.Object===Object&&self,i=r||o||Function("return this")();e.exports=i},function(e,n,t){"use strict";var r=t(2),o=t(31),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,n){return i(o(e),n)}},function(e,n,t){var r=t(165),o=t(168);e.exports=function(e,n){var t=o(e,n);return r(t)?t:void 0}},function(e,n,t){"use strict";t.d(n,"e",(function(){return r})),t.d(n,"b",(function(){return i})),t.d(n,"j",(function(){return a})),t.d(n,"g",(function(){return c})),t.d(n,"h",(function(){return l})),t.d(n,"i",(function(){return u})),t.d(n,"c",(function(){return d})),t.d(n,"f",(function(){return p})),t.d(n,"l",(function(){return f})),t.d(n,"m",(function(){return h})),t.d(n,"d",(function(){return v})),t.d(n,"k",(function(){return y})),t.d(n,"n",(function(){return g})),t.d(n,"a",(function(){return _}));t(16);const r=/#.*$/,o=/\.(md|html)$/,i=/\/$/,a=/^[a-z]+:/i;function s(e){return decodeURI(e).replace(r,"").replace(o,"")}function c(e){return a.test(e)}function l(e){return/^mailto:/.test(e)}function u(e){return/^tel:/.test(e)}function d(e){if(c(e))return e;if(!e)return"404";const n=e.match(r),t=n?n[0]:"",o=s(e);return i.test(o)?e:o+".html"+t}function p(e,n){const t=e.hash,o=function(e){const n=e&&e.match(r);if(n)return n[0]}(n);if(o&&t!==o)return!1;return s(e.path)===s(n)}function f(e,n,t){if(c(n))return{type:"external",path:n};t&&(n=function(e,n,t){const r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return n+e;const o=n.split("/");t&&o[o.length-1]||o.pop();const i=e.replace(/^\//,"").split("/");for(let e=0;e<i.length;e++){const n=i[e];".."===n?o.pop():"."!==n&&o.push(n)}""!==o[0]&&o.unshift("");return o.join("/")}(n,t));const r=s(n);for(let n=0;n<e.length;n++)if(s(e[n].regularPath)===r)return Object.assign({},e[n],{type:"page",path:d(e[n].path)});return console.error(`[vuepress] No matching page found for sidebar item "${n}"`),{}}function h(e,n,t,r){const{pages:o,themeConfig:i}=t,a=r&&i.locales&&i.locales[r]||i;if("auto"===(e.frontmatter.sidebar||a.sidebar||i.sidebar))return m(e);const s=a.sidebar||i.sidebar;if(s){const{base:t,config:r}=function(e,n){if(Array.isArray(n))return{base:"/",config:n};for(const r in n)if(0===(t=e,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(r)))return{base:r,config:n[r]};var t;return{}}(n,s);return"auto"===r?m(e):r?r.map(e=>function e(n,t,r,o=1){if("string"==typeof n)return f(t,n,r);if(Array.isArray(n))return Object.assign(f(t,n[0],r),{title:n[1]});{o>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=n.children||[];return 0===i.length&&n.path?Object.assign(f(t,n.path,r),{title:n.title}):{type:"group",path:n.path,title:n.title,sidebarDepth:n.sidebarDepth,initialOpenGroupIndex:n.initialOpenGroupIndex,children:i.map(n=>e(n,t,r,o+1)),collapsable:!1!==n.collapsable}}}(e,o,t)):[]}return[]}function m(e){const n=v(e.headers||[]);return[{type:"group",collapsable:!1,title:e.title,path:null,children:n.map(n=>({type:"auto",title:n.title,basePath:e.path,path:e.path+"#"+n.slug,children:n.children||[]}))}]}function v(e){let n;return(e=e.map(e=>Object.assign({},e))).forEach(e=>{2===e.level?n=e:n&&(n.children||(n.children=[])).push(e)}),e.filter(e=>2===e.level)}function y(e){return Object.assign(e,{type:e.items&&e.items.length?"links":"link"})}function g(e){return Object.prototype.toString.call(e).match(/\[object (.*?)\]/)[1].toLowerCase()}function b(e){let n=e.frontmatter.date||e.lastUpdated||new Date,t=new Date(n);return"Invalid Date"==t&&n&&(t=new Date(n.replace(/-/g,"/"))),t.getTime()}function _(e,n){return b(n)-b(e)}},function(e,n){e.exports=function(e){return null!=e&&"object"==typeof e}},function(e,n,t){var r=t(15),o=t(150),i=t(151),a=r?r.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?o(e):i(e)}},function(e,n,t){"use strict";var r=t(5),o=t(17),i=t(34);e.exports=r?function(e,n,t){return o.f(e,n,i(1,t))}:function(e,n,t){return e[n]=t,e}},function(e,n,t){var r=t(8).Symbol;e.exports=r},function(e,n,t){"use strict";var r=t(25),o=t(31),i=t(32),a=t(144),s=t(146);r({target:"Array",proto:!0,arity:1,forced:t(3)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}()},{push:function(e){var n=o(this),t=i(n),r=arguments.length;s(t+r);for(var c=0;c<r;c++)n[t]=arguments[c],t++;return a(n,t),t}})},function(e,n,t){"use strict";var r=t(5),o=t(64),i=t(101),a=t(47),s=t(54),c=TypeError,l=Object.defineProperty,u=Object.getOwnPropertyDescriptor;n.f=r?i?function(e,n,t){if(a(e),n=s(n),a(t),"function"==typeof e&&"prototype"===n&&"value"in t&&"writable"in t&&!t.writable){var r=u(e,n);r&&r.writable&&(e[n]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return l(e,n,t)}:l:function(e,n,t){if(a(e),n=s(n),a(t),o)try{return l(e,n,t)}catch(e){}if("get"in t||"set"in t)throw new c("Accessors not supported");return"value"in t&&(e[n]=t.value),e}},function(e,n,t){"use strict";var r=t(2),o=r({}.toString),i=r("".slice);e.exports=function(e){return i(o(e),8,-1)}},function(e,n,t){var r=t(155),o=t(156),i=t(157),a=t(158),s=t(159);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,n,t){var r=t(71);e.exports=function(e,n){for(var t=e.length;t--;)if(r(e[t][0],n))return t;return-1}},function(e,n,t){var r=t(10)(Object,"create");e.exports=r},function(e,n,t){var r=t(177);e.exports=function(e,n){var t=e.__data__;return r(n)?t["string"==typeof n?"string":"hash"]:t.map}},function(e,n,t){var r=t(45);e.exports=function(e){if("string"==typeof e||r(e))return e;var n=e+"";return"0"==n&&1/e==-1/0?"-0":n}},function(e,n,t){var r,o;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(o="function"==typeof(r=function(){var e,n,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function o(e,n,t){return e<n?n:e>t?t:e}function i(e){return 100*(-1+e)}t.configure=function(e){var n,t;for(n in e)void 0!==(t=e[n])&&e.hasOwnProperty(n)&&(r[n]=t);return this},t.status=null,t.set=function(e){var n=t.isStarted();e=o(e,r.minimum,1),t.status=1===e?null:e;var c=t.render(!n),l=c.querySelector(r.barSelector),u=r.speed,d=r.easing;return c.offsetWidth,a((function(n){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(l,function(e,n,t){var o;return(o="translate3d"===r.positionUsing?{transform:"translate3d("+i(e)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+i(e)+"%,0)"}:{"margin-left":i(e)+"%"}).transition="all "+n+"ms "+t,o}(e,u,d)),1===e?(s(c,{transition:"none",opacity:1}),c.offsetWidth,setTimeout((function(){s(c,{transition:"all "+u+"ms linear",opacity:0}),setTimeout((function(){t.remove(),n()}),u)}),u)):setTimeout(n,u)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var e=function(){setTimeout((function(){t.status&&(t.trickle(),e())}),r.trickleSpeed)};return r.trickle&&e(),this},t.done=function(e){return e||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(e){var n=t.status;return n?("number"!=typeof e&&(e=(1-n)*o(Math.random()*n,.1,.95)),n=o(n+e,0,.994),t.set(n)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},e=0,n=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===n&&t.start(),e++,n++,r.always((function(){0==--n?(e=0,t.done()):t.set((e-n)/e)})),this):this},t.render=function(e){if(t.isRendered())return document.getElementById("nprogress");l(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=r.template;var o,a=n.querySelector(r.barSelector),c=e?"-100":i(t.status||0),u=document.querySelector(r.parent);return s(a,{transition:"all 0 linear",transform:"translate3d("+c+"%,0,0)"}),r.showSpinner||(o=n.querySelector(r.spinnerSelector))&&p(o),u!=document.body&&l(u,"nprogress-custom-parent"),u.appendChild(n),n},t.remove=function(){u(document.documentElement,"nprogress-busy"),u(document.querySelector(r.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&p(e)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var e=document.body.style,n="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return n+"Perspective"in e?"translate3d":n+"Transform"in e?"translate":"margin"};var a=function(){var e=[];function n(){var t=e.shift();t&&t(n)}return function(t){e.push(t),1==e.length&&n()}}(),s=function(){var e=["Webkit","O","Moz","ms"],n={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(e,n){return n.toUpperCase()})),n[t]||(n[t]=function(n){var t=document.body.style;if(n in t)return n;for(var r,o=e.length,i=n.charAt(0).toUpperCase()+n.slice(1);o--;)if((r=e[o]+i)in t)return r;return n}(t))}function r(e,n,r){n=t(n),e.style[n]=r}return function(e,n){var t,o,i=arguments;if(2==i.length)for(t in n)void 0!==(o=n[t])&&n.hasOwnProperty(t)&&r(e,t,o);else r(e,i[1],i[2])}}();function c(e,n){return("string"==typeof e?e:d(e)).indexOf(" "+n+" ")>=0}function l(e,n){var t=d(e),r=t+n;c(t,n)||(e.className=r.substring(1))}function u(e,n){var t,r=d(e);c(e,n)&&(t=r.replace(" "+n+" "," "),e.className=t.substring(1,t.length-1))}function d(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function p(e){e&&e.parentNode&&e.parentNode.removeChild(e)}return t})?r.call(n,t,n,e):r)||(e.exports=o)},function(e,n,t){"use strict";var r=t(0),o=t(52).f,i=t(14),a=t(97),s=t(37),c=t(65),l=t(124);e.exports=function(e,n){var t,u,d,p,f,h=e.target,m=e.global,v=e.stat;if(t=m?r:v?r[h]||s(h,{}):r[h]&&r[h].prototype)for(u in n){if(p=n[u],d=e.dontCallGetSet?(f=o(t,u))&&f.value:t[u],!l(m?u:h+(v?".":"#")+u,e.forced)&&void 0!==d){if(typeof p==typeof d)continue;c(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),a(t,u,p,e)}}},function(e,n,t){"use strict";var r=t(3);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},function(e,n,t){"use strict";var r=t(48),o=t(35);e.exports=function(e){return r(o(e))}},function(e,n,t){"use strict";var r=t(0),o=t(1),i=function(e){return o(e)?e:void 0};e.exports=function(e,n){return arguments.length<2?i(r[e]):r[e]&&r[e][n]}},function(e,n,t){"use strict";var r=t(1),o=t(111),i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not a function")}},function(e,n,t){"use strict";var r=t(0),o=t(61),i=t(9),a=t(63),s=t(58),c=t(57),l=r.Symbol,u=o("wks"),d=c?l.for||l:l&&l.withoutSetter||a;e.exports=function(e){return i(u,e)||(u[e]=s&&i(l,e)?l[e]:d("Symbol."+e)),u[e]}},function(e,n,t){"use strict";var r=t(35),o=Object;e.exports=function(e){return o(r(e))}},function(e,n,t){"use strict";var r=t(122);e.exports=function(e){return r(e.length)}},function(e,n,t){"use strict";var r=t(26),o=Function.prototype.call;e.exports=r?o.bind(o):function(){return o.apply(o,arguments)}},function(e,n,t){"use strict";e.exports=function(e,n){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:n}}},function(e,n,t){"use strict";var r=t(53),o=TypeError;e.exports=function(e){if(r(e))throw new o("Can't call method on "+e);return e}},function(e,n,t){"use strict";var r=t(62),o=t(0),i=t(37),a=e.exports=o["__core-js_shared__"]||i("__core-js_shared__",{});(a.versions||(a.versions=[])).push({version:"3.38.1",mode:r?"pure":"global",copyright:"© 2014-2024 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE",source:"https://github.com/zloirock/core-js"})},function(e,n,t){"use strict";var r=t(0),o=Object.defineProperty;e.exports=function(e,n){try{o(r,e,{value:n,configurable:!0,writable:!0})}catch(t){r[e]=n}return n}},function(e,n,t){var r=t(149),o=t(12),i=Object.prototype,a=i.hasOwnProperty,s=i.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(e){return o(e)&&a.call(e,"callee")&&!s.call(e,"callee")};e.exports=c},function(e,n,t){var r=t(10)(t(8),"Map");e.exports=r},function(e,n){e.exports=function(e){var n=typeof e;return null!=e&&("object"==n||"function"==n)}},function(e,n,t){var r=t(169),o=t(176),i=t(178),a=t(179),s=t(180);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e){t[++n]=e})),t}},function(e,n){e.exports=function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}},function(e,n,t){var r=t(6),o=t(45),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,a=/^\w*$/;e.exports=function(e,n){if(r(e))return!1;var t=typeof e;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=e&&!o(e))||(a.test(e)||!i.test(e)||null!=n&&e in Object(n))}},function(e,n,t){var r=t(13),o=t(12);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==r(e)}},function(e,n){e.exports=function(e){return e}},function(e,n,t){"use strict";var r=t(7),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i(o(e)+" is not an object")}},function(e,n,t){"use strict";var r=t(2),o=t(3),i=t(18),a=Object,s=r("".split);e.exports=o((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"===i(e)?s(e,""):a(e)}:a},function(e,n,t){"use strict";e.exports={}},function(e,n){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,n){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,o=/^0b[01]+$/i,i=/^0o[0-7]+$/i,a=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,c="object"==typeof self&&self&&self.Object===Object&&self,l=s||c||Function("return this")(),u=Object.prototype.toString,d=Math.max,p=Math.min,f=function(){return l.Date.now()};function h(e){var n=typeof e;return!!e&&("object"==n||"function"==n)}function m(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==u.call(e)}(e))return NaN;if(h(e)){var n="function"==typeof e.valueOf?e.valueOf():e;e=h(n)?n+"":n}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(t,"");var s=o.test(e);return s||i.test(e)?a(e.slice(2),s?2:8):r.test(e)?NaN:+e}e.exports=function(e,n,t){var r,o,i,a,s,c,l=0,u=!1,v=!1,y=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function g(n){var t=r,i=o;return r=o=void 0,l=n,a=e.apply(i,t)}function b(e){return l=e,s=setTimeout(k,n),u?g(e):a}function _(e){var t=e-c;return void 0===c||t>=n||t<0||v&&e-l>=i}function k(){var e=f();if(_(e))return x(e);s=setTimeout(k,function(e){var t=n-(e-c);return v?p(t,i-(e-l)):t}(e))}function x(e){return s=void 0,y&&r?g(e):(r=o=void 0,a)}function E(){var e=f(),t=_(e);if(r=arguments,o=this,c=e,t){if(void 0===s)return b(c);if(v)return s=setTimeout(k,n),g(c)}return void 0===s&&(s=setTimeout(k,n)),a}return n=m(n)||0,h(t)&&(u=!!t.leading,i=(v="maxWait"in t)?d(m(t.maxWait)||0,n):i,y="trailing"in t?!!t.trailing:y),E.cancel=function(){void 0!==s&&clearTimeout(s),l=0,r=c=o=s=void 0},E.flush=function(){return void 0===s?a:x(f())},E}},function(e,n,t){"use strict";var r=t(5),o=t(33),i=t(108),a=t(34),s=t(27),c=t(54),l=t(9),u=t(64),d=Object.getOwnPropertyDescriptor;n.f=r?d:function(e,n){if(e=s(e),n=c(n),u)try{return d(e,n)}catch(e){}if(l(e,n))return a(!o(i.f,e,n),e[n])}},function(e,n,t){"use strict";e.exports=function(e){return null==e}},function(e,n,t){"use strict";var r=t(109),o=t(55);e.exports=function(e){var n=r(e,"string");return o(n)?n:n+""}},function(e,n,t){"use strict";var r=t(28),o=t(1),i=t(56),a=t(57),s=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var n=r("Symbol");return o(n)&&i(n.prototype,s(e))}},function(e,n,t){"use strict";var r=t(2);e.exports=r({}.isPrototypeOf)},function(e,n,t){"use strict";var r=t(58);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,n,t){"use strict";var r=t(59),o=t(3),i=t(0).String;e.exports=!!Object.getOwnPropertySymbols&&!o((function(){var e=Symbol("symbol detection");return!i(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(e,n,t){"use strict";var r,o,i=t(0),a=t(60),s=i.process,c=i.Deno,l=s&&s.versions||c&&c.version,u=l&&l.v8;u&&(o=(r=u.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!o&&a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(o=+r[1]),e.exports=o},function(e,n,t){"use strict";var r=t(0).navigator,o=r&&r.userAgent;e.exports=o?String(o):""},function(e,n,t){"use strict";var r=t(36);e.exports=function(e,n){return r[e]||(r[e]=n||{})}},function(e,n,t){"use strict";e.exports=!1},function(e,n,t){"use strict";var r=t(2),o=0,i=Math.random(),a=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++o+i,36)}},function(e,n,t){"use strict";var r=t(5),o=t(3),i=t(100);e.exports=!r&&!o((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,n,t){"use strict";var r=t(9),o=t(117),i=t(52),a=t(17);e.exports=function(e,n,t){for(var s=o(n),c=a.f,l=i.f,u=0;u<s.length;u++){var d=s[u];r(e,d)||t&&r(t,d)||c(e,d,l(n,d))}}},function(e,n,t){"use strict";var r=t(121);e.exports=function(e){var n=+e;return n!=n||0===n?0:r(n)}},function(e,n,t){"use strict";var r=t(132),o=t(7),i=t(35),a=t(133);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,n=!1,t={};try{(e=r(Object.prototype,"__proto__","set"))(t,[]),n=t instanceof Array}catch(e){}return function(t,r){return i(t),a(r),o(t)?(n?e(t,r):t.__proto__=r,t):t}}():void 0)},function(e,n){e.exports=function(e,n){for(var t=-1,r=n.length,o=e.length;++t<r;)e[o+t]=n[t];return e}},function(e,n){var t="object"==typeof global&&global&&global.Object===Object&&global;e.exports=t},function(e,n,t){var r=t(19),o=t(160),i=t(161),a=t(162),s=t(163),c=t(164);function l(e){var n=this.__data__=new r(e);this.size=n.size}l.prototype.clear=o,l.prototype.delete=i,l.prototype.get=a,l.prototype.has=s,l.prototype.set=c,e.exports=l},function(e,n){e.exports=function(e,n){return e===n||e!=e&&n!=n}},function(e,n,t){var r=t(13),o=t(40);e.exports=function(e){if(!o(e))return!1;var n=r(e);return"[object Function]"==n||"[object GeneratorFunction]"==n||"[object AsyncFunction]"==n||"[object Proxy]"==n}},function(e,n){var t=Function.prototype.toString;e.exports=function(e){if(null!=e){try{return t.call(e)}catch(e){}try{return e+""}catch(e){}}return""}},function(e,n,t){var r=t(181),o=t(12);e.exports=function e(n,t,i,a,s){return n===t||(null==n||null==t||!o(n)&&!o(t)?n!=n&&t!=t:r(n,t,i,a,e,s))}},function(e,n,t){var r=t(76),o=t(184),i=t(77);e.exports=function(e,n,t,a,s,c){var l=1&t,u=e.length,d=n.length;if(u!=d&&!(l&&d>u))return!1;var p=c.get(e),f=c.get(n);if(p&&f)return p==n&&f==e;var h=-1,m=!0,v=2&t?new r:void 0;for(c.set(e,n),c.set(n,e);++h<u;){var y=e[h],g=n[h];if(a)var b=l?a(g,y,h,n,e,c):a(y,g,h,e,n,c);if(void 0!==b){if(b)continue;m=!1;break}if(v){if(!o(n,(function(e,n){if(!i(v,n)&&(y===e||s(y,e,t,a,c)))return v.push(n)}))){m=!1;break}}else if(y!==g&&!s(y,g,t,a,c)){m=!1;break}}return c.delete(e),c.delete(n),m}},function(e,n,t){var r=t(41),o=t(182),i=t(183);function a(e){var n=-1,t=null==e?0:e.length;for(this.__data__=new r;++n<t;)this.add(e[n])}a.prototype.add=a.prototype.push=o,a.prototype.has=i,e.exports=a},function(e,n){e.exports=function(e,n){return e.has(n)}},function(e,n,t){var r=t(194),o=t(200),i=t(82);e.exports=function(e){return i(e)?r(e):o(e)}},function(e,n,t){(function(e){var r=t(8),o=t(196),i=n&&!n.nodeType&&n,a=i&&"object"==typeof e&&e&&!e.nodeType&&e,s=a&&a.exports===i?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||o;e.exports=c}).call(this,t(50)(e))},function(e,n){var t=/^(?:0|[1-9]\d*)$/;e.exports=function(e,n){var r=typeof e;return!!(n=null==n?9007199254740991:n)&&("number"==r||"symbol"!=r&&t.test(e))&&e>-1&&e%1==0&&e<n}},function(e,n,t){var r=t(197),o=t(198),i=t(199),a=i&&i.isTypedArray,s=a?o(a):r;e.exports=s},function(e,n,t){var r=t(72),o=t(43);e.exports=function(e){return null!=e&&o(e.length)&&!r(e)}},function(e,n,t){var r=t(10)(t(8),"Set");e.exports=r},function(e,n,t){var r=t(40);e.exports=function(e){return e==e&&!r(e)}},function(e,n){e.exports=function(e,n){return function(t){return null!=t&&(t[e]===n&&(void 0!==n||e in Object(t)))}}},function(e,n,t){var r=t(87),o=t(23);e.exports=function(e,n){for(var t=0,i=(n=r(n,e)).length;null!=e&&t<i;)e=e[o(n[t++])];return t&&t==i?e:void 0}},function(e,n,t){var r=t(6),o=t(44),i=t(211),a=t(214);e.exports=function(e,n){return r(e)?e:o(e,n)?[e]:i(a(e))}},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){var r=t(147),o=t(152),i=t(223),a=t(231),s=t(240),c=t(105),l=i((function(e){var n=c(e);return s(n)&&(n=void 0),a(r(e,1,s,!0),o(n,2))}));e.exports=l},function(e,n,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;e.exports=function(e){var n,t=""+e,o=r.exec(t);if(!o)return t;var i="",a=0,s=0;for(a=o.index;a<t.length;a++){switch(t.charCodeAt(a)){case 34:n="&quot;";break;case 38:n="&amp;";break;case 39:n="&#39;";break;case 60:n="&lt;";break;case 62:n="&gt;";break;default:continue}s!==a&&(i+=t.substring(s,a)),s=a+1,i+=n}return s!==a?i+t.substring(s,a):i}},function(e){e.exports=JSON.parse('{"en-US":{"author":"author","beforeAuthor":"Copyright © ","afterAuthor":"\\nLink: "},"zh-CN":{"author":"作者","beforeAuthor":"著作权归","afterAuthor":"所有。\\n链接："}}')},function(e,n,t){"use strict";t.r(n);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},o=(t(243),t(4)),i=Object(o.a)(r,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"4f1e9d0c",null);n.default=i.exports},function(e,n,t){"use strict";t.r(n);var r={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(e){this.codeTabs.forEach(e=>{e.elm.classList.remove("theme-code-block__active")}),this.codeTabs[e].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(e=>Boolean(e.componentOptions)).map((e,n)=>(""===e.componentOptions.propsData.active&&(this.activeCodeTabIndex=n),{title:e.componentOptions.propsData.title,elm:e.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(e){this.activeCodeTabIndex=e}}},o=(t(244),t(4)),i=Object(o.a)(r,(function(){var e=this,n=e._self._c;return n("div",{staticClass:"theme-code-group"},[n("div",{staticClass:"theme-code-group__nav"},[n("ul",{staticClass:"theme-code-group__ul"},e._l(e.codeTabs,(function(t,r){return n("li",{key:t.title,staticClass:"theme-code-group__li"},[n("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===e.activeCodeTabIndex},on:{click:function(n){return e.changeCodeTab(r)}}},[e._v("\n            "+e._s(t.title)+"\n          ")])])})),0)]),e._v(" "),e._t("default"),e._v(" "),e.codeTabs.length<1?n("pre",{staticClass:"pre-blank"},[e._v("// Make sure to add code blocks to your code group")]):e._e()],2)}),[],!1,null,"2f5f1757",null);n.default=i.exports},function(e,n,t){"use strict";var r=t(1),o=t(17),i=t(102),a=t(37);e.exports=function(e,n,t,s){s||(s={});var c=s.enumerable,l=void 0!==s.name?s.name:n;if(r(t)&&i(t,l,s),s.global)c?e[n]=t:a(n,t);else{try{s.unsafe?e[n]&&(c=!0):delete e[n]}catch(e){}c?e[n]=t:o.f(e,n,{value:t,enumerable:!1,configurable:!s.nonConfigurable,writable:!s.nonWritable})}return e}},function(e,n,t){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,n,t){"use strict";var r=t(138),o=String;e.exports=function(e){if("Symbol"===r(e))throw new TypeError("Cannot convert a Symbol value to a string");return o(e)}},function(e,n,t){"use strict";var r=t(0),o=t(7),i=r.document,a=o(i)&&o(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,n,t){"use strict";var r=t(5),o=t(3);e.exports=r&&o((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(e,n,t){"use strict";var r=t(2),o=t(3),i=t(1),a=t(9),s=t(5),c=t(113).CONFIGURABLE,l=t(114),u=t(115),d=u.enforce,p=u.get,f=String,h=Object.defineProperty,m=r("".slice),v=r("".replace),y=r([].join),g=s&&!o((function(){return 8!==h((function(){}),"length",{value:8}).length})),b=String(String).split("String"),_=e.exports=function(e,n,t){"Symbol("===m(f(n),0,7)&&(n="["+v(f(n),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(n="get "+n),t&&t.setter&&(n="set "+n),(!a(e,"name")||c&&e.name!==n)&&(s?h(e,"name",{value:n,configurable:!0}):e.name=n),g&&t&&a(t,"arity")&&e.length!==t.arity&&h(e,"length",{value:t.arity});try{t&&a(t,"constructor")&&t.constructor?s&&h(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(e){}var r=d(e);return a(r,"source")||(r.source=y(b,"string"==typeof n?n:"")),e};Function.prototype.toString=_((function(){return i(this)&&p(this).source||l(this)}),"toString")},function(e,n,t){"use strict";var r=t(61),o=t(63),i=r("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},function(e,n,t){"use strict";var r=t(2),o=t(9),i=t(27),a=t(119).indexOf,s=t(49),c=r([].push);e.exports=function(e,n){var t,r=i(e),l=0,u=[];for(t in r)!o(s,t)&&o(r,t)&&c(u,t);for(;n.length>l;)o(r,t=n[l++])&&(~a(u,t)||c(u,t));return u}},function(e,n){e.exports=function(e){var n=null==e?0:e.length;return n?e[n-1]:void 0}},function(e,n,t){e.exports=t(249)},function(e,n,t){"use strict";var r=t(25),o=t(125).left,i=t(126),a=t(59);r({target:"Array",proto:!0,forced:!t(127)&&a>79&&a<83||!i("reduce")},{reduce:function(e){var n=arguments.length;return o(this,e,n,n>1?arguments[1]:void 0)}})},function(e,n,t){"use strict";var r={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!r.call({1:2},1);n.f=i?function(e){var n=o(this,e);return!!n&&n.enumerable}:r},function(e,n,t){"use strict";var r=t(33),o=t(7),i=t(55),a=t(110),s=t(112),c=t(30),l=TypeError,u=c("toPrimitive");e.exports=function(e,n){if(!o(e)||i(e))return e;var t,c=a(e,u);if(c){if(void 0===n&&(n="default"),t=r(c,e,n),!o(t)||i(t))return t;throw new l("Can't convert object to primitive value")}return void 0===n&&(n="number"),s(e,n)}},function(e,n,t){"use strict";var r=t(29),o=t(53);e.exports=function(e,n){var t=e[n];return o(t)?void 0:r(t)}},function(e,n,t){"use strict";var r=String;e.exports=function(e){try{return r(e)}catch(e){return"Object"}}},function(e,n,t){"use strict";var r=t(33),o=t(1),i=t(7),a=TypeError;e.exports=function(e,n){var t,s;if("string"===n&&o(t=e.toString)&&!i(s=r(t,e)))return s;if(o(t=e.valueOf)&&!i(s=r(t,e)))return s;if("string"!==n&&o(t=e.toString)&&!i(s=r(t,e)))return s;throw new a("Can't convert object to primitive value")}},function(e,n,t){"use strict";var r=t(5),o=t(9),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,s=o(i,"name"),c=s&&"something"===function(){}.name,l=s&&(!r||r&&a(i,"name").configurable);e.exports={EXISTS:s,PROPER:c,CONFIGURABLE:l}},function(e,n,t){"use strict";var r=t(2),o=t(1),i=t(36),a=r(Function.toString);o(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},function(e,n,t){"use strict";var r,o,i,a=t(116),s=t(0),c=t(7),l=t(14),u=t(9),d=t(36),p=t(103),f=t(49),h=s.TypeError,m=s.WeakMap;if(a||d.state){var v=d.state||(d.state=new m);v.get=v.get,v.has=v.has,v.set=v.set,r=function(e,n){if(v.has(e))throw new h("Object already initialized");return n.facade=e,v.set(e,n),n},o=function(e){return v.get(e)||{}},i=function(e){return v.has(e)}}else{var y=p("state");f[y]=!0,r=function(e,n){if(u(e,y))throw new h("Object already initialized");return n.facade=e,l(e,y,n),n},o=function(e){return u(e,y)?e[y]:{}},i=function(e){return u(e,y)}}e.exports={set:r,get:o,has:i,enforce:function(e){return i(e)?o(e):r(e,{})},getterFor:function(e){return function(n){var t;if(!c(n)||(t=o(n)).type!==e)throw new h("Incompatible receiver, "+e+" required");return t}}}},function(e,n,t){"use strict";var r=t(0),o=t(1),i=r.WeakMap;e.exports=o(i)&&/native code/.test(String(i))},function(e,n,t){"use strict";var r=t(28),o=t(2),i=t(118),a=t(123),s=t(47),c=o([].concat);e.exports=r("Reflect","ownKeys")||function(e){var n=i.f(s(e)),t=a.f;return t?c(n,t(e)):n}},function(e,n,t){"use strict";var r=t(104),o=t(98).concat("length","prototype");n.f=Object.getOwnPropertyNames||function(e){return r(e,o)}},function(e,n,t){"use strict";var r=t(27),o=t(120),i=t(32),a=function(e){return function(n,t,a){var s=r(n),c=i(s);if(0===c)return!e&&-1;var l,u=o(a,c);if(e&&t!=t){for(;c>u;)if((l=s[u++])!=l)return!0}else for(;c>u;u++)if((e||u in s)&&s[u]===t)return e||u||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,n,t){"use strict";var r=t(66),o=Math.max,i=Math.min;e.exports=function(e,n){var t=r(e);return t<0?o(t+n,0):i(t,n)}},function(e,n,t){"use strict";var r=Math.ceil,o=Math.floor;e.exports=Math.trunc||function(e){var n=+e;return(n>0?o:r)(n)}},function(e,n,t){"use strict";var r=t(66),o=Math.min;e.exports=function(e){var n=r(e);return n>0?o(n,9007199254740991):0}},function(e,n,t){"use strict";n.f=Object.getOwnPropertySymbols},function(e,n,t){"use strict";var r=t(3),o=t(1),i=/#|\.prototype\./,a=function(e,n){var t=c[s(e)];return t===u||t!==l&&(o(n)?r(n):!!n)},s=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},c=a.data={},l=a.NATIVE="N",u=a.POLYFILL="P";e.exports=a},function(e,n,t){"use strict";var r=t(29),o=t(31),i=t(48),a=t(32),s=TypeError,c="Reduce of empty array with no initial value",l=function(e){return function(n,t,l,u){var d=o(n),p=i(d),f=a(d);if(r(t),0===f&&l<2)throw new s(c);var h=e?f-1:0,m=e?-1:1;if(l<2)for(;;){if(h in p){u=p[h],h+=m;break}if(h+=m,e?h<0:f<=h)throw new s(c)}for(;e?h>=0:f>h;h+=m)h in p&&(u=t(u,p[h],h,d));return u}};e.exports={left:l(!1),right:l(!0)}},function(e,n,t){"use strict";var r=t(3);e.exports=function(e,n){var t=[][e];return!!t&&r((function(){t.call(null,n||function(){return 1},1)}))}},function(e,n,t){"use strict";var r=t(128);e.exports="NODE"===r},function(e,n,t){"use strict";var r=t(0),o=t(60),i=t(18),a=function(e){return o.slice(0,e.length)===e};e.exports=a("Bun/")?"BUN":a("Cloudflare-Workers")?"CLOUDFLARE":a("Deno/")?"DENO":a("Node.js/")?"NODE":r.Bun&&"string"==typeof Bun.version?"BUN":r.Deno&&"object"==typeof Deno.version?"DENO":"process"===i(r.process)?"NODE":r.window&&r.document?"BROWSER":"REST"},function(e,n,t){"use strict";var r=t(25),o=t(0),i=t(130),a=t(131),s=o.WebAssembly,c=7!==new Error("e",{cause:7}).cause,l=function(e,n){var t={};t[e]=a(e,n,c),r({global:!0,constructor:!0,arity:1,forced:c},t)},u=function(e,n){if(s&&s[e]){var t={};t[e]=a("WebAssembly."+e,n,c),r({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:c},t)}};l("Error",(function(e){return function(n){return i(e,this,arguments)}})),l("EvalError",(function(e){return function(n){return i(e,this,arguments)}})),l("RangeError",(function(e){return function(n){return i(e,this,arguments)}})),l("ReferenceError",(function(e){return function(n){return i(e,this,arguments)}})),l("SyntaxError",(function(e){return function(n){return i(e,this,arguments)}})),l("TypeError",(function(e){return function(n){return i(e,this,arguments)}})),l("URIError",(function(e){return function(n){return i(e,this,arguments)}})),u("CompileError",(function(e){return function(n){return i(e,this,arguments)}})),u("LinkError",(function(e){return function(n){return i(e,this,arguments)}})),u("RuntimeError",(function(e){return function(n){return i(e,this,arguments)}}))},function(e,n,t){"use strict";var r=t(26),o=Function.prototype,i=o.apply,a=o.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},function(e,n,t){"use strict";var r=t(28),o=t(9),i=t(14),a=t(56),s=t(67),c=t(65),l=t(135),u=t(136),d=t(137),p=t(140),f=t(141),h=t(5),m=t(62);e.exports=function(e,n,t,v){var y=v?2:1,g=e.split("."),b=g[g.length-1],_=r.apply(null,g);if(_){var k=_.prototype;if(!m&&o(k,"cause")&&delete k.cause,!t)return _;var x=r("Error"),E=n((function(e,n){var t=d(v?n:e,void 0),r=v?new _(e):new _;return void 0!==t&&i(r,"message",t),f(r,E,r.stack,2),this&&a(k,this)&&u(r,this,E),arguments.length>y&&p(r,arguments[y]),r}));if(E.prototype=k,"Error"!==b?s?s(E,x):c(E,x,{name:!0}):h&&"stackTraceLimit"in _&&(l(E,_,"stackTraceLimit"),l(E,_,"prepareStackTrace")),c(E,_),!m)try{k.name!==b&&i(k,"name",b),k.constructor=E}catch(e){}return E}}},function(e,n,t){"use strict";var r=t(2),o=t(29);e.exports=function(e,n,t){try{return r(o(Object.getOwnPropertyDescriptor(e,n)[t]))}catch(e){}}},function(e,n,t){"use strict";var r=t(134),o=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw new i("Can't set "+o(e)+" as a prototype")}},function(e,n,t){"use strict";var r=t(7);e.exports=function(e){return r(e)||null===e}},function(e,n,t){"use strict";var r=t(17).f;e.exports=function(e,n,t){t in e||r(e,t,{configurable:!0,get:function(){return n[t]},set:function(e){n[t]=e}})}},function(e,n,t){"use strict";var r=t(1),o=t(7),i=t(67);e.exports=function(e,n,t){var a,s;return i&&r(a=n.constructor)&&a!==t&&o(s=a.prototype)&&s!==t.prototype&&i(e,s),e}},function(e,n,t){"use strict";var r=t(99);e.exports=function(e,n){return void 0===e?arguments.length<2?"":n:r(e)}},function(e,n,t){"use strict";var r=t(139),o=t(1),i=t(18),a=t(30)("toStringTag"),s=Object,c="Arguments"===i(function(){return arguments}());e.exports=r?i:function(e){var n,t,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(t=function(e,n){try{return e[n]}catch(e){}}(n=s(e),a))?t:c?i(n):"Object"===(r=i(n))&&o(n.callee)?"Arguments":r}},function(e,n,t){"use strict";var r={};r[t(30)("toStringTag")]="z",e.exports="[object z]"===String(r)},function(e,n,t){"use strict";var r=t(7),o=t(14);e.exports=function(e,n){r(n)&&"cause"in n&&o(e,"cause",n.cause)}},function(e,n,t){"use strict";var r=t(14),o=t(142),i=t(143),a=Error.captureStackTrace;e.exports=function(e,n,t,s){i&&(a?a(e,n):r(e,"stack",o(t,s)))}},function(e,n,t){"use strict";var r=t(2),o=Error,i=r("".replace),a=String(new o("zxcasd").stack),s=/\n\s*at [^:]*:[^\n]*/,c=s.test(a);e.exports=function(e,n){if(c&&"string"==typeof e&&!o.prepareStackTrace)for(;n--;)e=i(e,s,"");return e}},function(e,n,t){"use strict";var r=t(3),o=t(34);e.exports=!r((function(){var e=new Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",o(1,7)),7!==e.stack)}))},function(e,n,t){"use strict";var r=t(5),o=t(145),i=TypeError,a=Object.getOwnPropertyDescriptor,s=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=s?function(e,n){if(o(e)&&!a(e,"length").writable)throw new i("Cannot set read only .length");return e.length=n}:function(e,n){return e.length=n}},function(e,n,t){"use strict";var r=t(18);e.exports=Array.isArray||function(e){return"Array"===r(e)}},function(e,n,t){"use strict";var r=TypeError;e.exports=function(e){if(e>9007199254740991)throw r("Maximum allowed index exceeded");return e}},function(e,n,t){var r=t(68),o=t(148);e.exports=function e(n,t,i,a,s){var c=-1,l=n.length;for(i||(i=o),s||(s=[]);++c<l;){var u=n[c];t>0&&i(u)?t>1?e(u,t-1,i,a,s):r(s,u):a||(s[s.length]=u)}return s}},function(e,n,t){var r=t(15),o=t(38),i=t(6),a=r?r.isConcatSpreadable:void 0;e.exports=function(e){return i(e)||o(e)||!!(a&&e&&e[a])}},function(e,n,t){var r=t(13),o=t(12);e.exports=function(e){return o(e)&&"[object Arguments]"==r(e)}},function(e,n,t){var r=t(15),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=r?r.toStringTag:void 0;e.exports=function(e){var n=i.call(e,s),t=e[s];try{e[s]=void 0;var r=!0}catch(e){}var o=a.call(e);return r&&(n?e[s]=t:delete e[s]),o}},function(e,n){var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},function(e,n,t){var r=t(153),o=t(209),i=t(46),a=t(6),s=t(220);e.exports=function(e){return"function"==typeof e?e:null==e?i:"object"==typeof e?a(e)?o(e[0],e[1]):r(e):s(e)}},function(e,n,t){var r=t(154),o=t(208),i=t(85);e.exports=function(e){var n=o(e);return 1==n.length&&n[0][2]?i(n[0][0],n[0][1]):function(t){return t===e||r(t,e,n)}}},function(e,n,t){var r=t(70),o=t(74);e.exports=function(e,n,t,i){var a=t.length,s=a,c=!i;if(null==e)return!s;for(e=Object(e);a--;){var l=t[a];if(c&&l[2]?l[1]!==e[l[0]]:!(l[0]in e))return!1}for(;++a<s;){var u=(l=t[a])[0],d=e[u],p=l[1];if(c&&l[2]){if(void 0===d&&!(u in e))return!1}else{var f=new r;if(i)var h=i(d,p,u,e,n,f);if(!(void 0===h?o(p,d,3,i,f):h))return!1}}return!0}},function(e,n){e.exports=function(){this.__data__=[],this.size=0}},function(e,n,t){var r=t(20),o=Array.prototype.splice;e.exports=function(e){var n=this.__data__,t=r(n,e);return!(t<0)&&(t==n.length-1?n.pop():o.call(n,t,1),--this.size,!0)}},function(e,n,t){var r=t(20);e.exports=function(e){var n=this.__data__,t=r(n,e);return t<0?void 0:n[t][1]}},function(e,n,t){var r=t(20);e.exports=function(e){return r(this.__data__,e)>-1}},function(e,n,t){var r=t(20);e.exports=function(e,n){var t=this.__data__,o=r(t,e);return o<0?(++this.size,t.push([e,n])):t[o][1]=n,this}},function(e,n,t){var r=t(19);e.exports=function(){this.__data__=new r,this.size=0}},function(e,n){e.exports=function(e){var n=this.__data__,t=n.delete(e);return this.size=n.size,t}},function(e,n){e.exports=function(e){return this.__data__.get(e)}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n,t){var r=t(19),o=t(39),i=t(41);e.exports=function(e,n){var t=this.__data__;if(t instanceof r){var a=t.__data__;if(!o||a.length<199)return a.push([e,n]),this.size=++t.size,this;t=this.__data__=new i(a)}return t.set(e,n),this.size=t.size,this}},function(e,n,t){var r=t(72),o=t(166),i=t(40),a=t(73),s=/^\[object .+?Constructor\]$/,c=Function.prototype,l=Object.prototype,u=c.toString,d=l.hasOwnProperty,p=RegExp("^"+u.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");e.exports=function(e){return!(!i(e)||o(e))&&(r(e)?p:s).test(a(e))}},function(e,n,t){var r,o=t(167),i=(r=/[^.]+$/.exec(o&&o.keys&&o.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";e.exports=function(e){return!!i&&i in e}},function(e,n,t){var r=t(8)["__core-js_shared__"];e.exports=r},function(e,n){e.exports=function(e,n){return null==e?void 0:e[n]}},function(e,n,t){var r=t(170),o=t(19),i=t(39);e.exports=function(){this.size=0,this.__data__={hash:new r,map:new(i||o),string:new r}}},function(e,n,t){var r=t(171),o=t(172),i=t(173),a=t(174),s=t(175);function c(e){var n=-1,t=null==e?0:e.length;for(this.clear();++n<t;){var r=e[n];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=a,c.prototype.set=s,e.exports=c},function(e,n,t){var r=t(21);e.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(e,n){e.exports=function(e){var n=this.has(e)&&delete this.__data__[e];return this.size-=n?1:0,n}},function(e,n,t){var r=t(21),o=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;if(r){var t=n[e];return"__lodash_hash_undefined__"===t?void 0:t}return o.call(n,e)?n[e]:void 0}},function(e,n,t){var r=t(21),o=Object.prototype.hasOwnProperty;e.exports=function(e){var n=this.__data__;return r?void 0!==n[e]:o.call(n,e)}},function(e,n,t){var r=t(21);e.exports=function(e,n){var t=this.__data__;return this.size+=this.has(e)?0:1,t[e]=r&&void 0===n?"__lodash_hash_undefined__":n,this}},function(e,n,t){var r=t(22);e.exports=function(e){var n=r(this,e).delete(e);return this.size-=n?1:0,n}},function(e,n){e.exports=function(e){var n=typeof e;return"string"==n||"number"==n||"symbol"==n||"boolean"==n?"__proto__"!==e:null===e}},function(e,n,t){var r=t(22);e.exports=function(e){return r(this,e).get(e)}},function(e,n,t){var r=t(22);e.exports=function(e){return r(this,e).has(e)}},function(e,n,t){var r=t(22);e.exports=function(e,n){var t=r(this,e),o=t.size;return t.set(e,n),this.size+=t.size==o?0:1,this}},function(e,n,t){var r=t(70),o=t(75),i=t(185),a=t(188),s=t(204),c=t(6),l=t(79),u=t(81),d="[object Object]",p=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,f,h,m){var v=c(e),y=c(n),g=v?"[object Array]":s(e),b=y?"[object Array]":s(n),_=(g="[object Arguments]"==g?d:g)==d,k=(b="[object Arguments]"==b?d:b)==d,x=g==b;if(x&&l(e)){if(!l(n))return!1;v=!0,_=!1}if(x&&!_)return m||(m=new r),v||u(e)?o(e,n,t,f,h,m):i(e,n,g,t,f,h,m);if(!(1&t)){var E=_&&p.call(e,"__wrapped__"),w=k&&p.call(n,"__wrapped__");if(E||w){var C=E?e.value():e,A=w?n.value():n;return m||(m=new r),h(C,A,t,f,m)}}return!!x&&(m||(m=new r),a(e,n,t,f,h,m))}},function(e,n){e.exports=function(e){return this.__data__.set(e,"__lodash_hash_undefined__"),this}},function(e,n){e.exports=function(e){return this.__data__.has(e)}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length;++t<r;)if(n(e[t],t,e))return!0;return!1}},function(e,n,t){var r=t(15),o=t(186),i=t(71),a=t(75),s=t(187),c=t(42),l=r?r.prototype:void 0,u=l?l.valueOf:void 0;e.exports=function(e,n,t,r,l,d,p){switch(t){case"[object DataView]":if(e.byteLength!=n.byteLength||e.byteOffset!=n.byteOffset)return!1;e=e.buffer,n=n.buffer;case"[object ArrayBuffer]":return!(e.byteLength!=n.byteLength||!d(new o(e),new o(n)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+e,+n);case"[object Error]":return e.name==n.name&&e.message==n.message;case"[object RegExp]":case"[object String]":return e==n+"";case"[object Map]":var f=s;case"[object Set]":var h=1&r;if(f||(f=c),e.size!=n.size&&!h)return!1;var m=p.get(e);if(m)return m==n;r|=2,p.set(e,n);var v=a(f(e),f(n),r,l,d,p);return p.delete(e),v;case"[object Symbol]":if(u)return u.call(e)==u.call(n)}return!1}},function(e,n,t){var r=t(8).Uint8Array;e.exports=r},function(e,n){e.exports=function(e){var n=-1,t=Array(e.size);return e.forEach((function(e,r){t[++n]=[r,e]})),t}},function(e,n,t){var r=t(189),o=Object.prototype.hasOwnProperty;e.exports=function(e,n,t,i,a,s){var c=1&t,l=r(e),u=l.length;if(u!=r(n).length&&!c)return!1;for(var d=u;d--;){var p=l[d];if(!(c?p in n:o.call(n,p)))return!1}var f=s.get(e),h=s.get(n);if(f&&h)return f==n&&h==e;var m=!0;s.set(e,n),s.set(n,e);for(var v=c;++d<u;){var y=e[p=l[d]],g=n[p];if(i)var b=c?i(g,y,p,n,e,s):i(y,g,p,e,n,s);if(!(void 0===b?y===g||a(y,g,t,i,s):b)){m=!1;break}v||(v="constructor"==p)}if(m&&!v){var _=e.constructor,k=n.constructor;_==k||!("constructor"in e)||!("constructor"in n)||"function"==typeof _&&_ instanceof _&&"function"==typeof k&&k instanceof k||(m=!1)}return s.delete(e),s.delete(n),m}},function(e,n,t){var r=t(190),o=t(191),i=t(78);e.exports=function(e){return r(e,i,o)}},function(e,n,t){var r=t(68),o=t(6);e.exports=function(e,n,t){var i=n(e);return o(e)?i:r(i,t(e))}},function(e,n,t){var r=t(192),o=t(193),i=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(e){return null==e?[]:(e=Object(e),r(a(e),(function(n){return i.call(e,n)})))}:o;e.exports=s},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,o=0,i=[];++t<r;){var a=e[t];n(a,t,e)&&(i[o++]=a)}return i}},function(e,n){e.exports=function(){return[]}},function(e,n,t){var r=t(195),o=t(38),i=t(6),a=t(79),s=t(80),c=t(81),l=Object.prototype.hasOwnProperty;e.exports=function(e,n){var t=i(e),u=!t&&o(e),d=!t&&!u&&a(e),p=!t&&!u&&!d&&c(e),f=t||u||d||p,h=f?r(e.length,String):[],m=h.length;for(var v in e)!n&&!l.call(e,v)||f&&("length"==v||d&&("offset"==v||"parent"==v)||p&&("buffer"==v||"byteLength"==v||"byteOffset"==v)||s(v,m))||h.push(v);return h}},function(e,n){e.exports=function(e,n){for(var t=-1,r=Array(e);++t<e;)r[t]=n(t);return r}},function(e,n){e.exports=function(){return!1}},function(e,n,t){var r=t(13),o=t(43),i=t(12),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,e.exports=function(e){return i(e)&&o(e.length)&&!!a[r(e)]}},function(e,n){e.exports=function(e){return function(n){return e(n)}}},function(e,n,t){(function(e){var r=t(69),o=n&&!n.nodeType&&n,i=o&&"object"==typeof e&&e&&!e.nodeType&&e,a=i&&i.exports===o&&r.process,s=function(){try{var e=i&&i.require&&i.require("util").types;return e||a&&a.binding&&a.binding("util")}catch(e){}}();e.exports=s}).call(this,t(50)(e))},function(e,n,t){var r=t(201),o=t(202),i=Object.prototype.hasOwnProperty;e.exports=function(e){if(!r(e))return o(e);var n=[];for(var t in Object(e))i.call(e,t)&&"constructor"!=t&&n.push(t);return n}},function(e,n){var t=Object.prototype;e.exports=function(e){var n=e&&e.constructor;return e===("function"==typeof n&&n.prototype||t)}},function(e,n,t){var r=t(203)(Object.keys,Object);e.exports=r},function(e,n){e.exports=function(e,n){return function(t){return e(n(t))}}},function(e,n,t){var r=t(205),o=t(39),i=t(206),a=t(83),s=t(207),c=t(13),l=t(73),u=l(r),d=l(o),p=l(i),f=l(a),h=l(s),m=c;(r&&"[object DataView]"!=m(new r(new ArrayBuffer(1)))||o&&"[object Map]"!=m(new o)||i&&"[object Promise]"!=m(i.resolve())||a&&"[object Set]"!=m(new a)||s&&"[object WeakMap]"!=m(new s))&&(m=function(e){var n=c(e),t="[object Object]"==n?e.constructor:void 0,r=t?l(t):"";if(r)switch(r){case u:return"[object DataView]";case d:return"[object Map]";case p:return"[object Promise]";case f:return"[object Set]";case h:return"[object WeakMap]"}return n}),e.exports=m},function(e,n,t){var r=t(10)(t(8),"DataView");e.exports=r},function(e,n,t){var r=t(10)(t(8),"Promise");e.exports=r},function(e,n,t){var r=t(10)(t(8),"WeakMap");e.exports=r},function(e,n,t){var r=t(84),o=t(78);e.exports=function(e){for(var n=o(e),t=n.length;t--;){var i=n[t],a=e[i];n[t]=[i,a,r(a)]}return n}},function(e,n,t){var r=t(74),o=t(210),i=t(217),a=t(44),s=t(84),c=t(85),l=t(23);e.exports=function(e,n){return a(e)&&s(n)?c(l(e),n):function(t){var a=o(t,e);return void 0===a&&a===n?i(t,e):r(n,a,3)}}},function(e,n,t){var r=t(86);e.exports=function(e,n,t){var o=null==e?void 0:r(e,n);return void 0===o?t:o}},function(e,n,t){var r=t(212),o=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,a=r((function(e){var n=[];return 46===e.charCodeAt(0)&&n.push(""),e.replace(o,(function(e,t,r,o){n.push(r?o.replace(i,"$1"):t||e)})),n}));e.exports=a},function(e,n,t){var r=t(213);e.exports=function(e){var n=r(e,(function(e){return 500===t.size&&t.clear(),e})),t=n.cache;return n}},function(e,n,t){var r=t(41);function o(e,n){if("function"!=typeof e||null!=n&&"function"!=typeof n)throw new TypeError("Expected a function");var t=function(){var r=arguments,o=n?n.apply(this,r):r[0],i=t.cache;if(i.has(o))return i.get(o);var a=e.apply(this,r);return t.cache=i.set(o,a)||i,a};return t.cache=new(o.Cache||r),t}o.Cache=r,e.exports=o},function(e,n,t){var r=t(215);e.exports=function(e){return null==e?"":r(e)}},function(e,n,t){var r=t(15),o=t(216),i=t(6),a=t(45),s=r?r.prototype:void 0,c=s?s.toString:void 0;e.exports=function e(n){if("string"==typeof n)return n;if(i(n))return o(n,e)+"";if(a(n))return c?c.call(n):"";var t=n+"";return"0"==t&&1/n==-1/0?"-0":t}},function(e,n){e.exports=function(e,n){for(var t=-1,r=null==e?0:e.length,o=Array(r);++t<r;)o[t]=n(e[t],t,e);return o}},function(e,n,t){var r=t(218),o=t(219);e.exports=function(e,n){return null!=e&&o(e,n,r)}},function(e,n){e.exports=function(e,n){return null!=e&&n in Object(e)}},function(e,n,t){var r=t(87),o=t(38),i=t(6),a=t(80),s=t(43),c=t(23);e.exports=function(e,n,t){for(var l=-1,u=(n=r(n,e)).length,d=!1;++l<u;){var p=c(n[l]);if(!(d=null!=e&&t(e,p)))break;e=e[p]}return d||++l!=u?d:!!(u=null==e?0:e.length)&&s(u)&&a(p,u)&&(i(e)||o(e))}},function(e,n,t){var r=t(221),o=t(222),i=t(44),a=t(23);e.exports=function(e){return i(e)?r(a(e)):o(e)}},function(e,n){e.exports=function(e){return function(n){return null==n?void 0:n[e]}}},function(e,n,t){var r=t(86);e.exports=function(e){return function(n){return r(n,e)}}},function(e,n,t){var r=t(46),o=t(224),i=t(226);e.exports=function(e,n){return i(o(e,n,r),e+"")}},function(e,n,t){var r=t(225),o=Math.max;e.exports=function(e,n,t){return n=o(void 0===n?e.length-1:n,0),function(){for(var i=arguments,a=-1,s=o(i.length-n,0),c=Array(s);++a<s;)c[a]=i[n+a];a=-1;for(var l=Array(n+1);++a<n;)l[a]=i[a];return l[n]=t(c),r(e,this,l)}}},function(e,n){e.exports=function(e,n,t){switch(t.length){case 0:return e.call(n);case 1:return e.call(n,t[0]);case 2:return e.call(n,t[0],t[1]);case 3:return e.call(n,t[0],t[1],t[2])}return e.apply(n,t)}},function(e,n,t){var r=t(227),o=t(230)(r);e.exports=o},function(e,n,t){var r=t(228),o=t(229),i=t(46),a=o?function(e,n){return o(e,"toString",{configurable:!0,enumerable:!1,value:r(n),writable:!0})}:i;e.exports=a},function(e,n){e.exports=function(e){return function(){return e}}},function(e,n,t){var r=t(10),o=function(){try{var e=r(Object,"defineProperty");return e({},"",{}),e}catch(e){}}();e.exports=o},function(e,n){var t=Date.now;e.exports=function(e){var n=0,r=0;return function(){var o=t(),i=16-(o-r);if(r=o,i>0){if(++n>=800)return arguments[0]}else n=0;return e.apply(void 0,arguments)}}},function(e,n,t){var r=t(76),o=t(232),i=t(237),a=t(77),s=t(238),c=t(42);e.exports=function(e,n,t){var l=-1,u=o,d=e.length,p=!0,f=[],h=f;if(t)p=!1,u=i;else if(d>=200){var m=n?null:s(e);if(m)return c(m);p=!1,u=a,h=new r}else h=n?[]:f;e:for(;++l<d;){var v=e[l],y=n?n(v):v;if(v=t||0!==v?v:0,p&&y==y){for(var g=h.length;g--;)if(h[g]===y)continue e;n&&h.push(y),f.push(v)}else u(h,y,t)||(h!==f&&h.push(y),f.push(v))}return f}},function(e,n,t){var r=t(233);e.exports=function(e,n){return!!(null==e?0:e.length)&&r(e,n,0)>-1}},function(e,n,t){var r=t(234),o=t(235),i=t(236);e.exports=function(e,n,t){return n==n?i(e,n,t):r(e,o,t)}},function(e,n){e.exports=function(e,n,t,r){for(var o=e.length,i=t+(r?1:-1);r?i--:++i<o;)if(n(e[i],i,e))return i;return-1}},function(e,n){e.exports=function(e){return e!=e}},function(e,n){e.exports=function(e,n,t){for(var r=t-1,o=e.length;++r<o;)if(e[r]===n)return r;return-1}},function(e,n){e.exports=function(e,n,t){for(var r=-1,o=null==e?0:e.length;++r<o;)if(t(n,e[r]))return!0;return!1}},function(e,n,t){var r=t(83),o=t(239),i=t(42),a=r&&1/i(new r([,-0]))[1]==1/0?function(e){return new r(e)}:o;e.exports=a},function(e,n){e.exports=function(){}},function(e,n,t){var r=t(82),o=t(12);e.exports=function(e){return o(e)&&r(e)}},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(88)},function(e,n,t){"use strict";t(89)},function(e,n,t){},function(e,n,t){},function(e,n,t){"use strict";t(90)},function(e,n,t){"use strict";t(91)},function(e,n,t){"use strict";t.r(n);
/*!
 * Vue.js v2.7.16
 * (c) 2014-2023 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({}),o=Array.isArray;function i(e){return null==e}function a(e){return null!=e}function s(e){return!0===e}function c(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function l(e){return"function"==typeof e}function u(e){return null!==e&&"object"==typeof e}var d=Object.prototype.toString;function p(e){return"[object Object]"===d.call(e)}function f(e){return"[object RegExp]"===d.call(e)}function m(e){var n=parseFloat(String(e));return n>=0&&Math.floor(n)===n&&isFinite(e)}function v(e){return a(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function y(e){return null==e?"":Array.isArray(e)||p(e)&&e.toString===d?JSON.stringify(e,g,2):String(e)}function g(e,n){return n&&n.__v_isRef?n.value:n}function b(e){var n=parseFloat(e);return isNaN(n)?e:n}function _(e,n){for(var t=Object.create(null),r=e.split(","),o=0;o<r.length;o++)t[r[o]]=!0;return n?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}_("slot,component",!0);var k=_("key,ref,slot,slot-scope,is");function x(e,n){var t=e.length;if(t){if(n===e[t-1])return void(e.length=t-1);var r=e.indexOf(n);if(r>-1)return e.splice(r,1)}}var E=Object.prototype.hasOwnProperty;function w(e,n){return E.call(e,n)}function C(e){var n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}var A=/-(\w)/g,L=C((function(e){return e.replace(A,(function(e,n){return n?n.toUpperCase():""}))})),O=C((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),T=/\B([A-Z])/g,S=C((function(e){return e.replace(T,"-$1").toLowerCase()}));var j=Function.prototype.bind?function(e,n){return e.bind(n)}:function(e,n){function t(t){var r=arguments.length;return r?r>1?e.apply(n,arguments):e.call(n,t):e.call(n)}return t._length=e.length,t};function U(e,n){n=n||0;for(var t=e.length-n,r=new Array(t);t--;)r[t]=e[t+n];return r}function R(e,n){for(var t in n)e[t]=n[t];return e}function P(e){for(var n={},t=0;t<e.length;t++)e[t]&&R(n,e[t]);return n}function I(e,n,t){}var $=function(e,n,t){return!1},B=function(e){return e};function z(e,n){if(e===n)return!0;var t=u(e),r=u(n);if(!t||!r)return!t&&!r&&String(e)===String(n);try{var o=Array.isArray(e),i=Array.isArray(n);if(o&&i)return e.length===n.length&&e.every((function(e,t){return z(e,n[t])}));if(e instanceof Date&&n instanceof Date)return e.getTime()===n.getTime();if(o||i)return!1;var a=Object.keys(e),s=Object.keys(n);return a.length===s.length&&a.every((function(t){return z(e[t],n[t])}))}catch(e){return!1}}function M(e,n){for(var t=0;t<e.length;t++)if(z(e[t],n))return t;return-1}function F(e){var n=!1;return function(){n||(n=!0,e.apply(this,arguments))}}function D(e,n){return e===n?0===e&&1/e!=1/n:e==e||n==n}var N=["component","directive","filter"],q=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],K={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:$,isReservedAttr:$,isUnknownElement:$,getTagNamespace:I,parsePlatformTagName:B,mustUseProp:$,async:!0,_lifecycleHooks:q},H=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function V(e){var n=(e+"").charCodeAt(0);return 36===n||95===n}function G(e,n,t,r){Object.defineProperty(e,n,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var W=new RegExp("[^".concat(H.source,".$_\\d]"));var X="__proto__"in{},Z="undefined"!=typeof window,Y=Z&&window.navigator.userAgent.toLowerCase(),J=Y&&/msie|trident/.test(Y),Q=Y&&Y.indexOf("msie 9.0")>0,ee=Y&&Y.indexOf("edge/")>0;Y&&Y.indexOf("android");var ne=Y&&/iphone|ipad|ipod|ios/.test(Y);Y&&/chrome\/\d+/.test(Y),Y&&/phantomjs/.test(Y);var te,re=Y&&Y.match(/firefox\/(\d+)/),oe={}.watch,ie=!1;if(Z)try{var ae={};Object.defineProperty(ae,"passive",{get:function(){ie=!0}}),window.addEventListener("test-passive",null,ae)}catch(e){}var se=function(){return void 0===te&&(te=!Z&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),te},ce=Z&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function le(e){return"function"==typeof e&&/native code/.test(e.toString())}var ue,de="undefined"!=typeof Symbol&&le(Symbol)&&"undefined"!=typeof Reflect&&le(Reflect.ownKeys);ue="undefined"!=typeof Set&&le(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var pe=null;function fe(e){void 0===e&&(e=null),e||pe&&pe._scope.off(),pe=e,e&&e._scope.on()}var he=function(){function e(e,n,t,r,o,i,a,s){this.tag=e,this.data=n,this.children=t,this.text=r,this.elm=o,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=n&&n.key,this.componentOptions=a,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),me=function(e){void 0===e&&(e="");var n=new he;return n.text=e,n.isComment=!0,n};function ve(e){return new he(void 0,void 0,void 0,String(e))}function ye(e){var n=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return n.ns=e.ns,n.isStatic=e.isStatic,n.key=e.key,n.isComment=e.isComment,n.fnContext=e.fnContext,n.fnOptions=e.fnOptions,n.fnScopeId=e.fnScopeId,n.asyncMeta=e.asyncMeta,n.isCloned=!0,n}"function"==typeof SuppressedError&&SuppressedError;var ge=0,be=[],_e=function(){function e(){this._pending=!1,this.id=ge++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,be.push(this))},e.prototype.depend=function(n){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var n=this.subs.filter((function(e){return e}));for(var t=0,r=n.length;t<r;t++){0,n[t].update()}},e}();_e.target=null;var ke=[];function xe(e){ke.push(e),_e.target=e}function Ee(){ke.pop(),_e.target=ke[ke.length-1]}var we=Array.prototype,Ce=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var n=we[e];G(Ce,e,(function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var o,i=n.apply(this,t),a=this.__ob__;switch(e){case"push":case"unshift":o=t;break;case"splice":o=t.slice(2)}return o&&a.observeArray(o),a.dep.notify(),i}))}));var Ae=Object.getOwnPropertyNames(Ce),Le={},Oe=!0;function Te(e){Oe=e}var Se={notify:I,depend:I,addSub:I,removeSub:I},je=function(){function e(e,n,t){if(void 0===n&&(n=!1),void 0===t&&(t=!1),this.value=e,this.shallow=n,this.mock=t,this.dep=t?Se:new _e,this.vmCount=0,G(e,"__ob__",this),o(e)){if(!t)if(X)e.__proto__=Ce;else for(var r=0,i=Ae.length;r<i;r++){G(e,s=Ae[r],Ce[s])}n||this.observeArray(e)}else{var a=Object.keys(e);for(r=0;r<a.length;r++){var s;Re(e,s=a[r],Le,void 0,n,t)}}}return e.prototype.observeArray=function(e){for(var n=0,t=e.length;n<t;n++)Ue(e[n],!1,this.mock)},e}();function Ue(e,n,t){return e&&w(e,"__ob__")&&e.__ob__ instanceof je?e.__ob__:!Oe||!t&&se()||!o(e)&&!p(e)||!Object.isExtensible(e)||e.__v_skip||Fe(e)||e instanceof he?void 0:new je(e,n,t)}function Re(e,n,t,r,i,a,s){void 0===s&&(s=!1);var c=new _e,l=Object.getOwnPropertyDescriptor(e,n);if(!l||!1!==l.configurable){var u=l&&l.get,d=l&&l.set;u&&!d||t!==Le&&2!==arguments.length||(t=e[n]);var p=i?t&&t.__ob__:Ue(t,!1,a);return Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){var n=u?u.call(e):t;return _e.target&&(c.depend(),p&&(p.dep.depend(),o(n)&&$e(n))),Fe(n)&&!i?n.value:n},set:function(n){var r=u?u.call(e):t;if(D(r,n)){if(d)d.call(e,n);else{if(u)return;if(!i&&Fe(r)&&!Fe(n))return void(r.value=n);t=n}p=i?n&&n.__ob__:Ue(n,!1,a),c.notify()}}}),c}}function Pe(e,n,t){if(!Me(e)){var r=e.__ob__;return o(e)&&m(n)?(e.length=Math.max(e.length,n),e.splice(n,1,t),r&&!r.shallow&&r.mock&&Ue(t,!1,!0),t):n in e&&!(n in Object.prototype)?(e[n]=t,t):e._isVue||r&&r.vmCount?t:r?(Re(r.value,n,t,void 0,r.shallow,r.mock),r.dep.notify(),t):(e[n]=t,t)}}function Ie(e,n){if(o(e)&&m(n))e.splice(n,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Me(e)||w(e,n)&&(delete e[n],t&&t.dep.notify())}}function $e(e){for(var n=void 0,t=0,r=e.length;t<r;t++)(n=e[t])&&n.__ob__&&n.__ob__.dep.depend(),o(n)&&$e(n)}function Be(e){return ze(e,!0),G(e,"__v_isShallow",!0),e}function ze(e,n){if(!Me(e)){Ue(e,n,se());0}}function Me(e){return!(!e||!e.__v_isReadonly)}function Fe(e){return!(!e||!0!==e.__v_isRef)}function De(e,n,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=n[t];if(Fe(e))return e.value;var r=e&&e.__ob__;return r&&r.dep.depend(),e},set:function(e){var r=n[t];Fe(r)&&!Fe(e)?r.value=e:n[t]=e}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var Ne;var qe=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=Ne,!e&&Ne&&(this.index=(Ne.scopes||(Ne.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var n=Ne;try{return Ne=this,e()}finally{Ne=n}}else 0},e.prototype.on=function(){Ne=this},e.prototype.off=function(){Ne=this.parent},e.prototype.stop=function(e){if(this.active){var n=void 0,t=void 0;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].teardown();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!e){var r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0,this.active=!1}},e}();function Ke(e){var n=e._provided,t=e.$parent&&e.$parent._provided;return t===n?e._provided=Object.create(t):n}var He=C((function(e){var n="&"===e.charAt(0),t="~"===(e=n?e.slice(1):e).charAt(0),r="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=r?e.slice(1):e,once:t,capture:r,passive:n}}));function Ve(e,n){function t(){var e=t.fns;if(!o(e))return Tn(e,null,arguments,n,"v-on handler");for(var r=e.slice(),i=0;i<r.length;i++)Tn(r[i],null,arguments,n,"v-on handler")}return t.fns=e,t}function Ge(e,n,t,r,o,a){var c,l,u,d;for(c in e)l=e[c],u=n[c],d=He(c),i(l)||(i(u)?(i(l.fns)&&(l=e[c]=Ve(l,a)),s(d.once)&&(l=e[c]=o(d.name,l,d.capture)),t(d.name,l,d.capture,d.passive,d.params)):l!==u&&(u.fns=l,e[c]=u));for(c in n)i(e[c])&&r((d=He(c)).name,n[c],d.capture)}function We(e,n,t){var r;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[n];function c(){t.apply(this,arguments),x(r.fns,c)}i(o)?r=Ve([c]):a(o.fns)&&s(o.merged)?(r=o).fns.push(c):r=Ve([o,c]),r.merged=!0,e[n]=r}function Xe(e,n,t,r,o){if(a(n)){if(w(n,t))return e[t]=n[t],o||delete n[t],!0;if(w(n,r))return e[t]=n[r],o||delete n[r],!0}return!1}function Ze(e){return c(e)?[ve(e)]:o(e)?function e(n,t){var r,l,u,d,p=[];for(r=0;r<n.length;r++)i(l=n[r])||"boolean"==typeof l||(u=p.length-1,d=p[u],o(l)?l.length>0&&(Ye((l=e(l,"".concat(t||"","_").concat(r)))[0])&&Ye(d)&&(p[u]=ve(d.text+l[0].text),l.shift()),p.push.apply(p,l)):c(l)?Ye(d)?p[u]=ve(d.text+l):""!==l&&p.push(ve(l)):Ye(l)&&Ye(d)?p[u]=ve(d.text+l.text):(s(n._isVList)&&a(l.tag)&&i(l.key)&&a(t)&&(l.key="__vlist".concat(t,"_").concat(r,"__")),p.push(l)));return p}(e):void 0}function Ye(e){return a(e)&&a(e.text)&&!1===e.isComment}function Je(e,n){var t,r,i,s,c=null;if(o(e)||"string"==typeof e)for(c=new Array(e.length),t=0,r=e.length;t<r;t++)c[t]=n(e[t],t);else if("number"==typeof e)for(c=new Array(e),t=0;t<e;t++)c[t]=n(t+1,t);else if(u(e))if(de&&e[Symbol.iterator]){c=[];for(var l=e[Symbol.iterator](),d=l.next();!d.done;)c.push(n(d.value,c.length)),d=l.next()}else for(i=Object.keys(e),c=new Array(i.length),t=0,r=i.length;t<r;t++)s=i[t],c[t]=n(e[s],s,t);return a(c)||(c=[]),c._isVList=!0,c}function Qe(e,n,t,r){var o,i=this.$scopedSlots[e];i?(t=t||{},r&&(t=R(R({},r),t)),o=i(t)||(l(n)?n():n)):o=this.$slots[e]||(l(n)?n():n);var a=t&&t.slot;return a?this.$createElement("template",{slot:a},o):o}function en(e){return Ut(this.$options,"filters",e,!0)||B}function nn(e,n){return o(e)?-1===e.indexOf(n):e!==n}function tn(e,n,t,r,o){var i=K.keyCodes[n]||t;return o&&r&&!K.keyCodes[n]?nn(o,r):i?nn(i,e):r?S(r)!==n:void 0===e}function rn(e,n,t,r,i){if(t)if(u(t)){o(t)&&(t=P(t));var a=void 0,s=function(o){if("class"===o||"style"===o||k(o))a=e;else{var s=e.attrs&&e.attrs.type;a=r||K.mustUseProp(n,s,o)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var c=L(o),l=S(o);c in a||l in a||(a[o]=t[o],i&&((e.on||(e.on={}))["update:".concat(o)]=function(e){t[o]=e}))};for(var c in t)s(c)}else;return e}function on(e,n){var t=this._staticTrees||(this._staticTrees=[]),r=t[e];return r&&!n||sn(r=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),r}function an(e,n,t){return sn(e,"__once__".concat(n).concat(t?"_".concat(t):""),!0),e}function sn(e,n,t){if(o(e))for(var r=0;r<e.length;r++)e[r]&&"string"!=typeof e[r]&&cn(e[r],"".concat(n,"_").concat(r),t);else cn(e,n,t)}function cn(e,n,t){e.isStatic=!0,e.key=n,e.isOnce=t}function ln(e,n){if(n)if(p(n)){var t=e.on=e.on?R({},e.on):{};for(var r in n){var o=t[r],i=n[r];t[r]=o?[].concat(o,i):i}}else;return e}function un(e,n,t,r){n=n||{$stable:!t};for(var i=0;i<e.length;i++){var a=e[i];o(a)?un(a,n,t):a&&(a.proxy&&(a.fn.proxy=!0),n[a.key]=a.fn)}return r&&(n.$key=r),n}function dn(e,n){for(var t=0;t<n.length;t+=2){var r=n[t];"string"==typeof r&&r&&(e[n[t]]=n[t+1])}return e}function pn(e,n){return"string"==typeof e?n+e:e}function fn(e){e._o=an,e._n=b,e._s=y,e._l=Je,e._t=Qe,e._q=z,e._i=M,e._m=on,e._f=en,e._k=tn,e._b=rn,e._v=ve,e._e=me,e._u=un,e._g=ln,e._d=dn,e._p=pn}function hn(e,n){if(!e||!e.length)return{};for(var t={},r=0,o=e.length;r<o;r++){var i=e[r],a=i.data;if(a&&a.attrs&&a.attrs.slot&&delete a.attrs.slot,i.context!==n&&i.fnContext!==n||!a||null==a.slot)(t.default||(t.default=[])).push(i);else{var s=a.slot,c=t[s]||(t[s]=[]);"template"===i.tag?c.push.apply(c,i.children||[]):c.push(i)}}for(var l in t)t[l].every(mn)&&delete t[l];return t}function mn(e){return e.isComment&&!e.asyncFactory||" "===e.text}function vn(e){return e.isComment&&e.asyncFactory}function yn(e,n,t,o){var i,a=Object.keys(t).length>0,s=n?!!n.$stable:!a,c=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(s&&o&&o!==r&&c===o.$key&&!a&&!o.$hasNormal)return o;for(var l in i={},n)n[l]&&"$"!==l[0]&&(i[l]=gn(e,t,l,n[l]))}else i={};for(var u in t)u in i||(i[u]=bn(t,u));return n&&Object.isExtensible(n)&&(n._normalized=i),G(i,"$stable",s),G(i,"$key",c),G(i,"$hasNormal",a),i}function gn(e,n,t,r){var i=function(){var n=pe;fe(e);var t=arguments.length?r.apply(null,arguments):r({}),i=(t=t&&"object"==typeof t&&!o(t)?[t]:Ze(t))&&t[0];return fe(n),t&&(!i||1===t.length&&i.isComment&&!vn(i))?void 0:t};return r.proxy&&Object.defineProperty(n,t,{get:i,enumerable:!0,configurable:!0}),i}function bn(e,n){return function(){return e[n]}}function _n(e){return{get attrs(){if(!e._attrsProxy){var n=e._attrsProxy={};G(n,"_v_attr_proxy",!0),kn(n,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||kn(e._listenersProxy={},e.$listeners,r,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||En(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:j(e.$emit,e),expose:function(n){n&&Object.keys(n).forEach((function(t){return De(e,n,t)}))}}}function kn(e,n,t,r,o){var i=!1;for(var a in n)a in e?n[a]!==t[a]&&(i=!0):(i=!0,xn(e,a,r,o));for(var a in e)a in n||(i=!0,delete e[a]);return i}function xn(e,n,t,r){Object.defineProperty(e,n,{enumerable:!0,configurable:!0,get:function(){return t[r][n]}})}function En(e,n){for(var t in n)e[t]=n[t];for(var t in e)t in n||delete e[t]}var wn=null;function Cn(e,n){return(e.__esModule||de&&"Module"===e[Symbol.toStringTag])&&(e=e.default),u(e)?n.extend(e):e}function An(e){if(o(e))for(var n=0;n<e.length;n++){var t=e[n];if(a(t)&&(a(t.componentOptions)||vn(t)))return t}}function Ln(e,n,t,r,d,p){return(o(t)||c(t))&&(d=r,r=t,t=void 0),s(p)&&(d=2),function(e,n,t,r,c){if(a(t)&&a(t.__ob__))return me();a(t)&&a(t.is)&&(n=t.is);if(!n)return me();0;o(r)&&l(r[0])&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===c?r=Ze(r):1===c&&(r=function(e){for(var n=0;n<e.length;n++)if(o(e[n]))return Array.prototype.concat.apply([],e);return e}(r));var d,p;if("string"==typeof n){var f=void 0;p=e.$vnode&&e.$vnode.ns||K.getTagNamespace(n),d=K.isReservedTag(n)?new he(K.parsePlatformTagName(n),t,r,void 0,void 0,e):t&&t.pre||!a(f=Ut(e.$options,"components",n))?new he(n,t,r,void 0,void 0,e):xt(f,t,e,r,n)}else d=xt(n,t,e,r);return o(d)?d:a(d)?(a(p)&&function e(n,t,r){n.ns=t,"foreignObject"===n.tag&&(t=void 0,r=!0);if(a(n.children))for(var o=0,c=n.children.length;o<c;o++){var l=n.children[o];a(l.tag)&&(i(l.ns)||s(r)&&"svg"!==l.tag)&&e(l,t,r)}}(d,p),a(t)&&function(e){u(e.style)&&Kn(e.style);u(e.class)&&Kn(e.class)}(t),d):me()}(e,n,t,r,d)}function On(e,n,t){xe();try{if(n)for(var r=n;r=r.$parent;){var o=r.$options.errorCaptured;if(o)for(var i=0;i<o.length;i++)try{if(!1===o[i].call(r,e,n,t))return}catch(e){Sn(e,r,"errorCaptured hook")}}Sn(e,n,t)}finally{Ee()}}function Tn(e,n,t,r,o){var i;try{(i=t?e.apply(n,t):e.call(n))&&!i._isVue&&v(i)&&!i._handled&&(i.catch((function(e){return On(e,r,o+" (Promise/async)")})),i._handled=!0)}catch(e){On(e,r,o)}return i}function Sn(e,n,t){if(K.errorHandler)try{return K.errorHandler.call(null,e,n,t)}catch(n){n!==e&&jn(n,null,"config.errorHandler")}jn(e,n,t)}function jn(e,n,t){if(!Z||"undefined"==typeof console)throw e;console.error(e)}var Un,Rn=!1,Pn=[],In=!1;function $n(){In=!1;var e=Pn.slice(0);Pn.length=0;for(var n=0;n<e.length;n++)e[n]()}if("undefined"!=typeof Promise&&le(Promise)){var Bn=Promise.resolve();Un=function(){Bn.then($n),ne&&setTimeout(I)},Rn=!0}else if(J||"undefined"==typeof MutationObserver||!le(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Un="undefined"!=typeof setImmediate&&le(setImmediate)?function(){setImmediate($n)}:function(){setTimeout($n,0)};else{var zn=1,Mn=new MutationObserver($n),Fn=document.createTextNode(String(zn));Mn.observe(Fn,{characterData:!0}),Un=function(){zn=(zn+1)%2,Fn.data=String(zn)},Rn=!0}function Dn(e,n){var t;if(Pn.push((function(){if(e)try{e.call(n)}catch(e){On(e,n,"nextTick")}else t&&t(n)})),In||(In=!0,Un()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Nn(e){return function(n,t){if(void 0===t&&(t=pe),t)return function(e,n,t){var r=e.$options;r[n]=Ot(r[n],t)}(t,e,n)}}Nn("beforeMount"),Nn("mounted"),Nn("beforeUpdate"),Nn("updated"),Nn("beforeDestroy"),Nn("destroyed"),Nn("activated"),Nn("deactivated"),Nn("serverPrefetch"),Nn("renderTracked"),Nn("renderTriggered"),Nn("errorCaptured");var qn=new ue;function Kn(e){return function e(n,t){var r,i,a=o(n);if(!a&&!u(n)||n.__v_skip||Object.isFrozen(n)||n instanceof he)return;if(n.__ob__){var s=n.__ob__.dep.id;if(t.has(s))return;t.add(s)}if(a)for(r=n.length;r--;)e(n[r],t);else if(Fe(n))e(n.value,t);else for(i=Object.keys(n),r=i.length;r--;)e(n[i[r]],t)}(e,qn),qn.clear(),e}var Hn,Vn=0,Gn=function(){function e(e,n,t,r,o){var i,a;i=this,void 0===(a=Ne&&!Ne._vm?Ne:e?e._scope:void 0)&&(a=Ne),a&&a.active&&a.effects.push(i),(this.vm=e)&&o&&(e._watcher=this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Vn,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ue,this.newDepIds=new ue,this.expression="",l(n)?this.getter=n:(this.getter=function(e){if(!W.test(e)){var n=e.split(".");return function(e){for(var t=0;t<n.length;t++){if(!e)return;e=e[n[t]]}return e}}}(n),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;xe(this);var n=this.vm;try{e=this.getter.call(n,n)}catch(e){if(!this.user)throw e;On(e,n,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Kn(e),Ee(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var n=e.id;this.newDepIds.has(n)||(this.newDepIds.add(n),this.newDeps.push(e),this.depIds.has(n)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var n=this.deps[e];this.newDepIds.has(n.id)||n.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ht(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||u(e)||this.deep){var n=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Tn(this.cb,this.vm,[e,n],this.vm,t)}else this.cb.call(this.vm,e,n)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&x(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}();function Wn(e,n){Hn.$on(e,n)}function Xn(e,n){Hn.$off(e,n)}function Zn(e,n){var t=Hn;return function r(){var o=n.apply(null,arguments);null!==o&&t.$off(e,r)}}function Yn(e,n,t){Hn=e,Ge(n,t||{},Wn,Xn,Zn,e),Hn=void 0}var Jn=null;function Qn(e){var n=Jn;return Jn=e,function(){Jn=n}}function et(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function nt(e,n){if(n){if(e._directInactive=!1,et(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)nt(e.$children[t]);tt(e,"activated")}}function tt(e,n,t,r){void 0===r&&(r=!0),xe();var o=pe,i=Ne;r&&fe(e);var a=e.$options[n],s="".concat(n," hook");if(a)for(var c=0,l=a.length;c<l;c++)Tn(a[c],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+n),r&&(fe(o),i&&i.on()),Ee()}var rt=[],ot=[],it={},at=!1,st=!1,ct=0;var lt=0,ut=Date.now;if(Z&&!J){var dt=window.performance;dt&&"function"==typeof dt.now&&ut()>document.createEvent("Event").timeStamp&&(ut=function(){return dt.now()})}var pt=function(e,n){if(e.post){if(!n.post)return 1}else if(n.post)return-1;return e.id-n.id};function ft(){var e,n;for(lt=ut(),st=!0,rt.sort(pt),ct=0;ct<rt.length;ct++)(e=rt[ct]).before&&e.before(),n=e.id,it[n]=null,e.run();var t=ot.slice(),r=rt.slice();ct=rt.length=ot.length=0,it={},at=st=!1,function(e){for(var n=0;n<e.length;n++)e[n]._inactive=!0,nt(e[n],!0)}(t),function(e){var n=e.length;for(;n--;){var t=e[n],r=t.vm;r&&r._watcher===t&&r._isMounted&&!r._isDestroyed&&tt(r,"updated")}}(r),function(){for(var e=0;e<be.length;e++){var n=be[e];n.subs=n.subs.filter((function(e){return e})),n._pending=!1}be.length=0}(),ce&&K.devtools&&ce.emit("flush")}function ht(e){var n=e.id;if(null==it[n]&&(e!==_e.target||!e.noRecurse)){if(it[n]=!0,st){for(var t=rt.length-1;t>ct&&rt[t].id>e.id;)t--;rt.splice(t+1,0,e)}else rt.push(e);at||(at=!0,Dn(ft))}}function mt(e,n){if(e){for(var t=Object.create(null),r=de?Reflect.ownKeys(e):Object.keys(e),o=0;o<r.length;o++){var i=r[o];if("__ob__"!==i){var a=e[i].from;if(a in n._provided)t[i]=n._provided[a];else if("default"in e[i]){var s=e[i].default;t[i]=l(s)?s.call(n):s}else 0}}return t}}function vt(e,n,t,i,a){var c,l=this,u=a.options;w(i,"_uid")?(c=Object.create(i))._original=i:(c=i,i=i._original);var d=s(u._compiled),p=!d;this.data=e,this.props=n,this.children=t,this.parent=i,this.listeners=e.on||r,this.injections=mt(u.inject,i),this.slots=function(){return l.$slots||yn(i,e.scopedSlots,l.$slots=hn(t,i)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return yn(i,e.scopedSlots,this.slots())}}),d&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=yn(i,e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,n,t,r){var a=Ln(c,e,n,t,r,p);return a&&!o(a)&&(a.fnScopeId=u._scopeId,a.fnContext=i),a}:this._c=function(e,n,t,r){return Ln(c,e,n,t,r,p)}}function yt(e,n,t,r,o){var i=ye(e);return i.fnContext=t,i.fnOptions=r,n.slot&&((i.data||(i.data={})).slot=n.slot),i}function gt(e,n){for(var t in n)e[L(t)]=n[t]}function bt(e){return e.name||e.__name||e._componentTag}fn(vt.prototype);var _t={init:function(e,n){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;_t.prepatch(t,t)}else{(e.componentInstance=function(e,n){var t={_isComponent:!0,_parentVnode:e,parent:n},r=e.data.inlineTemplate;a(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,Jn)).$mount(n?e.elm:void 0,n)}},prepatch:function(e,n){var t=n.componentOptions;!function(e,n,t,o,i){var a=o.data.scopedSlots,s=e.$scopedSlots,c=!!(a&&!a.$stable||s!==r&&!s.$stable||a&&e.$scopedSlots.$key!==a.$key||!a&&e.$scopedSlots.$key),l=!!(i||e.$options._renderChildren||c),u=e.$vnode;e.$options._parentVnode=o,e.$vnode=o,e._vnode&&(e._vnode.parent=o),e.$options._renderChildren=i;var d=o.data.attrs||r;e._attrsProxy&&kn(e._attrsProxy,d,u.data&&u.data.attrs||r,e,"$attrs")&&(l=!0),e.$attrs=d,t=t||r;var p=e.$options._parentListeners;if(e._listenersProxy&&kn(e._listenersProxy,t,p||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,Yn(e,t,p),n&&e.$options.props){Te(!1);for(var f=e._props,h=e.$options._propKeys||[],m=0;m<h.length;m++){var v=h[m],y=e.$options.props;f[v]=Rt(v,y,n,e)}Te(!0),e.$options.propsData=n}l&&(e.$slots=hn(i,o.context),e.$forceUpdate())}(n.componentInstance=e.componentInstance,t.propsData,t.listeners,n,t.children)},insert:function(e){var n,t=e.context,r=e.componentInstance;r._isMounted||(r._isMounted=!0,tt(r,"mounted")),e.data.keepAlive&&(t._isMounted?((n=r)._inactive=!1,ot.push(n)):nt(r,!0))},destroy:function(e){var n=e.componentInstance;n._isDestroyed||(e.data.keepAlive?function e(n,t){if(!(t&&(n._directInactive=!0,et(n))||n._inactive)){n._inactive=!0;for(var r=0;r<n.$children.length;r++)e(n.$children[r]);tt(n,"deactivated")}}(n,!0):n.$destroy())}},kt=Object.keys(_t);function xt(e,n,t,c,l){if(!i(e)){var d=t.$options._base;if(u(e)&&(e=d.extend(e)),"function"==typeof e){var p;if(i(e.cid)&&void 0===(e=function(e,n){if(s(e.error)&&a(e.errorComp))return e.errorComp;if(a(e.resolved))return e.resolved;var t=wn;if(t&&a(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),s(e.loading)&&a(e.loadingComp))return e.loadingComp;if(t&&!a(e.owners)){var r=e.owners=[t],o=!0,c=null,l=null;t.$on("hook:destroyed",(function(){return x(r,t)}));var d=function(e){for(var n=0,t=r.length;n<t;n++)r[n].$forceUpdate();e&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==l&&(clearTimeout(l),l=null))},p=F((function(t){e.resolved=Cn(t,n),o?r.length=0:d(!0)})),f=F((function(n){a(e.errorComp)&&(e.error=!0,d(!0))})),h=e(p,f);return u(h)&&(v(h)?i(e.resolved)&&h.then(p,f):v(h.component)&&(h.component.then(p,f),a(h.error)&&(e.errorComp=Cn(h.error,n)),a(h.loading)&&(e.loadingComp=Cn(h.loading,n),0===h.delay?e.loading=!0:c=setTimeout((function(){c=null,i(e.resolved)&&i(e.error)&&(e.loading=!0,d(!1))}),h.delay||200)),a(h.timeout)&&(l=setTimeout((function(){l=null,i(e.resolved)&&f(null)}),h.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(p=e,d)))return function(e,n,t,r,o){var i=me();return i.asyncFactory=e,i.asyncMeta={data:n,context:t,children:r,tag:o},i}(p,n,t,c,l);n=n||{},Gt(e),a(n.model)&&function(e,n){var t=e.model&&e.model.prop||"value",r=e.model&&e.model.event||"input";(n.attrs||(n.attrs={}))[t]=n.model.value;var i=n.on||(n.on={}),s=i[r],c=n.model.callback;a(s)?(o(s)?-1===s.indexOf(c):s!==c)&&(i[r]=[c].concat(s)):i[r]=c}(e.options,n);var f=function(e,n,t){var r=n.options.props;if(!i(r)){var o={},s=e.attrs,c=e.props;if(a(s)||a(c))for(var l in r){var u=S(l);Xe(o,c,l,u,!0)||Xe(o,s,l,u,!1)}return o}}(n,e);if(s(e.options.functional))return function(e,n,t,i,s){var c=e.options,l={},u=c.props;if(a(u))for(var d in u)l[d]=Rt(d,u,n||r);else a(t.attrs)&&gt(l,t.attrs),a(t.props)&&gt(l,t.props);var p=new vt(t,l,s,i,e),f=c.render.call(null,p._c,p);if(f instanceof he)return yt(f,t,p.parent,c,p);if(o(f)){for(var h=Ze(f)||[],m=new Array(h.length),v=0;v<h.length;v++)m[v]=yt(h[v],t,p.parent,c,p);return m}}(e,f,n,t,c);var h=n.on;if(n.on=n.nativeOn,s(e.options.abstract)){var m=n.slot;n={},m&&(n.slot=m)}!function(e){for(var n=e.hook||(e.hook={}),t=0;t<kt.length;t++){var r=kt[t],o=n[r],i=_t[r];o===i||o&&o._merged||(n[r]=o?Et(i,o):i)}}(n);var y=bt(e.options)||l;return new he("vue-component-".concat(e.cid).concat(y?"-".concat(y):""),n,void 0,void 0,void 0,t,{Ctor:e,propsData:f,listeners:h,tag:l,children:c},p)}}}function Et(e,n){var t=function(t,r){e(t,r),n(t,r)};return t._merged=!0,t}var wt=I,Ct=K.optionMergeStrategies;function At(e,n,t){if(void 0===t&&(t=!0),!n)return e;for(var r,o,i,a=de?Reflect.ownKeys(n):Object.keys(n),s=0;s<a.length;s++)"__ob__"!==(r=a[s])&&(o=e[r],i=n[r],t&&w(e,r)?o!==i&&p(o)&&p(i)&&At(o,i):Pe(e,r,i));return e}function Lt(e,n,t){return t?function(){var r=l(n)?n.call(t,t):n,o=l(e)?e.call(t,t):e;return r?At(r,o):o}:n?e?function(){return At(l(n)?n.call(this,this):n,l(e)?e.call(this,this):e)}:n:e}function Ot(e,n){var t=n?e?e.concat(n):o(n)?n:[n]:e;return t?function(e){for(var n=[],t=0;t<e.length;t++)-1===n.indexOf(e[t])&&n.push(e[t]);return n}(t):t}function Tt(e,n,t,r){var o=Object.create(e||null);return n?R(o,n):o}Ct.data=function(e,n,t){return t?Lt(e,n,t):n&&"function"!=typeof n?e:Lt(e,n)},q.forEach((function(e){Ct[e]=Ot})),N.forEach((function(e){Ct[e+"s"]=Tt})),Ct.watch=function(e,n,t,r){if(e===oe&&(e=void 0),n===oe&&(n=void 0),!n)return Object.create(e||null);if(!e)return n;var i={};for(var a in R(i,e),n){var s=i[a],c=n[a];s&&!o(s)&&(s=[s]),i[a]=s?s.concat(c):o(c)?c:[c]}return i},Ct.props=Ct.methods=Ct.inject=Ct.computed=function(e,n,t,r){if(!e)return n;var o=Object.create(null);return R(o,e),n&&R(o,n),o},Ct.provide=function(e,n){return e?function(){var t=Object.create(null);return At(t,l(e)?e.call(this):e),n&&At(t,l(n)?n.call(this):n,!1),t}:n};var St=function(e,n){return void 0===n?e:n};function jt(e,n,t){if(l(n)&&(n=n.options),function(e,n){var t=e.props;if(t){var r,i,a={};if(o(t))for(r=t.length;r--;)"string"==typeof(i=t[r])&&(a[L(i)]={type:null});else if(p(t))for(var s in t)i=t[s],a[L(s)]=p(i)?i:{type:i};else 0;e.props=a}}(n),function(e,n){var t=e.inject;if(t){var r=e.inject={};if(o(t))for(var i=0;i<t.length;i++)r[t[i]]={from:t[i]};else if(p(t))for(var a in t){var s=t[a];r[a]=p(s)?R({from:a},s):{from:s}}else 0}}(n),function(e){var n=e.directives;if(n)for(var t in n){var r=n[t];l(r)&&(n[t]={bind:r,update:r})}}(n),!n._base&&(n.extends&&(e=jt(e,n.extends,t)),n.mixins))for(var r=0,i=n.mixins.length;r<i;r++)e=jt(e,n.mixins[r],t);var a,s={};for(a in e)c(a);for(a in n)w(e,a)||c(a);function c(r){var o=Ct[r]||St;s[r]=o(e[r],n[r],t,r)}return s}function Ut(e,n,t,r){if("string"==typeof t){var o=e[n];if(w(o,t))return o[t];var i=L(t);if(w(o,i))return o[i];var a=O(i);return w(o,a)?o[a]:o[t]||o[i]||o[a]}}function Rt(e,n,t,r){var o=n[e],i=!w(t,e),a=t[e],s=Bt(Boolean,o.type);if(s>-1)if(i&&!w(o,"default"))a=!1;else if(""===a||a===S(e)){var c=Bt(String,o.type);(c<0||s<c)&&(a=!0)}if(void 0===a){a=function(e,n,t){if(!w(n,"default"))return;var r=n.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return l(r)&&"Function"!==It(n.type)?r.call(e):r}(r,o,e);var u=Oe;Te(!0),Ue(a),Te(u)}return a}var Pt=/^\s*function (\w+)/;function It(e){var n=e&&e.toString().match(Pt);return n?n[1]:""}function $t(e,n){return It(e)===It(n)}function Bt(e,n){if(!o(n))return $t(n,e)?0:-1;for(var t=0,r=n.length;t<r;t++)if($t(n[t],e))return t;return-1}var zt={enumerable:!0,configurable:!0,get:I,set:I};function Mt(e,n,t){zt.get=function(){return this[n][t]},zt.set=function(e){this[n][t]=e},Object.defineProperty(e,t,zt)}function Ft(e){var n=e.$options;if(n.props&&function(e,n){var t=e.$options.propsData||{},r=e._props=Be({}),o=e.$options._propKeys=[];e.$parent&&Te(!1);var i=function(i){o.push(i);var a=Rt(i,n,t,e);Re(r,i,a,void 0,!0),i in e||Mt(e,"_props",i)};for(var a in n)i(a);Te(!0)}(e,n.props),function(e){var n=e.$options,t=n.setup;if(t){var r=e._setupContext=_n(e);fe(e),xe();var o=Tn(t,null,[e._props||Be({}),r],e,"setup");if(Ee(),fe(),l(o))n.render=o;else if(u(o))if(e._setupState=o,o.__sfc){var i=e._setupProxy={};for(var a in o)"__sfc"!==a&&De(i,o,a)}else for(var a in o)V(a)||De(e,o,a);else 0}}(e),n.methods&&function(e,n){e.$options.props;for(var t in n)e[t]="function"!=typeof n[t]?I:j(n[t],e)}(e,n.methods),n.data)!function(e){var n=e.$options.data;p(n=e._data=l(n)?function(e,n){xe();try{return e.call(n,n)}catch(e){return On(e,n,"data()"),{}}finally{Ee()}}(n,e):n||{})||(n={});var t=Object.keys(n),r=e.$options.props,o=(e.$options.methods,t.length);for(;o--;){var i=t[o];0,r&&w(r,i)||V(i)||Mt(e,"_data",i)}var a=Ue(n);a&&a.vmCount++}(e);else{var t=Ue(e._data={});t&&t.vmCount++}n.computed&&function(e,n){var t=e._computedWatchers=Object.create(null),r=se();for(var o in n){var i=n[o],a=l(i)?i:i.get;0,r||(t[o]=new Gn(e,a||I,I,Dt)),o in e||Nt(e,o,i)}}(e,n.computed),n.watch&&n.watch!==oe&&function(e,n){for(var t in n){var r=n[t];if(o(r))for(var i=0;i<r.length;i++)Ht(e,t,r[i]);else Ht(e,t,r)}}(e,n.watch)}var Dt={lazy:!0};function Nt(e,n,t){var r=!se();l(t)?(zt.get=r?qt(n):Kt(t),zt.set=I):(zt.get=t.get?r&&!1!==t.cache?qt(n):Kt(t.get):I,zt.set=t.set||I),Object.defineProperty(e,n,zt)}function qt(e){return function(){var n=this._computedWatchers&&this._computedWatchers[e];if(n)return n.dirty&&n.evaluate(),_e.target&&n.depend(),n.value}}function Kt(e){return function(){return e.call(this,this)}}function Ht(e,n,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(n,t,r)}var Vt=0;function Gt(e){var n=e.options;if(e.super){var t=Gt(e.super);if(t!==e.superOptions){e.superOptions=t;var r=function(e){var n,t=e.options,r=e.sealedOptions;for(var o in t)t[o]!==r[o]&&(n||(n={}),n[o]=t[o]);return n}(e);r&&R(e.extendOptions,r),(n=e.options=jt(t,e.extendOptions)).name&&(n.components[n.name]=e)}}return n}function Wt(e){this._init(e)}function Xt(e){e.cid=0;var n=1;e.extend=function(e){e=e||{};var t=this,r=t.cid,o=e._Ctor||(e._Ctor={});if(o[r])return o[r];var i=bt(e)||bt(t.options);var a=function(e){this._init(e)};return(a.prototype=Object.create(t.prototype)).constructor=a,a.cid=n++,a.options=jt(t.options,e),a.super=t,a.options.props&&function(e){var n=e.options.props;for(var t in n)Mt(e.prototype,"_props",t)}(a),a.options.computed&&function(e){var n=e.options.computed;for(var t in n)Nt(e.prototype,t,n[t])}(a),a.extend=t.extend,a.mixin=t.mixin,a.use=t.use,N.forEach((function(e){a[e]=t[e]})),i&&(a.options.components[i]=a),a.superOptions=t.options,a.extendOptions=e,a.sealedOptions=R({},a.options),o[r]=a,a}}function Zt(e){return e&&(bt(e.Ctor.options)||e.tag)}function Yt(e,n){return o(e)?e.indexOf(n)>-1:"string"==typeof e?e.split(",").indexOf(n)>-1:!!f(e)&&e.test(n)}function Jt(e,n){var t=e.cache,r=e.keys,o=e._vnode,i=e.$vnode;for(var a in t){var s=t[a];if(s){var c=s.name;c&&!n(c)&&Qt(t,a,r,o)}}i.componentOptions.children=void 0}function Qt(e,n,t,r){var o=e[n];!o||r&&o.tag===r.tag||o.componentInstance.$destroy(),e[n]=null,x(t,n)}!function(e){e.prototype._init=function(e){var n=this;n._uid=Vt++,n._isVue=!0,n.__v_skip=!0,n._scope=new qe(!0),n._scope.parent=void 0,n._scope._vm=!0,e&&e._isComponent?function(e,n){var t=e.$options=Object.create(e.constructor.options),r=n._parentVnode;t.parent=n.parent,t._parentVnode=r;var o=r.componentOptions;t.propsData=o.propsData,t._parentListeners=o.listeners,t._renderChildren=o.children,t._componentTag=o.tag,n.render&&(t.render=n.render,t.staticRenderFns=n.staticRenderFns)}(n,e):n.$options=jt(Gt(n.constructor),e||{},n),n._renderProxy=n,n._self=n,function(e){var n=e.$options,t=n.parent;if(t&&!n.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(n),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var n=e.$options._parentListeners;n&&Yn(e,n)}(n),function(e){e._vnode=null,e._staticTrees=null;var n=e.$options,t=e.$vnode=n._parentVnode,o=t&&t.context;e.$slots=hn(n._renderChildren,o),e.$scopedSlots=t?yn(e.$parent,t.data.scopedSlots,e.$slots):r,e._c=function(n,t,r,o){return Ln(e,n,t,r,o,!1)},e.$createElement=function(n,t,r,o){return Ln(e,n,t,r,o,!0)};var i=t&&t.data;Re(e,"$attrs",i&&i.attrs||r,null,!0),Re(e,"$listeners",n._parentListeners||r,null,!0)}(n),tt(n,"beforeCreate",void 0,!1),function(e){var n=mt(e.$options.inject,e);n&&(Te(!1),Object.keys(n).forEach((function(t){Re(e,t,n[t])})),Te(!0))}(n),Ft(n),function(e){var n=e.$options.provide;if(n){var t=l(n)?n.call(e):n;if(!u(t))return;for(var r=Ke(e),o=de?Reflect.ownKeys(t):Object.keys(t),i=0;i<o.length;i++){var a=o[i];Object.defineProperty(r,a,Object.getOwnPropertyDescriptor(t,a))}}}(n),tt(n,"created"),n.$options.el&&n.$mount(n.$options.el)}}(Wt),function(e){var n={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",n),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=Pe,e.prototype.$delete=Ie,e.prototype.$watch=function(e,n,t){if(p(n))return Ht(this,e,n,t);(t=t||{}).user=!0;var r=new Gn(this,e,n,t);if(t.immediate){var o='callback for immediate watcher "'.concat(r.expression,'"');xe(),Tn(n,this,[r.value],this,o),Ee()}return function(){r.teardown()}}}(Wt),function(e){var n=/^hook:/;e.prototype.$on=function(e,t){var r=this;if(o(e))for(var i=0,a=e.length;i<a;i++)r.$on(e[i],t);else(r._events[e]||(r._events[e]=[])).push(t),n.test(e)&&(r._hasHookEvent=!0);return r},e.prototype.$once=function(e,n){var t=this;function r(){t.$off(e,r),n.apply(t,arguments)}return r.fn=n,t.$on(e,r),t},e.prototype.$off=function(e,n){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(o(e)){for(var r=0,i=e.length;r<i;r++)t.$off(e[r],n);return t}var a,s=t._events[e];if(!s)return t;if(!n)return t._events[e]=null,t;for(var c=s.length;c--;)if((a=s[c])===n||a.fn===n){s.splice(c,1);break}return t},e.prototype.$emit=function(e){var n=this,t=n._events[e];if(t){t=t.length>1?U(t):t;for(var r=U(arguments,1),o='event handler for "'.concat(e,'"'),i=0,a=t.length;i<a;i++)Tn(t[i],n,r,n,o)}return n}}(Wt),function(e){e.prototype._update=function(e,n){var t=this,r=t.$el,o=t._vnode,i=Qn(t);t._vnode=e,t.$el=o?t.__patch__(o,e):t.__patch__(t.$el,e,n,!1),i(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var a=t;a&&a.$vnode&&a.$parent&&a.$vnode===a.$parent._vnode;)a.$parent.$el=a.$el,a=a.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){tt(e,"beforeDestroy"),e._isBeingDestroyed=!0;var n=e.$parent;!n||n._isBeingDestroyed||e.$options.abstract||x(n.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),tt(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(Wt),function(e){fn(e.prototype),e.prototype.$nextTick=function(e){return Dn(e,this)},e.prototype._render=function(){var e=this,n=e.$options,t=n.render,r=n._parentVnode;r&&e._isMounted&&(e.$scopedSlots=yn(e.$parent,r.data.scopedSlots,e.$slots,e.$scopedSlots),e._slotsProxy&&En(e._slotsProxy,e.$scopedSlots)),e.$vnode=r;var i,a=pe,s=wn;try{fe(e),wn=e,i=t.call(e._renderProxy,e.$createElement)}catch(n){On(n,e,"render"),i=e._vnode}finally{wn=s,fe(a)}return o(i)&&1===i.length&&(i=i[0]),i instanceof he||(i=me()),i.parent=r,i}}(Wt);var er=[String,RegExp,Array],nr={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:er,exclude:er,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,n=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var o=t.tag,i=t.componentInstance,a=t.componentOptions;e[r]={name:Zt(a),tag:o,componentInstance:i},n.push(r),this.max&&n.length>parseInt(this.max)&&Qt(e,n[0],n,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Qt(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(n){Jt(e,(function(e){return Yt(n,e)}))})),this.$watch("exclude",(function(n){Jt(e,(function(e){return!Yt(n,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,n=An(e),t=n&&n.componentOptions;if(t){var r=Zt(t),o=this.include,i=this.exclude;if(o&&(!r||!Yt(o,r))||i&&r&&Yt(i,r))return n;var a=this.cache,s=this.keys,c=null==n.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):n.key;a[c]?(n.componentInstance=a[c].componentInstance,x(s,c),s.push(c)):(this.vnodeToCache=n,this.keyToCache=c),n.data.keepAlive=!0}return n||e&&e[0]}}};!function(e){var n={get:function(){return K}};Object.defineProperty(e,"config",n),e.util={warn:wt,extend:R,mergeOptions:jt,defineReactive:Re},e.set=Pe,e.delete=Ie,e.nextTick=Dn,e.observable=function(e){return Ue(e),e},e.options=Object.create(null),N.forEach((function(n){e.options[n+"s"]=Object.create(null)})),e.options._base=e,R(e.options.components,nr),function(e){e.use=function(e){var n=this._installedPlugins||(this._installedPlugins=[]);if(n.indexOf(e)>-1)return this;var t=U(arguments,1);return t.unshift(this),l(e.install)?e.install.apply(e,t):l(e)&&e.apply(null,t),n.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=jt(this.options,e),this}}(e),Xt(e),function(e){N.forEach((function(n){e[n]=function(e,t){return t?("component"===n&&p(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===n&&l(t)&&(t={bind:t,update:t}),this.options[n+"s"][e]=t,t):this.options[n+"s"][e]}}))}(e)}(Wt),Object.defineProperty(Wt.prototype,"$isServer",{get:se}),Object.defineProperty(Wt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Wt,"FunctionalRenderContext",{value:vt}),Wt.version="2.7.16";var tr=_("style,class"),rr=_("input,textarea,option,select,progress"),or=_("contenteditable,draggable,spellcheck"),ir=_("events,caret,typing,plaintext-only"),ar=_("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),sr="http://www.w3.org/1999/xlink",cr=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},lr=function(e){return cr(e)?e.slice(6,e.length):""},ur=function(e){return null==e||!1===e};function dr(e){for(var n=e.data,t=e,r=e;a(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(n=pr(r.data,n));for(;a(t=t.parent);)t&&t.data&&(n=pr(n,t.data));return function(e,n){if(a(e)||a(n))return fr(e,hr(n));return""}(n.staticClass,n.class)}function pr(e,n){return{staticClass:fr(e.staticClass,n.staticClass),class:a(e.class)?[e.class,n.class]:n.class}}function fr(e,n){return e?n?e+" "+n:e:n||""}function hr(e){return Array.isArray(e)?function(e){for(var n,t="",r=0,o=e.length;r<o;r++)a(n=hr(e[r]))&&""!==n&&(t&&(t+=" "),t+=n);return t}(e):u(e)?function(e){var n="";for(var t in e)e[t]&&(n&&(n+=" "),n+=t);return n}(e):"string"==typeof e?e:""}var mr={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},vr=_("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),yr=_("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),gr=function(e){return vr(e)||yr(e)};var br=Object.create(null);var _r=_("text,number,password,search,email,tel,url");var kr=Object.freeze({__proto__:null,createElement:function(e,n){var t=document.createElement(e);return"select"!==e||n.data&&n.data.attrs&&void 0!==n.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,n){return document.createElementNS(mr[e],n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,n,t){e.insertBefore(n,t)},removeChild:function(e,n){e.removeChild(n)},appendChild:function(e,n){e.appendChild(n)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,n){e.textContent=n},setStyleScope:function(e,n){e.setAttribute(n,"")}}),xr={create:function(e,n){Er(n)},update:function(e,n){e.data.ref!==n.data.ref&&(Er(e,!0),Er(n))},destroy:function(e){Er(e,!0)}};function Er(e,n){var t=e.data.ref;if(a(t)){var r=e.context,i=e.componentInstance||e.elm,s=n?null:i,c=n?void 0:i;if(l(t))Tn(t,r,[s],r,"template ref function");else{var u=e.data.refInFor,d="string"==typeof t||"number"==typeof t,p=Fe(t),f=r.$refs;if(d||p)if(u){var h=d?f[t]:t.value;n?o(h)&&x(h,i):o(h)?h.includes(i)||h.push(i):d?(f[t]=[i],wr(r,t,f[t])):t.value=[i]}else if(d){if(n&&f[t]!==i)return;f[t]=c,wr(r,t,s)}else if(p){if(n&&t.value!==i)return;t.value=s}else 0}}}function wr(e,n,t){var r=e._setupState;r&&w(r,n)&&(Fe(r[n])?r[n].value=t:r[n]=t)}var Cr=new he("",{},[]),Ar=["create","activate","update","remove","destroy"];function Lr(e,n){return e.key===n.key&&e.asyncFactory===n.asyncFactory&&(e.tag===n.tag&&e.isComment===n.isComment&&a(e.data)===a(n.data)&&function(e,n){if("input"!==e.tag)return!0;var t,r=a(t=e.data)&&a(t=t.attrs)&&t.type,o=a(t=n.data)&&a(t=t.attrs)&&t.type;return r===o||_r(r)&&_r(o)}(e,n)||s(e.isAsyncPlaceholder)&&i(n.asyncFactory.error))}function Or(e,n,t){var r,o,i={};for(r=n;r<=t;++r)a(o=e[r].key)&&(i[o]=r);return i}var Tr={create:Sr,update:Sr,destroy:function(e){Sr(e,Cr)}};function Sr(e,n){(e.data.directives||n.data.directives)&&function(e,n){var t,r,o,i=e===Cr,a=n===Cr,s=Ur(e.data.directives,e.context),c=Ur(n.data.directives,n.context),l=[],u=[];for(t in c)r=s[t],o=c[t],r?(o.oldValue=r.value,o.oldArg=r.arg,Pr(o,"update",n,e),o.def&&o.def.componentUpdated&&u.push(o)):(Pr(o,"bind",n,e),o.def&&o.def.inserted&&l.push(o));if(l.length){var d=function(){for(var t=0;t<l.length;t++)Pr(l[t],"inserted",n,e)};i?We(n,"insert",d):d()}u.length&&We(n,"postpatch",(function(){for(var t=0;t<u.length;t++)Pr(u[t],"componentUpdated",n,e)}));if(!i)for(t in s)c[t]||Pr(s[t],"unbind",e,e,a)}(e,n)}var jr=Object.create(null);function Ur(e,n){var t,r,o=Object.create(null);if(!e)return o;for(t=0;t<e.length;t++){if((r=e[t]).modifiers||(r.modifiers=jr),o[Rr(r)]=r,n._setupState&&n._setupState.__sfc){var i=r.def||Ut(n,"_setupState","v-"+r.name);r.def="function"==typeof i?{bind:i,update:i}:i}r.def=r.def||Ut(n.$options,"directives",r.name)}return o}function Rr(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function Pr(e,n,t,r,o){var i=e.def&&e.def[n];if(i)try{i(t.elm,e,t,r,o)}catch(r){On(r,t.context,"directive ".concat(e.name," ").concat(n," hook"))}}var Ir=[xr,Tr];function $r(e,n){var t=n.componentOptions;if(!(a(t)&&!1===t.Ctor.options.inheritAttrs||i(e.data.attrs)&&i(n.data.attrs))){var r,o,c=n.elm,l=e.data.attrs||{},u=n.data.attrs||{};for(r in(a(u.__ob__)||s(u._v_attr_proxy))&&(u=n.data.attrs=R({},u)),u)o=u[r],l[r]!==o&&Br(c,r,o,n.data.pre);for(r in(J||ee)&&u.value!==l.value&&Br(c,"value",u.value),l)i(u[r])&&(cr(r)?c.removeAttributeNS(sr,lr(r)):or(r)||c.removeAttribute(r))}}function Br(e,n,t,r){r||e.tagName.indexOf("-")>-1?zr(e,n,t):ar(n)?ur(t)?e.removeAttribute(n):(t="allowfullscreen"===n&&"EMBED"===e.tagName?"true":n,e.setAttribute(n,t)):or(n)?e.setAttribute(n,function(e,n){return ur(n)||"false"===n?"false":"contenteditable"===e&&ir(n)?n:"true"}(n,t)):cr(n)?ur(t)?e.removeAttributeNS(sr,lr(n)):e.setAttributeNS(sr,n,t):zr(e,n,t)}function zr(e,n,t){if(ur(t))e.removeAttribute(n);else{if(J&&!Q&&"TEXTAREA"===e.tagName&&"placeholder"===n&&""!==t&&!e.__ieph){var r=function(n){n.stopImmediatePropagation(),e.removeEventListener("input",r)};e.addEventListener("input",r),e.__ieph=!0}e.setAttribute(n,t)}}var Mr={create:$r,update:$r};function Fr(e,n){var t=n.elm,r=n.data,o=e.data;if(!(i(r.staticClass)&&i(r.class)&&(i(o)||i(o.staticClass)&&i(o.class)))){var s=dr(n),c=t._transitionClasses;a(c)&&(s=fr(s,hr(c))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var Dr,Nr={create:Fr,update:Fr};function qr(e,n,t){var r=Dr;return function o(){var i=n.apply(null,arguments);null!==i&&Vr(e,o,t,r)}}var Kr=Rn&&!(re&&Number(re[1])<=53);function Hr(e,n,t,r){if(Kr){var o=lt,i=n;n=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=o||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}Dr.addEventListener(e,n,ie?{capture:t,passive:r}:t)}function Vr(e,n,t,r){(r||Dr).removeEventListener(e,n._wrapper||n,t)}function Gr(e,n){if(!i(e.data.on)||!i(n.data.on)){var t=n.data.on||{},r=e.data.on||{};Dr=n.elm||e.elm,function(e){if(a(e.__r)){var n=J?"change":"input";e[n]=[].concat(e.__r,e[n]||[]),delete e.__r}a(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),Ge(t,r,Hr,Vr,qr,n.context),Dr=void 0}}var Wr,Xr={create:Gr,update:Gr,destroy:function(e){return Gr(e,Cr)}};function Zr(e,n){if(!i(e.data.domProps)||!i(n.data.domProps)){var t,r,o=n.elm,c=e.data.domProps||{},l=n.data.domProps||{};for(t in(a(l.__ob__)||s(l._v_attr_proxy))&&(l=n.data.domProps=R({},l)),c)t in l||(o[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(n.children&&(n.children.length=0),r===c[t])continue;1===o.childNodes.length&&o.removeChild(o.childNodes[0])}if("value"===t&&"PROGRESS"!==o.tagName){o._value=r;var u=i(r)?"":String(r);Yr(o,u)&&(o.value=u)}else if("innerHTML"===t&&yr(o.tagName)&&i(o.innerHTML)){(Wr=Wr||document.createElement("div")).innerHTML="<svg>".concat(r,"</svg>");for(var d=Wr.firstChild;o.firstChild;)o.removeChild(o.firstChild);for(;d.firstChild;)o.appendChild(d.firstChild)}else if(r!==c[t])try{o[t]=r}catch(e){}}}}function Yr(e,n){return!e.composing&&("OPTION"===e.tagName||function(e,n){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==n}(e,n)||function(e,n){var t=e.value,r=e._vModifiers;if(a(r)){if(r.number)return b(t)!==b(n);if(r.trim)return t.trim()!==n.trim()}return t!==n}(e,n))}var Jr={create:Zr,update:Zr},Qr=C((function(e){var n={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var r=e.split(t);r.length>1&&(n[r[0].trim()]=r[1].trim())}})),n}));function eo(e){var n=no(e.style);return e.staticStyle?R(e.staticStyle,n):n}function no(e){return Array.isArray(e)?P(e):"string"==typeof e?Qr(e):e}var to,ro=/^--/,oo=/\s*!important$/,io=function(e,n,t){if(ro.test(n))e.style.setProperty(n,t);else if(oo.test(t))e.style.setProperty(S(n),t.replace(oo,""),"important");else{var r=so(n);if(Array.isArray(t))for(var o=0,i=t.length;o<i;o++)e.style[r]=t[o];else e.style[r]=t}},ao=["Webkit","Moz","ms"],so=C((function(e){if(to=to||document.createElement("div").style,"filter"!==(e=L(e))&&e in to)return e;for(var n=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<ao.length;t++){var r=ao[t]+n;if(r in to)return r}}));function co(e,n){var t=n.data,r=e.data;if(!(i(t.staticStyle)&&i(t.style)&&i(r.staticStyle)&&i(r.style))){var o,s,c=n.elm,l=r.staticStyle,u=r.normalizedStyle||r.style||{},d=l||u,p=no(n.data.style)||{};n.data.normalizedStyle=a(p.__ob__)?R({},p):p;var f=function(e,n){var t,r={};if(n)for(var o=e;o.componentInstance;)(o=o.componentInstance._vnode)&&o.data&&(t=eo(o.data))&&R(r,t);(t=eo(e.data))&&R(r,t);for(var i=e;i=i.parent;)i.data&&(t=eo(i.data))&&R(r,t);return r}(n,!0);for(s in d)i(f[s])&&io(c,s,"");for(s in f)o=f[s],io(c,s,null==o?"":o)}}var lo={create:co,update:co},uo=/\s+/;function po(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(uo).forEach((function(n){return e.classList.add(n)})):e.classList.add(n);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+n+" ")<0&&e.setAttribute("class",(t+n).trim())}}function fo(e,n){if(n&&(n=n.trim()))if(e.classList)n.indexOf(" ")>-1?n.split(uo).forEach((function(n){return e.classList.remove(n)})):e.classList.remove(n),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),r=" "+n+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function ho(e){if(e){if("object"==typeof e){var n={};return!1!==e.css&&R(n,mo(e.name||"v")),R(n,e),n}return"string"==typeof e?mo(e):void 0}}var mo=C((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),vo=Z&&!Q,yo="transition",go="transitionend",bo="animation",_o="animationend";vo&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(yo="WebkitTransition",go="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(bo="WebkitAnimation",_o="webkitAnimationEnd"));var ko=Z?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function xo(e){ko((function(){ko(e)}))}function Eo(e,n){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(n)<0&&(t.push(n),po(e,n))}function wo(e,n){e._transitionClasses&&x(e._transitionClasses,n),fo(e,n)}function Co(e,n,t){var r=Lo(e,n),o=r.type,i=r.timeout,a=r.propCount;if(!o)return t();var s="transition"===o?go:_o,c=0,l=function(){e.removeEventListener(s,u),t()},u=function(n){n.target===e&&++c>=a&&l()};setTimeout((function(){c<a&&l()}),i+1),e.addEventListener(s,u)}var Ao=/\b(transform|all)(,|$)/;function Lo(e,n){var t,r=window.getComputedStyle(e),o=(r[yo+"Delay"]||"").split(", "),i=(r[yo+"Duration"]||"").split(", "),a=Oo(o,i),s=(r[bo+"Delay"]||"").split(", "),c=(r[bo+"Duration"]||"").split(", "),l=Oo(s,c),u=0,d=0;return"transition"===n?a>0&&(t="transition",u=a,d=i.length):"animation"===n?l>0&&(t="animation",u=l,d=c.length):d=(t=(u=Math.max(a,l))>0?a>l?"transition":"animation":null)?"transition"===t?i.length:c.length:0,{type:t,timeout:u,propCount:d,hasTransform:"transition"===t&&Ao.test(r[yo+"Property"])}}function Oo(e,n){for(;e.length<n.length;)e=e.concat(e);return Math.max.apply(null,n.map((function(n,t){return To(n)+To(e[t])})))}function To(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function So(e,n){var t=e.elm;a(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=ho(e.data.transition);if(!i(r)&&!a(t._enterCb)&&1===t.nodeType){for(var o=r.css,s=r.type,c=r.enterClass,d=r.enterToClass,p=r.enterActiveClass,f=r.appearClass,h=r.appearToClass,m=r.appearActiveClass,v=r.beforeEnter,y=r.enter,g=r.afterEnter,_=r.enterCancelled,k=r.beforeAppear,x=r.appear,E=r.afterAppear,w=r.appearCancelled,C=r.duration,A=Jn,L=Jn.$vnode;L&&L.parent;)A=L.context,L=L.parent;var O=!A._isMounted||!e.isRootInsert;if(!O||x||""===x){var T=O&&f?f:c,S=O&&m?m:p,j=O&&h?h:d,U=O&&k||v,R=O&&l(x)?x:y,P=O&&E||g,I=O&&w||_,$=b(u(C)?C.enter:C);0;var B=!1!==o&&!Q,z=Ro(R),M=t._enterCb=F((function(){B&&(wo(t,j),wo(t,S)),M.cancelled?(B&&wo(t,T),I&&I(t)):P&&P(t),t._enterCb=null}));e.data.show||We(e,"insert",(function(){var n=t.parentNode,r=n&&n._pending&&n._pending[e.key];r&&r.tag===e.tag&&r.elm._leaveCb&&r.elm._leaveCb(),R&&R(t,M)})),U&&U(t),B&&(Eo(t,T),Eo(t,S),xo((function(){wo(t,T),M.cancelled||(Eo(t,j),z||(Uo($)?setTimeout(M,$):Co(t,s,M)))}))),e.data.show&&(n&&n(),R&&R(t,M)),B||z||M()}}}function jo(e,n){var t=e.elm;a(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=ho(e.data.transition);if(i(r)||1!==t.nodeType)return n();if(!a(t._leaveCb)){var o=r.css,s=r.type,c=r.leaveClass,l=r.leaveToClass,d=r.leaveActiveClass,p=r.beforeLeave,f=r.leave,h=r.afterLeave,m=r.leaveCancelled,v=r.delayLeave,y=r.duration,g=!1!==o&&!Q,_=Ro(f),k=b(u(y)?y.leave:y);0;var x=t._leaveCb=F((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),g&&(wo(t,l),wo(t,d)),x.cancelled?(g&&wo(t,c),m&&m(t)):(n(),h&&h(t)),t._leaveCb=null}));v?v(E):E()}function E(){x.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),p&&p(t),g&&(Eo(t,c),Eo(t,d),xo((function(){wo(t,c),x.cancelled||(Eo(t,l),_||(Uo(k)?setTimeout(x,k):Co(t,s,x)))}))),f&&f(t,x),g||_||x())}}function Uo(e){return"number"==typeof e&&!isNaN(e)}function Ro(e){if(i(e))return!1;var n=e.fns;return a(n)?Ro(Array.isArray(n)?n[0]:n):(e._length||e.length)>1}function Po(e,n){!0!==n.data.show&&So(n)}var Io=function(e){var n,t,r={},l=e.modules,u=e.nodeOps;for(n=0;n<Ar.length;++n)for(r[Ar[n]]=[],t=0;t<l.length;++t)a(l[t][Ar[n]])&&r[Ar[n]].push(l[t][Ar[n]]);function d(e){var n=u.parentNode(e);a(n)&&u.removeChild(n,e)}function p(e,n,t,o,i,c,l){if(a(e.elm)&&a(c)&&(e=c[l]=ye(e)),e.isRootInsert=!i,!function(e,n,t,o){var i=e.data;if(a(i)){var c=a(e.componentInstance)&&i.keepAlive;if(a(i=i.hook)&&a(i=i.init)&&i(e,!1),a(e.componentInstance))return f(e,n),h(t,e.elm,o),s(c)&&function(e,n,t,o){var i,s=e;for(;s.componentInstance;)if(s=s.componentInstance._vnode,a(i=s.data)&&a(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](Cr,s);n.push(s);break}h(t,e.elm,o)}(e,n,t,o),!0}}(e,n,t,o)){var d=e.data,p=e.children,v=e.tag;a(v)?(e.elm=e.ns?u.createElementNS(e.ns,v):u.createElement(v,e),g(e),m(e,p,n),a(d)&&y(e,n),h(t,e.elm,o)):s(e.isComment)?(e.elm=u.createComment(e.text),h(t,e.elm,o)):(e.elm=u.createTextNode(e.text),h(t,e.elm,o))}}function f(e,n){a(e.data.pendingInsert)&&(n.push.apply(n,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,v(e)?(y(e,n),g(e)):(Er(e),n.push(e))}function h(e,n,t){a(e)&&(a(t)?u.parentNode(t)===e&&u.insertBefore(e,n,t):u.appendChild(e,n))}function m(e,n,t){if(o(n)){0;for(var r=0;r<n.length;++r)p(n[r],t,e.elm,null,!0,n,r)}else c(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function v(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return a(e.tag)}function y(e,t){for(var o=0;o<r.create.length;++o)r.create[o](Cr,e);a(n=e.data.hook)&&(a(n.create)&&n.create(Cr,e),a(n.insert)&&t.push(e))}function g(e){var n;if(a(n=e.fnScopeId))u.setStyleScope(e.elm,n);else for(var t=e;t;)a(n=t.context)&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n),t=t.parent;a(n=Jn)&&n!==e.context&&n!==e.fnContext&&a(n=n.$options._scopeId)&&u.setStyleScope(e.elm,n)}function b(e,n,t,r,o,i){for(;r<=o;++r)p(t[r],i,e,n,!1,t,r)}function k(e){var n,t,o=e.data;if(a(o))for(a(n=o.hook)&&a(n=n.destroy)&&n(e),n=0;n<r.destroy.length;++n)r.destroy[n](e);if(a(n=e.children))for(t=0;t<e.children.length;++t)k(e.children[t])}function x(e,n,t){for(;n<=t;++n){var r=e[n];a(r)&&(a(r.tag)?(E(r),k(r)):d(r.elm))}}function E(e,n){if(a(n)||a(e.data)){var t,o=r.remove.length+1;for(a(n)?n.listeners+=o:n=function(e,n){function t(){0==--t.listeners&&d(e)}return t.listeners=n,t}(e.elm,o),a(t=e.componentInstance)&&a(t=t._vnode)&&a(t.data)&&E(t,n),t=0;t<r.remove.length;++t)r.remove[t](e,n);a(t=e.data.hook)&&a(t=t.remove)?t(e,n):n()}else d(e.elm)}function w(e,n,t,r){for(var o=t;o<r;o++){var i=n[o];if(a(i)&&Lr(e,i))return o}}function C(e,n,t,o,c,l){if(e!==n){a(n.elm)&&a(o)&&(n=o[c]=ye(n));var d=n.elm=e.elm;if(s(e.isAsyncPlaceholder))a(n.asyncFactory.resolved)?O(e.elm,n,t):n.isAsyncPlaceholder=!0;else if(s(n.isStatic)&&s(e.isStatic)&&n.key===e.key&&(s(n.isCloned)||s(n.isOnce)))n.componentInstance=e.componentInstance;else{var f,h=n.data;a(h)&&a(f=h.hook)&&a(f=f.prepatch)&&f(e,n);var m=e.children,y=n.children;if(a(h)&&v(n)){for(f=0;f<r.update.length;++f)r.update[f](e,n);a(f=h.hook)&&a(f=f.update)&&f(e,n)}i(n.text)?a(m)&&a(y)?m!==y&&function(e,n,t,r,o){var s,c,l,d=0,f=0,h=n.length-1,m=n[0],v=n[h],y=t.length-1,g=t[0],_=t[y],k=!o;for(0;d<=h&&f<=y;)i(m)?m=n[++d]:i(v)?v=n[--h]:Lr(m,g)?(C(m,g,r,t,f),m=n[++d],g=t[++f]):Lr(v,_)?(C(v,_,r,t,y),v=n[--h],_=t[--y]):Lr(m,_)?(C(m,_,r,t,y),k&&u.insertBefore(e,m.elm,u.nextSibling(v.elm)),m=n[++d],_=t[--y]):Lr(v,g)?(C(v,g,r,t,f),k&&u.insertBefore(e,v.elm,m.elm),v=n[--h],g=t[++f]):(i(s)&&(s=Or(n,d,h)),i(c=a(g.key)?s[g.key]:w(g,n,d,h))?p(g,r,e,m.elm,!1,t,f):Lr(l=n[c],g)?(C(l,g,r,t,f),n[c]=void 0,k&&u.insertBefore(e,l.elm,m.elm)):p(g,r,e,m.elm,!1,t,f),g=t[++f]);d>h?b(e,i(t[y+1])?null:t[y+1].elm,t,f,y,r):f>y&&x(n,d,h)}(d,m,y,t,l):a(y)?(a(e.text)&&u.setTextContent(d,""),b(d,null,y,0,y.length-1,t)):a(m)?x(m,0,m.length-1):a(e.text)&&u.setTextContent(d,""):e.text!==n.text&&u.setTextContent(d,n.text),a(h)&&a(f=h.hook)&&a(f=f.postpatch)&&f(e,n)}}}function A(e,n,t){if(s(t)&&a(e.parent))e.parent.data.pendingInsert=n;else for(var r=0;r<n.length;++r)n[r].data.hook.insert(n[r])}var L=_("attrs,class,staticClass,staticStyle,key");function O(e,n,t,r){var o,i=n.tag,c=n.data,l=n.children;if(r=r||c&&c.pre,n.elm=e,s(n.isComment)&&a(n.asyncFactory))return n.isAsyncPlaceholder=!0,!0;if(a(c)&&(a(o=c.hook)&&a(o=o.init)&&o(n,!0),a(o=n.componentInstance)))return f(n,t),!0;if(a(i)){if(a(l))if(e.hasChildNodes())if(a(o=c)&&a(o=o.domProps)&&a(o=o.innerHTML)){if(o!==e.innerHTML)return!1}else{for(var u=!0,d=e.firstChild,p=0;p<l.length;p++){if(!d||!O(d,l[p],t,r)){u=!1;break}d=d.nextSibling}if(!u||d)return!1}else m(n,l,t);if(a(c)){var h=!1;for(var v in c)if(!L(v)){h=!0,y(n,t);break}!h&&c.class&&Kn(c.class)}}else e.data!==n.text&&(e.data=n.text);return!0}return function(e,n,t,o){if(!i(n)){var c,l=!1,d=[];if(i(e))l=!0,p(n,d);else{var f=a(e.nodeType);if(!f&&Lr(e,n))C(e,n,d,null,null,o);else{if(f){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),t=!0),s(t)&&O(e,n,d))return A(n,d,!0),e;c=e,e=new he(u.tagName(c).toLowerCase(),{},[],void 0,c)}var h=e.elm,m=u.parentNode(h);if(p(n,d,h._leaveCb?null:m,u.nextSibling(h)),a(n.parent))for(var y=n.parent,g=v(n);y;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](y);if(y.elm=n.elm,g){for(var _=0;_<r.create.length;++_)r.create[_](Cr,y);var E=y.data.hook.insert;if(E.merged)for(var w=E.fns.slice(1),L=0;L<w.length;L++)w[L]()}else Er(y);y=y.parent}a(m)?x([e],0,0):a(e.tag)&&k(e)}}return A(n,d,l),n.elm}a(e)&&k(e)}}({nodeOps:kr,modules:[Mr,Nr,Xr,Jr,lo,Z?{create:Po,activate:Po,remove:function(e,n){!0!==e.data.show?jo(e,n):n()}}:{}].concat(Ir)});Q&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&qo(e,"input")}));var $o={inserted:function(e,n,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?We(t,"postpatch",(function(){$o.componentUpdated(e,n,t)})):Bo(e,n,t.context),e._vOptions=[].map.call(e.options,Fo)):("textarea"===t.tag||_r(e.type))&&(e._vModifiers=n.modifiers,n.modifiers.lazy||(e.addEventListener("compositionstart",Do),e.addEventListener("compositionend",No),e.addEventListener("change",No),Q&&(e.vmodel=!0)))},componentUpdated:function(e,n,t){if("select"===t.tag){Bo(e,n,t.context);var r=e._vOptions,o=e._vOptions=[].map.call(e.options,Fo);if(o.some((function(e,n){return!z(e,r[n])})))(e.multiple?n.value.some((function(e){return Mo(e,o)})):n.value!==n.oldValue&&Mo(n.value,o))&&qo(e,"change")}}};function Bo(e,n,t){zo(e,n,t),(J||ee)&&setTimeout((function(){zo(e,n,t)}),0)}function zo(e,n,t){var r=n.value,o=e.multiple;if(!o||Array.isArray(r)){for(var i,a,s=0,c=e.options.length;s<c;s++)if(a=e.options[s],o)i=M(r,Fo(a))>-1,a.selected!==i&&(a.selected=i);else if(z(Fo(a),r))return void(e.selectedIndex!==s&&(e.selectedIndex=s));o||(e.selectedIndex=-1)}}function Mo(e,n){return n.every((function(n){return!z(n,e)}))}function Fo(e){return"_value"in e?e._value:e.value}function Do(e){e.target.composing=!0}function No(e){e.target.composing&&(e.target.composing=!1,qo(e.target,"input"))}function qo(e,n){var t=document.createEvent("HTMLEvents");t.initEvent(n,!0,!0),e.dispatchEvent(t)}function Ko(e){return!e.componentInstance||e.data&&e.data.transition?e:Ko(e.componentInstance._vnode)}var Ho={model:$o,show:{bind:function(e,n,t){var r=n.value,o=(t=Ko(t)).data&&t.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;r&&o?(t.data.show=!0,So(t,(function(){e.style.display=i}))):e.style.display=r?i:"none"},update:function(e,n,t){var r=n.value;!r!=!n.oldValue&&((t=Ko(t)).data&&t.data.transition?(t.data.show=!0,r?So(t,(function(){e.style.display=e.__vOriginalDisplay})):jo(t,(function(){e.style.display="none"}))):e.style.display=r?e.__vOriginalDisplay:"none")},unbind:function(e,n,t,r,o){o||(e.style.display=e.__vOriginalDisplay)}}},Vo={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Go(e){var n=e&&e.componentOptions;return n&&n.Ctor.options.abstract?Go(An(n.children)):e}function Wo(e){var n={},t=e.$options;for(var r in t.propsData)n[r]=e[r];var o=t._parentListeners;for(var r in o)n[L(r)]=o[r];return n}function Xo(e,n){if(/\d-keep-alive$/.test(n.tag))return e("keep-alive",{props:n.componentOptions.propsData})}var Zo=function(e){return e.tag||vn(e)},Yo=function(e){return"show"===e.name},Jo={name:"transition",props:Vo,abstract:!0,render:function(e){var n=this,t=this.$slots.default;if(t&&(t=t.filter(Zo)).length){0;var r=this.mode;0;var o=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return o;var i=Go(o);if(!i)return o;if(this._leaving)return Xo(e,o);var a="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?a+"comment":a+i.tag:c(i.key)?0===String(i.key).indexOf(a)?i.key:a+i.key:i.key;var s=(i.data||(i.data={})).transition=Wo(this),l=this._vnode,u=Go(l);if(i.data.directives&&i.data.directives.some(Yo)&&(i.data.show=!0),u&&u.data&&!function(e,n){return n.key===e.key&&n.tag===e.tag}(i,u)&&!vn(u)&&(!u.componentInstance||!u.componentInstance._vnode.isComment)){var d=u.data.transition=R({},s);if("out-in"===r)return this._leaving=!0,We(d,"afterLeave",(function(){n._leaving=!1,n.$forceUpdate()})),Xo(e,o);if("in-out"===r){if(vn(i))return l;var p,f=function(){p()};We(s,"afterEnter",f),We(s,"enterCancelled",f),We(d,"delayLeave",(function(e){p=e}))}}return o}}},Qo=R({tag:String,moveClass:String},Vo);function ei(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function ni(e){e.data.newPos=e.elm.getBoundingClientRect()}function ti(e){var n=e.data.pos,t=e.data.newPos,r=n.left-t.left,o=n.top-t.top;if(r||o){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate(".concat(r,"px,").concat(o,"px)"),i.transitionDuration="0s"}}delete Qo.mode;var ri={Transition:Jo,TransitionGroup:{props:Qo,beforeMount:function(){var e=this,n=this._update;this._update=function(t,r){var o=Qn(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,o(),n.call(e,t,r)}},render:function(e){for(var n=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,o=this.$slots.default||[],i=this.children=[],a=Wo(this),s=0;s<o.length;s++){if((u=o[s]).tag)if(null!=u.key&&0!==String(u.key).indexOf("__vlist"))i.push(u),t[u.key]=u,(u.data||(u.data={})).transition=a;else;}if(r){var c=[],l=[];for(s=0;s<r.length;s++){var u;(u=r[s]).data.transition=a,u.data.pos=u.elm.getBoundingClientRect(),t[u.key]?c.push(u):l.push(u)}this.kept=e(n,null,c),this.removed=l}return e(n,null,i)},updated:function(){var e=this.prevChildren,n=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,n)&&(e.forEach(ei),e.forEach(ni),e.forEach(ti),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,r=t.style;Eo(t,n),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(go,t._moveCb=function e(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(go,e),t._moveCb=null,wo(t,n))})}})))},methods:{hasMove:function(e,n){if(!vo)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){fo(t,e)})),po(t,n),t.style.display="none",this.$el.appendChild(t);var r=Lo(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};function oi(e,n){for(var t in n)e[t]=n[t];return e}Wt.config.mustUseProp=function(e,n,t){return"value"===t&&rr(e)&&"button"!==n||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},Wt.config.isReservedTag=gr,Wt.config.isReservedAttr=tr,Wt.config.getTagNamespace=function(e){return yr(e)?"svg":"math"===e?"math":void 0},Wt.config.isUnknownElement=function(e){if(!Z)return!0;if(gr(e))return!1;if(e=e.toLowerCase(),null!=br[e])return br[e];var n=document.createElement(e);return e.indexOf("-")>-1?br[e]=n.constructor===window.HTMLUnknownElement||n.constructor===window.HTMLElement:br[e]=/HTMLUnknownElement/.test(n.toString())},R(Wt.options.directives,Ho),R(Wt.options.components,ri),Wt.prototype.__patch__=Z?Io:I,Wt.prototype.$mount=function(e,n){return function(e,n,t){var r;e.$el=n,e.$options.render||(e.$options.render=me),tt(e,"beforeMount"),r=function(){e._update(e._render(),t)},new Gn(e,r,I,{before:function(){e._isMounted&&!e._isDestroyed&&tt(e,"beforeUpdate")}},!0),t=!1;var o=e._preWatchers;if(o)for(var i=0;i<o.length;i++)o[i].run();return null==e.$vnode&&(e._isMounted=!0,tt(e,"mounted")),e}(this,e=e&&Z?function(e){if("string"==typeof e){var n=document.querySelector(e);return n||document.createElement("div")}return e}(e):void 0,n)},Z&&setTimeout((function(){K.devtools&&ce&&ce.emit("init",Wt)}),0);var ii=/[!'()*]/g,ai=function(e){return"%"+e.charCodeAt(0).toString(16)},si=/%2C/g,ci=function(e){return encodeURIComponent(e).replace(ii,ai).replace(si,",")};function li(e){try{return decodeURIComponent(e)}catch(e){0}return e}var ui=function(e){return null==e||"object"==typeof e?e:String(e)};function di(e){var n={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),r=li(t.shift()),o=t.length>0?li(t.join("=")):null;void 0===n[r]?n[r]=o:Array.isArray(n[r])?n[r].push(o):n[r]=[n[r],o]})),n):n}function pi(e){var n=e?Object.keys(e).map((function(n){var t=e[n];if(void 0===t)return"";if(null===t)return ci(n);if(Array.isArray(t)){var r=[];return t.forEach((function(e){void 0!==e&&(null===e?r.push(ci(n)):r.push(ci(n)+"="+ci(e)))})),r.join("&")}return ci(n)+"="+ci(t)})).filter((function(e){return e.length>0})).join("&"):null;return n?"?"+n:""}var fi=/\/?$/;function hi(e,n,t,r){var o=r&&r.options.stringifyQuery,i=n.query||{};try{i=mi(i)}catch(e){}var a={name:n.name||e&&e.name,meta:e&&e.meta||{},path:n.path||"/",hash:n.hash||"",query:i,params:n.params||{},fullPath:gi(n,o),matched:e?yi(e):[]};return t&&(a.redirectedFrom=gi(t,o)),Object.freeze(a)}function mi(e){if(Array.isArray(e))return e.map(mi);if(e&&"object"==typeof e){var n={};for(var t in e)n[t]=mi(e[t]);return n}return e}var vi=hi(null,{path:"/"});function yi(e){for(var n=[];e;)n.unshift(e),e=e.parent;return n}function gi(e,n){var t=e.path,r=e.query;void 0===r&&(r={});var o=e.hash;return void 0===o&&(o=""),(t||"/")+(n||pi)(r)+o}function bi(e,n,t){return n===vi?e===n:!!n&&(e.path&&n.path?e.path.replace(fi,"")===n.path.replace(fi,"")&&(t||e.hash===n.hash&&_i(e.query,n.query)):!(!e.name||!n.name)&&(e.name===n.name&&(t||e.hash===n.hash&&_i(e.query,n.query)&&_i(e.params,n.params))))}function _i(e,n){if(void 0===e&&(e={}),void 0===n&&(n={}),!e||!n)return e===n;var t=Object.keys(e).sort(),r=Object.keys(n).sort();return t.length===r.length&&t.every((function(t,o){var i=e[t];if(r[o]!==t)return!1;var a=n[t];return null==i||null==a?i===a:"object"==typeof i&&"object"==typeof a?_i(i,a):String(i)===String(a)}))}function ki(e){for(var n=0;n<e.matched.length;n++){var t=e.matched[n];for(var r in t.instances){var o=t.instances[r],i=t.enteredCbs[r];if(o&&i){delete t.enteredCbs[r];for(var a=0;a<i.length;a++)o._isBeingDestroyed||i[a](o)}}}}var xi={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,n){var t=n.props,r=n.children,o=n.parent,i=n.data;i.routerView=!0;for(var a=o.$createElement,s=t.name,c=o.$route,l=o._routerViewCache||(o._routerViewCache={}),u=0,d=!1;o&&o._routerRoot!==o;){var p=o.$vnode?o.$vnode.data:{};p.routerView&&u++,p.keepAlive&&o._directInactive&&o._inactive&&(d=!0),o=o.$parent}if(i.routerViewDepth=u,d){var f=l[s],h=f&&f.component;return h?(f.configProps&&Ei(h,i,f.route,f.configProps),a(h,i,r)):a()}var m=c.matched[u],v=m&&m.components[s];if(!m||!v)return l[s]=null,a();l[s]={component:v},i.registerRouteInstance=function(e,n){var t=m.instances[s];(n&&t!==e||!n&&t===e)&&(m.instances[s]=n)},(i.hook||(i.hook={})).prepatch=function(e,n){m.instances[s]=n.componentInstance},i.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==m.instances[s]&&(m.instances[s]=e.componentInstance),ki(c)};var y=m.props&&m.props[s];return y&&(oi(l[s],{route:c,configProps:y}),Ei(v,i,c,y)),a(v,i,r)}};function Ei(e,n,t,r){var o=n.props=function(e,n){switch(typeof n){case"undefined":return;case"object":return n;case"function":return n(e);case"boolean":return n?e.params:void 0;default:0}}(t,r);if(o){o=n.props=oi({},o);var i=n.attrs=n.attrs||{};for(var a in o)e.props&&a in e.props||(i[a]=o[a],delete o[a])}}function wi(e,n,t){var r=e.charAt(0);if("/"===r)return e;if("?"===r||"#"===r)return n+e;var o=n.split("/");t&&o[o.length-1]||o.pop();for(var i=e.replace(/^\//,"").split("/"),a=0;a<i.length;a++){var s=i[a];".."===s?o.pop():"."!==s&&o.push(s)}return""!==o[0]&&o.unshift(""),o.join("/")}function Ci(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var Ai=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},Li=Di,Oi=Ri,Ti=function(e,n){return Ii(Ri(e,n),n)},Si=Ii,ji=Fi,Ui=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function Ri(e,n){for(var t,r=[],o=0,i=0,a="",s=n&&n.delimiter||"/";null!=(t=Ui.exec(e));){var c=t[0],l=t[1],u=t.index;if(a+=e.slice(i,u),i=u+c.length,l)a+=l[1];else{var d=e[i],p=t[2],f=t[3],h=t[4],m=t[5],v=t[6],y=t[7];a&&(r.push(a),a="");var g=null!=p&&null!=d&&d!==p,b="+"===v||"*"===v,_="?"===v||"*"===v,k=t[2]||s,x=h||m;r.push({name:f||o++,prefix:p||"",delimiter:k,optional:_,repeat:b,partial:g,asterisk:!!y,pattern:x?Bi(x):y?".*":"[^"+$i(k)+"]+?"})}}return i<e.length&&(a+=e.substr(i)),a&&r.push(a),r}function Pi(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function Ii(e,n){for(var t=new Array(e.length),r=0;r<e.length;r++)"object"==typeof e[r]&&(t[r]=new RegExp("^(?:"+e[r].pattern+")$",Mi(n)));return function(n,r){for(var o="",i=n||{},a=(r||{}).pretty?Pi:encodeURIComponent,s=0;s<e.length;s++){var c=e[s];if("string"!=typeof c){var l,u=i[c.name];if(null==u){if(c.optional){c.partial&&(o+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(Ai(u)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(u)+"`");if(0===u.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var d=0;d<u.length;d++){if(l=a(u[d]),!t[s].test(l))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(l)+"`");o+=(0===d?c.prefix:c.delimiter)+l}}else{if(l=c.asterisk?encodeURI(u).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):a(u),!t[s].test(l))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+l+'"');o+=c.prefix+l}}else o+=c}return o}}function $i(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Bi(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function zi(e,n){return e.keys=n,e}function Mi(e){return e&&e.sensitive?"":"i"}function Fi(e,n,t){Ai(n)||(t=n||t,n=[]);for(var r=(t=t||{}).strict,o=!1!==t.end,i="",a=0;a<e.length;a++){var s=e[a];if("string"==typeof s)i+=$i(s);else{var c=$i(s.prefix),l="(?:"+s.pattern+")";n.push(s),s.repeat&&(l+="(?:"+c+l+")*"),i+=l=s.optional?s.partial?c+"("+l+")?":"(?:"+c+"("+l+"))?":c+"("+l+")"}}var u=$i(t.delimiter||"/"),d=i.slice(-u.length)===u;return r||(i=(d?i.slice(0,-u.length):i)+"(?:"+u+"(?=$))?"),i+=o?"$":r&&d?"":"(?="+u+"|$)",zi(new RegExp("^"+i,Mi(t)),n)}function Di(e,n,t){return Ai(n)||(t=n||t,n=[]),t=t||{},e instanceof RegExp?function(e,n){var t=e.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)n.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return zi(e,n)}(e,n):Ai(e)?function(e,n,t){for(var r=[],o=0;o<e.length;o++)r.push(Di(e[o],n,t).source);return zi(new RegExp("(?:"+r.join("|")+")",Mi(t)),n)}(e,n,t):function(e,n,t){return Fi(Ri(e,t),n,t)}(e,n,t)}Li.parse=Oi,Li.compile=Ti,Li.tokensToFunction=Si,Li.tokensToRegExp=ji;var Ni=Object.create(null);function qi(e,n,t){n=n||{};try{var r=Ni[e]||(Ni[e]=Li.compile(e));return"string"==typeof n.pathMatch&&(n[0]=n.pathMatch),r(n,{pretty:!0})}catch(e){return""}finally{delete n[0]}}function Ki(e,n,t,r){var o="string"==typeof e?{path:e}:e;if(o._normalized)return o;if(o.name){var i=(o=oi({},e)).params;return i&&"object"==typeof i&&(o.params=oi({},i)),o}if(!o.path&&o.params&&n){(o=oi({},o))._normalized=!0;var a=oi(oi({},n.params),o.params);if(n.name)o.name=n.name,o.params=a;else if(n.matched.length){var s=n.matched[n.matched.length-1].path;o.path=qi(s,a,n.path)}else 0;return o}var c=function(e){var n="",t="",r=e.indexOf("#");r>=0&&(n=e.slice(r),e=e.slice(0,r));var o=e.indexOf("?");return o>=0&&(t=e.slice(o+1),e=e.slice(0,o)),{path:e,query:t,hash:n}}(o.path||""),l=n&&n.path||"/",u=c.path?wi(c.path,l,t||o.append):l,d=function(e,n,t){void 0===n&&(n={});var r,o=t||di;try{r=o(e||"")}catch(e){r={}}for(var i in n){var a=n[i];r[i]=Array.isArray(a)?a.map(ui):ui(a)}return r}(c.query,o.query,r&&r.options.parseQuery),p=o.hash||c.hash;return p&&"#"!==p.charAt(0)&&(p="#"+p),{_normalized:!0,path:u,query:d,hash:p}}var Hi,Vi=function(){},Gi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var n=this,t=this.$router,r=this.$route,o=t.resolve(this.to,r,this.append),i=o.location,a=o.route,s=o.href,c={},l=t.options.linkActiveClass,u=t.options.linkExactActiveClass,d=null==l?"router-link-active":l,p=null==u?"router-link-exact-active":u,f=null==this.activeClass?d:this.activeClass,h=null==this.exactActiveClass?p:this.exactActiveClass,m=a.redirectedFrom?hi(null,Ki(a.redirectedFrom),null,t):a;c[h]=bi(r,m,this.exactPath),c[f]=this.exact||this.exactPath?c[h]:function(e,n){return 0===e.path.replace(fi,"/").indexOf(n.path.replace(fi,"/"))&&(!n.hash||e.hash===n.hash)&&function(e,n){for(var t in n)if(!(t in e))return!1;return!0}(e.query,n.query)}(r,m);var v=c[h]?this.ariaCurrentValue:null,y=function(e){Wi(e)&&(n.replace?t.replace(i,Vi):t.push(i,Vi))},g={click:Wi};Array.isArray(this.event)?this.event.forEach((function(e){g[e]=y})):g[this.event]=y;var b={class:c},_=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:s,route:a,navigate:y,isActive:c[f],isExactActive:c[h]});if(_){if(1===_.length)return _[0];if(_.length>1||!_.length)return 0===_.length?e():e("span",{},_)}if("a"===this.tag)b.on=g,b.attrs={href:s,"aria-current":v};else{var k=function e(n){var t;if(n)for(var r=0;r<n.length;r++){if("a"===(t=n[r]).tag)return t;if(t.children&&(t=e(t.children)))return t}}(this.$slots.default);if(k){k.isStatic=!1;var x=k.data=oi({},k.data);for(var E in x.on=x.on||{},x.on){var w=x.on[E];E in g&&(x.on[E]=Array.isArray(w)?w:[w])}for(var C in g)C in x.on?x.on[C].push(g[C]):x.on[C]=y;var A=k.data.attrs=oi({},k.data.attrs);A.href=s,A["aria-current"]=v}else b.on=g}return e(this.tag,b,this.$slots.default)}};function Wi(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var n=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(n))return}return e.preventDefault&&e.preventDefault(),!0}}var Xi="undefined"!=typeof window;function Zi(e,n,t,r,o){var i=n||[],a=t||Object.create(null),s=r||Object.create(null);e.forEach((function(e){!function e(n,t,r,o,i,a){var s=o.path,c=o.name;0;var l=o.pathToRegexpOptions||{},u=function(e,n,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==n)return e;return Ci(n.path+"/"+e)}(s,i,l.strict);"boolean"==typeof o.caseSensitive&&(l.sensitive=o.caseSensitive);var d={path:u,regex:Yi(u,l),components:o.components||{default:o.component},alias:o.alias?"string"==typeof o.alias?[o.alias]:o.alias:[],instances:{},enteredCbs:{},name:c,parent:i,matchAs:a,redirect:o.redirect,beforeEnter:o.beforeEnter,meta:o.meta||{},props:null==o.props?{}:o.components?o.props:{default:o.props}};o.children&&o.children.forEach((function(o){var i=a?Ci(a+"/"+o.path):void 0;e(n,t,r,o,d,i)}));t[d.path]||(n.push(d.path),t[d.path]=d);if(void 0!==o.alias)for(var p=Array.isArray(o.alias)?o.alias:[o.alias],f=0;f<p.length;++f){0;var h={path:p[f],children:o.children};e(n,t,r,h,i,d.path||"/")}c&&(r[c]||(r[c]=d))}(i,a,s,e,o)}));for(var c=0,l=i.length;c<l;c++)"*"===i[c]&&(i.push(i.splice(c,1)[0]),l--,c--);return{pathList:i,pathMap:a,nameMap:s}}function Yi(e,n){return Li(e,[],n)}function Ji(e,n){var t=Zi(e),r=t.pathList,o=t.pathMap,i=t.nameMap;function a(e,t,a){var s=Ki(e,t,!1,n),l=s.name;if(l){var u=i[l];if(!u)return c(null,s);var d=u.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var p in t.params)!(p in s.params)&&d.indexOf(p)>-1&&(s.params[p]=t.params[p]);return s.path=qi(u.path,s.params),c(u,s,a)}if(s.path){s.params={};for(var f=0;f<r.length;f++){var h=r[f],m=o[h];if(Qi(m.regex,s.path,s.params))return c(m,s,a)}}return c(null,s)}function s(e,t){var r=e.redirect,o="function"==typeof r?r(hi(e,t,null,n)):r;if("string"==typeof o&&(o={path:o}),!o||"object"!=typeof o)return c(null,t);var s=o,l=s.name,u=s.path,d=t.query,p=t.hash,f=t.params;if(d=s.hasOwnProperty("query")?s.query:d,p=s.hasOwnProperty("hash")?s.hash:p,f=s.hasOwnProperty("params")?s.params:f,l){i[l];return a({_normalized:!0,name:l,query:d,hash:p,params:f},void 0,t)}if(u){var h=function(e,n){return wi(e,n.parent?n.parent.path:"/",!0)}(u,e);return a({_normalized:!0,path:qi(h,f),query:d,hash:p},void 0,t)}return c(null,t)}function c(e,t,r){return e&&e.redirect?s(e,r||t):e&&e.matchAs?function(e,n,t){var r=a({_normalized:!0,path:qi(t,n.params)});if(r){var o=r.matched,i=o[o.length-1];return n.params=r.params,c(i,n)}return c(null,n)}(0,t,e.matchAs):hi(e,t,r,n)}return{match:a,addRoute:function(e,n){var t="object"!=typeof e?i[e]:void 0;Zi([n||e],r,o,i,t),t&&t.alias.length&&Zi(t.alias.map((function(e){return{path:e,children:[n]}})),r,o,i,t)},getRoutes:function(){return r.map((function(e){return o[e]}))},addRoutes:function(e){Zi(e,r,o,i)}}}function Qi(e,n,t){var r=n.match(e);if(!r)return!1;if(!t)return!0;for(var o=1,i=r.length;o<i;++o){var a=e.keys[o-1];a&&(t[a.name||"pathMatch"]="string"==typeof r[o]?li(r[o]):r[o])}return!0}var ea=Xi&&window.performance&&window.performance.now?window.performance:Date;function na(){return ea.now().toFixed(3)}var ta=na();function ra(){return ta}function oa(e){return ta=e}var ia=Object.create(null);function aa(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,n=window.location.href.replace(e,""),t=oi({},window.history.state);return t.key=ra(),window.history.replaceState(t,"",n),window.addEventListener("popstate",la),function(){window.removeEventListener("popstate",la)}}function sa(e,n,t,r){if(e.app){var o=e.options.scrollBehavior;o&&e.app.$nextTick((function(){var i=function(){var e=ra();if(e)return ia[e]}(),a=o.call(e,n,t,r?i:null);a&&("function"==typeof a.then?a.then((function(e){ha(e,i)})).catch((function(e){0})):ha(a,i))}))}}function ca(){var e=ra();e&&(ia[e]={x:window.pageXOffset,y:window.pageYOffset})}function la(e){ca(),e.state&&e.state.key&&oa(e.state.key)}function ua(e){return pa(e.x)||pa(e.y)}function da(e){return{x:pa(e.x)?e.x:window.pageXOffset,y:pa(e.y)?e.y:window.pageYOffset}}function pa(e){return"number"==typeof e}var fa=/^#\d/;function ha(e,n){var t,r="object"==typeof e;if(r&&"string"==typeof e.selector){var o=fa.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(o){var i=e.offset&&"object"==typeof e.offset?e.offset:{};n=function(e,n){var t=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{x:r.left-t.left-n.x,y:r.top-t.top-n.y}}(o,i={x:pa((t=i).x)?t.x:0,y:pa(t.y)?t.y:0})}else ua(e)&&(n=da(e))}else r&&ua(e)&&(n=da(e));n&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:n.x,top:n.y,behavior:e.behavior}):window.scrollTo(n.x,n.y))}var ma,va=Xi&&((-1===(ma=window.navigator.userAgent).indexOf("Android 2.")&&-1===ma.indexOf("Android 4.0")||-1===ma.indexOf("Mobile Safari")||-1!==ma.indexOf("Chrome")||-1!==ma.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function ya(e,n){ca();var t=window.history;try{if(n){var r=oi({},t.state);r.key=ra(),t.replaceState(r,"",e)}else t.pushState({key:oa(na())},"",e)}catch(t){window.location[n?"replace":"assign"](e)}}function ga(e){ya(e,!0)}var ba={redirected:2,aborted:4,cancelled:8,duplicated:16};function _a(e,n){return xa(e,n,ba.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var n={};return Ea.forEach((function(t){t in e&&(n[t]=e[t])})),JSON.stringify(n,null,2)}(n)+'" via a navigation guard.')}function ka(e,n){return xa(e,n,ba.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+n.fullPath+'" with a new navigation.')}function xa(e,n,t,r){var o=new Error(r);return o._isRouter=!0,o.from=e,o.to=n,o.type=t,o}var Ea=["params","query","hash"];function wa(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function Ca(e,n){return wa(e)&&e._isRouter&&(null==n||e.type===n)}function Aa(e,n,t){var r=function(o){o>=e.length?t():e[o]?n(e[o],(function(){r(o+1)})):r(o+1)};r(0)}function La(e){return function(n,t,r){var o=!1,i=0,a=null;Oa(e,(function(e,n,t,s){if("function"==typeof e&&void 0===e.cid){o=!0,i++;var c,l=ja((function(n){var o;((o=n).__esModule||Sa&&"Module"===o[Symbol.toStringTag])&&(n=n.default),e.resolved="function"==typeof n?n:Hi.extend(n),t.components[s]=n,--i<=0&&r()})),u=ja((function(e){var n="Failed to resolve async component "+s+": "+e;a||(a=wa(e)?e:new Error(n),r(a))}));try{c=e(l,u)}catch(e){u(e)}if(c)if("function"==typeof c.then)c.then(l,u);else{var d=c.component;d&&"function"==typeof d.then&&d.then(l,u)}}})),o||r()}}function Oa(e,n){return Ta(e.map((function(e){return Object.keys(e.components).map((function(t){return n(e.components[t],e.instances[t],e,t)}))})))}function Ta(e){return Array.prototype.concat.apply([],e)}var Sa="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function ja(e){var n=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!n)return n=!0,e.apply(this,t)}}var Ua=function(e,n){this.router=e,this.base=function(e){if(!e)if(Xi){var n=document.querySelector("base");e=(e=n&&n.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(n),this.current=vi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Ra(e,n,t,r){var o=Oa(e,(function(e,r,o,i){var a=function(e,n){"function"!=typeof e&&(e=Hi.extend(e));return e.options[n]}(e,n);if(a)return Array.isArray(a)?a.map((function(e){return t(e,r,o,i)})):t(a,r,o,i)}));return Ta(r?o.reverse():o)}function Pa(e,n){if(n)return function(){return e.apply(n,arguments)}}Ua.prototype.listen=function(e){this.cb=e},Ua.prototype.onReady=function(e,n){this.ready?e():(this.readyCbs.push(e),n&&this.readyErrorCbs.push(n))},Ua.prototype.onError=function(e){this.errorCbs.push(e)},Ua.prototype.transitionTo=function(e,n,t){var r,o=this;try{r=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(n){n(e)})),e}var i=this.current;this.confirmTransition(r,(function(){o.updateRoute(r),n&&n(r),o.ensureURL(),o.router.afterHooks.forEach((function(e){e&&e(r,i)})),o.ready||(o.ready=!0,o.readyCbs.forEach((function(e){e(r)})))}),(function(e){t&&t(e),e&&!o.ready&&(Ca(e,ba.redirected)&&i===vi||(o.ready=!0,o.readyErrorCbs.forEach((function(n){n(e)}))))}))},Ua.prototype.confirmTransition=function(e,n,t){var r=this,o=this.current;this.pending=e;var i,a,s=function(e){!Ca(e)&&wa(e)&&(r.errorCbs.length?r.errorCbs.forEach((function(n){n(e)})):console.error(e)),t&&t(e)},c=e.matched.length-1,l=o.matched.length-1;if(bi(e,o)&&c===l&&e.matched[c]===o.matched[l])return this.ensureURL(),e.hash&&sa(this.router,o,e,!1),s(((a=xa(i=o,e,ba.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",a));var u=function(e,n){var t,r=Math.max(e.length,n.length);for(t=0;t<r&&e[t]===n[t];t++);return{updated:n.slice(0,t),activated:n.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),d=u.updated,p=u.deactivated,f=u.activated,h=[].concat(function(e){return Ra(e,"beforeRouteLeave",Pa,!0)}(p),this.router.beforeHooks,function(e){return Ra(e,"beforeRouteUpdate",Pa)}(d),f.map((function(e){return e.beforeEnter})),La(f)),m=function(n,t){if(r.pending!==e)return s(ka(o,e));try{n(e,o,(function(n){!1===n?(r.ensureURL(!0),s(function(e,n){return xa(e,n,ba.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+n.fullPath+'" via a navigation guard.')}(o,e))):wa(n)?(r.ensureURL(!0),s(n)):"string"==typeof n||"object"==typeof n&&("string"==typeof n.path||"string"==typeof n.name)?(s(_a(o,e)),"object"==typeof n&&n.replace?r.replace(n):r.push(n)):t(n)}))}catch(e){s(e)}};Aa(h,m,(function(){Aa(function(e){return Ra(e,"beforeRouteEnter",(function(e,n,t,r){return function(e,n,t){return function(r,o,i){return e(r,o,(function(e){"function"==typeof e&&(n.enteredCbs[t]||(n.enteredCbs[t]=[]),n.enteredCbs[t].push(e)),i(e)}))}}(e,t,r)}))}(f).concat(r.router.resolveHooks),m,(function(){if(r.pending!==e)return s(ka(o,e));r.pending=null,n(e),r.router.app&&r.router.app.$nextTick((function(){ki(e)}))}))}))},Ua.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ua.prototype.setupListeners=function(){},Ua.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=vi,this.pending=null};var Ia=function(e){function n(n,t){e.call(this,n,t),this._startLocation=$a(this.base)}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router,t=n.options.scrollBehavior,r=va&&t;r&&this.listeners.push(aa());var o=function(){var t=e.current,o=$a(e.base);e.current===vi&&o===e._startLocation||e.transitionTo(o,(function(e){r&&sa(n,e,t,!0)}))};window.addEventListener("popstate",o),this.listeners.push((function(){window.removeEventListener("popstate",o)}))}},n.prototype.go=function(e){window.history.go(e)},n.prototype.push=function(e,n,t){var r=this,o=this.current;this.transitionTo(e,(function(e){ya(Ci(r.base+e.fullPath)),sa(r.router,e,o,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,o=this.current;this.transitionTo(e,(function(e){ga(Ci(r.base+e.fullPath)),sa(r.router,e,o,!1),n&&n(e)}),t)},n.prototype.ensureURL=function(e){if($a(this.base)!==this.current.fullPath){var n=Ci(this.base+this.current.fullPath);e?ya(n):ga(n)}},n.prototype.getCurrentLocation=function(){return $a(this.base)},n}(Ua);function $a(e){var n=window.location.pathname,t=n.toLowerCase(),r=e.toLowerCase();return!e||t!==r&&0!==t.indexOf(Ci(r+"/"))||(n=n.slice(e.length)),(n||"/")+window.location.search+window.location.hash}var Ba=function(e){function n(n,t,r){e.call(this,n,t),r&&function(e){var n=$a(e);if(!/^\/#/.test(n))return window.location.replace(Ci(e+"/#"+n)),!0}(this.base)||za()}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var n=this.router.options.scrollBehavior,t=va&&n;t&&this.listeners.push(aa());var r=function(){var n=e.current;za()&&e.transitionTo(Ma(),(function(r){t&&sa(e.router,r,n,!0),va||Na(r.fullPath)}))},o=va?"popstate":"hashchange";window.addEventListener(o,r),this.listeners.push((function(){window.removeEventListener(o,r)}))}},n.prototype.push=function(e,n,t){var r=this,o=this.current;this.transitionTo(e,(function(e){Da(e.fullPath),sa(r.router,e,o,!1),n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this,o=this.current;this.transitionTo(e,(function(e){Na(e.fullPath),sa(r.router,e,o,!1),n&&n(e)}),t)},n.prototype.go=function(e){window.history.go(e)},n.prototype.ensureURL=function(e){var n=this.current.fullPath;Ma()!==n&&(e?Da(n):Na(n))},n.prototype.getCurrentLocation=function(){return Ma()},n}(Ua);function za(){var e=Ma();return"/"===e.charAt(0)||(Na("/"+e),!1)}function Ma(){var e=window.location.href,n=e.indexOf("#");return n<0?"":e=e.slice(n+1)}function Fa(e){var n=window.location.href,t=n.indexOf("#");return(t>=0?n.slice(0,t):n)+"#"+e}function Da(e){va?ya(Fa(e)):window.location.hash=e}function Na(e){va?ga(Fa(e)):window.location.replace(Fa(e))}var qa=function(e){function n(n,t){e.call(this,n,t),this.stack=[],this.index=-1}return e&&(n.__proto__=e),n.prototype=Object.create(e&&e.prototype),n.prototype.constructor=n,n.prototype.push=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index+1).concat(e),r.index++,n&&n(e)}),t)},n.prototype.replace=function(e,n,t){var r=this;this.transitionTo(e,(function(e){r.stack=r.stack.slice(0,r.index).concat(e),n&&n(e)}),t)},n.prototype.go=function(e){var n=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var e=n.current;n.index=t,n.updateRoute(r),n.router.afterHooks.forEach((function(n){n&&n(r,e)}))}),(function(e){Ca(e,ba.duplicated)&&(n.index=t)}))}},n.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},n.prototype.ensureURL=function(){},n}(Ua),Ka=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ji(e.routes||[],this);var n=e.mode||"hash";switch(this.fallback="history"===n&&!va&&!1!==e.fallback,this.fallback&&(n="hash"),Xi||(n="abstract"),this.mode=n,n){case"history":this.history=new Ia(this,e.base);break;case"hash":this.history=new Ba(this,e.base,this.fallback);break;case"abstract":this.history=new qa(this,e.base);break;default:0}},Ha={currentRoute:{configurable:!0}};Ka.prototype.match=function(e,n,t){return this.matcher.match(e,n,t)},Ha.currentRoute.get=function(){return this.history&&this.history.current},Ka.prototype.init=function(e){var n=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=n.apps.indexOf(e);t>-1&&n.apps.splice(t,1),n.app===e&&(n.app=n.apps[0]||null),n.app||n.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof Ia||t instanceof Ba){var r=function(e){t.setupListeners(),function(e){var r=t.current,o=n.options.scrollBehavior;va&&o&&"fullPath"in e&&sa(n,e,r,!1)}(e)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(e){n.apps.forEach((function(n){n._route=e}))}))}},Ka.prototype.beforeEach=function(e){return Ga(this.beforeHooks,e)},Ka.prototype.beforeResolve=function(e){return Ga(this.resolveHooks,e)},Ka.prototype.afterEach=function(e){return Ga(this.afterHooks,e)},Ka.prototype.onReady=function(e,n){this.history.onReady(e,n)},Ka.prototype.onError=function(e){this.history.onError(e)},Ka.prototype.push=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.push(e,n,t)}));this.history.push(e,n,t)},Ka.prototype.replace=function(e,n,t){var r=this;if(!n&&!t&&"undefined"!=typeof Promise)return new Promise((function(n,t){r.history.replace(e,n,t)}));this.history.replace(e,n,t)},Ka.prototype.go=function(e){this.history.go(e)},Ka.prototype.back=function(){this.go(-1)},Ka.prototype.forward=function(){this.go(1)},Ka.prototype.getMatchedComponents=function(e){var n=e?e.matched?e:this.resolve(e).route:this.currentRoute;return n?[].concat.apply([],n.matched.map((function(e){return Object.keys(e.components).map((function(n){return e.components[n]}))}))):[]},Ka.prototype.resolve=function(e,n,t){var r=Ki(e,n=n||this.history.current,t,this),o=this.match(r,n),i=o.redirectedFrom||o.fullPath;return{location:r,route:o,href:function(e,n,t){var r="hash"===t?"#"+n:n;return e?Ci(e+"/"+r):r}(this.history.base,i,this.mode),normalizedTo:r,resolved:o}},Ka.prototype.getRoutes=function(){return this.matcher.getRoutes()},Ka.prototype.addRoute=function(e,n){this.matcher.addRoute(e,n),this.history.current!==vi&&this.history.transitionTo(this.history.getCurrentLocation())},Ka.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==vi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Ka.prototype,Ha);var Va=Ka;function Ga(e,n){return e.push(n),function(){var t=e.indexOf(n);t>-1&&e.splice(t,1)}}Ka.install=function e(n){if(!e.installed||Hi!==n){e.installed=!0,Hi=n;var t=function(e){return void 0!==e},r=function(e,n){var r=e.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(e,n)};n.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),n.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(n.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(n.prototype,"$route",{get:function(){return this._routerRoot._route}}),n.component("RouterView",xi),n.component("RouterLink",Gi);var o=n.config.optionMergeStrategies;o.beforeRouteEnter=o.beforeRouteLeave=o.beforeRouteUpdate=o.created}},Ka.version="3.6.5",Ka.isNavigationFailure=Ca,Ka.NavigationFailureType=ba,Ka.START_LOCATION=vi,Xi&&window.Vue&&window.Vue.use(Ka);t(107);t(129),t(16);var Wa={NotFound:()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,335)),Layout:()=>Promise.all([t.e(0),t.e(2)]).then(t.bind(null,334))},Xa={"v-14d5b00e":()=>t.e(5).then(t.bind(null,336)),"v-6f4636bc":()=>t.e(6).then(t.bind(null,337)),"v-30a03cb6":()=>t.e(7).then(t.bind(null,338)),"v-24d5fda5":()=>t.e(9).then(t.bind(null,339)),"v-be411e82":()=>t.e(8).then(t.bind(null,340)),"v-639e0f9a":()=>t.e(10).then(t.bind(null,341)),"v-fb7b08d2":()=>t.e(11).then(t.bind(null,342)),"v-d89ce0de":()=>t.e(12).then(t.bind(null,343)),"v-2b8f38b0":()=>t.e(13).then(t.bind(null,344)),"v-345df50e":()=>t.e(14).then(t.bind(null,345)),"v-072dd135":()=>t.e(17).then(t.bind(null,346)),"v-71660c7c":()=>t.e(16).then(t.bind(null,347)),"v-4fb0b446":()=>t.e(18).then(t.bind(null,348)),"v-2d6b4bec":()=>t.e(19).then(t.bind(null,349)),"v-0ac18964":()=>t.e(20).then(t.bind(null,350)),"v-5d56c92a":()=>t.e(21).then(t.bind(null,351)),"v-23e43bec":()=>t.e(22).then(t.bind(null,352)),"v-0e70e808":()=>t.e(23).then(t.bind(null,353)),"v-4e80661c":()=>t.e(24).then(t.bind(null,354)),"v-82af755a":()=>t.e(26).then(t.bind(null,355)),"v-ca3de854":()=>t.e(25).then(t.bind(null,356)),"v-f75dbe40":()=>t.e(27).then(t.bind(null,357)),"v-4985a9a2":()=>t.e(29).then(t.bind(null,358)),"v-15eefc95":()=>t.e(28).then(t.bind(null,359)),"v-0b0ed22c":()=>t.e(30).then(t.bind(null,360)),"v-551313d7":()=>t.e(31).then(t.bind(null,361)),"v-61d0fb85":()=>t.e(32).then(t.bind(null,362)),"v-a11d1cc4":()=>t.e(33).then(t.bind(null,363)),"v-33f15289":()=>t.e(15).then(t.bind(null,364))};function Za(e){const n=Object.create(null);return function(t){return n[t]||(n[t]=e(t))}}const Ya=/-(\w)/g,Ja=Za(e=>e.replace(Ya,(e,n)=>n?n.toUpperCase():"")),Qa=/\B([A-Z])/g,es=Za(e=>e.replace(Qa,"-$1").toLowerCase()),ns=Za(e=>e.charAt(0).toUpperCase()+e.slice(1));function ts(e,n){if(!n)return;if(e(n))return e(n);return n.includes("-")?e(ns(Ja(n))):e(ns(n))||e(es(n))}const rs=Object.assign({},Wa,Xa),os=e=>rs[e],is=e=>Xa[e],as=e=>Wa[e],ss=e=>Wt.component(e);function cs(e){return ts(is,e)}function ls(e){return ts(as,e)}function us(e){return ts(os,e)}function ds(e){return ts(ss,e)}function ps(...e){return Promise.all(e.filter(e=>e).map(async e=>{if(!ds(e)&&us(e)){const n=await us(e)();Wt.component(e,n.default)}}))}function fs(e,n){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[e]=n)}var hs=t(92),ms=t.n(hs),vs=t(93),ys=t.n(vs),gs={created(){if(this.siteMeta=this.$site.headTags.filter(([e])=>"meta"===e).map(([e,n])=>n),this.$ssrContext){const n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map(e=>{let n="<meta";return Object.keys(e).forEach(t=>{n+=` ${t}="${ys()(e[t])}"`}),n+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=_s(this.$canonicalUrl)}var e},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const e=this.getMergedMetaTags();this.currentMetaTags=ks(e,this.currentMetaTags)},getMergedMetaTags(){const e=this.$page.frontmatter.meta||[];return ms()([{name:"description",content:this.$description}],e,this.siteMeta,xs)},updateCanonicalLink(){bs(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",_s(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ks(null,this.currentMetaTags),bs()}};function bs(){const e=document.querySelector("link[rel='canonical']");e&&e.remove()}function _s(e=""){return e?`<link href="${e}" rel="canonical" />`:""}function ks(e,n){if(n&&[...n].filter(e=>e.parentNode===document.head).forEach(e=>document.head.removeChild(e)),e)return e.map(e=>{const n=document.createElement("meta");return Object.keys(e).forEach(t=>{n.setAttribute(t,e[t])}),document.head.appendChild(n),n})}function xs(e){for(const n of["name","property","itemprop"])if(e.hasOwnProperty(n))return e[n]+n;return JSON.stringify(e)}var Es=t(51),ws={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Es)()((function(){this.setActiveHash()}),300),setActiveHash(){const e=[].slice.call(document.querySelectorAll(".sidebar-link")),n=[].slice.call(document.querySelectorAll(".header-anchor")).filter(n=>e.some(e=>e.hash===n.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+t;for(let e=0;e<n.length;e++){const i=n[e],a=n[e+1],s=0===e&&0===t||t>=i.parentElement.offsetTop+10&&(!a||t<a.parentElement.offsetTop-10),c=decodeURIComponent(this.$route.hash);if(s&&c!==decodeURIComponent(i.hash)){const t=i;if(o===r)for(let t=e+1;t<n.length;t++)if(c===decodeURIComponent(n[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Cs=t(24),As=t.n(Cs),Ls={mounted(){As.a.configure({showSpinner:!1}),this.$router.beforeEach((e,n,t)=>{e.path===n.path||Wt.component(e.name)||As.a.start(),t()}),this.$router.afterEach(()=>{As.a.done(),this.isSidebarOpen=!1})}},Os=t(94),Ts={noCopy:!0,noSelect:!1,disabled:!1,minLength:100,authorName:""},Ss={props:{html:String,lang:String},created(){this.authorName="string"==typeof Ts.authorName?Ts.authorName:this.getI18nValue(Ts.authorName),this.text=this.getI18nValue(Os),this.location=String(location).replace(/#.+$/,"")},methods:{getI18nValue(e){return this.lang in e?e[this.lang]:e["en-US"]}}},js=t(4),Us=Object(js.a)(Ss,(function(){var e=this,n=e._self._c;return n("div",[n("p",[e._v(e._s(e.text.beforeAuthor)+e._s(e.authorName||e.text.author)+e._s(e.text.afterAuthor)),n("a",{attrs:{href:e.location}},[e._v(e._s(decodeURIComponent(e.location)))])]),e._v("\n\n"),n("div",{domProps:{innerHTML:e._s(e.html)}})])}),[],!1,null,null,null).exports,Rs={data:()=>({isElement:!1}),created(){this.onCopy=e=>{const n=getSelection().getRangeAt(0);if(String(n).length<this.minLength)return;if(e.preventDefault(),this.noCopy)return;const t=document.createElement("div");t.appendChild(getSelection().getRangeAt(0).cloneContents());const r=this.$lang,o=new Wt({render:e=>e(Us,{props:{html:t.innerHTML,lang:r}})}).$mount(),{innerHTML:i,innerText:a}=o.$el;e.clipboardData?(e.clipboardData.setData("text/html",i),e.clipboardData.setData("text/plain",a)):window.clipboardData&&window.clipboardData.setData("text",a)}},watch:{isElement(e){if(!e)return;let{copyright:n=!Ts.disabled}=this.$frontmatter;if(!n)return;"object"!=typeof n&&(n={});const t=n.noSelect||Ts.noSelect;this.minLength=n.minLength||Ts.minLength,this.noCopy=n.noCopy||Ts.noCopy,t?this.$el.style.userSelect="none":this.$el.addEventListener("copy",this.onCopy)}},updated(){this.isElement="#comment"!==this.$el.nodeName},beforeDestory(){this.$el.removeEventListener("copy",this.onCopy)}};t(241),t(242);class Ps{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:e="",duration:n=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${e}</div>\n    `,this.containerEl.appendChild(t),n>0&&setTimeout(()=>{this.close(t)},n)}close(e){e.className=e.className.replace("move-in",""),e.className+="move-out",e.addEventListener("animationend",()=>{e.remove()})}}var Is={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(e=>{document.querySelectorAll(e).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(e){if(e.classList.contains("codecopy-enabled"))return;const n=document.createElement("i");n.className="code-copy",n.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',n.title="Copy to clipboard",n.addEventListener("click",()=>{this.copyToClipboard(e.innerText)}),e.appendChild(n),e.classList.add("codecopy-enabled")},copyToClipboard(e){const n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy");(new Ps).show({text:"复制成功",duration:1e3}),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};!function(e,n){void 0===n&&(n={});var t=n.insertAt;if(e&&"undefined"!=typeof document){var r=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===t&&r.firstChild?r.insertBefore(o,r.firstChild):r.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var $s={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},Bs={},zs=function(e){return'<div id="app">\n'.concat(e,"\n</div>")},Ms=function(e){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[e]?window.$VUEPRESS_DEMO_BLOCK[e]:$s[e]},Fs=function e(n,t,r){var o=document.createElement(n);return t&&Object.keys(t).forEach((function(e){if(e.indexOf("data"))o[e]=t[e];else{var n=e.replace("data","");o.dataset[n]=t[e]}})),r&&r.forEach((function(n){var t=n.tag,r=n.attrs,i=n.children;o.appendChild(e(t,r,i))})),o},Ds=function(e,n,t){var r,o=(r=e.querySelectorAll(".".concat(n)),Array.prototype.slice.call(r));return 1!==o.length||t?o:o[0]},Ns=function(e,n){var t,r,o=e.match(/<style>([\s\S]+)<\/style>/),i=e.match(/<template>([\s\S]+)<\/template>/),a=e.match(/<script>([\s\S]+)<\/script>/),s={css:o&&o[1].replace(/^\n|\n$/g,""),html:i&&i[1].replace(/^\n|\n$/g,""),js:a&&a[1].replace(/^\n|\n$/g,""),jsLib:n.jsLib||[],cssLib:n.cssLib||[]};s.htmlTpl=zs(s.html),s.jsTpl=(t=s.js,r=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(r,"\n})")),s.script=function(e,n){var t=e.split(/export\s+default/),r="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),o=window.Babel?window.Babel.transform(r,{presets:["es2015"]}).code:r,i=[eval][0](o);return i.template=n,i}(s.js,s.html);var c=Ms("vue");return s.jsLib.unshift(c),s},qs=function(e,n){var t,r=e.match(/<style>([\s\S]+)<\/style>/),o=e.match(/<html>([\s\S]+)<\/html>/),i=e.match(/<script>([\s\S]+)<\/script>/),a={css:r&&r[1].replace(/^\n|\n$/g,""),html:o&&o[1].replace(/^\n|\n$/g,""),js:i&&i[1].replace(/^\n|\n$/g,""),jsLib:n.jsLib||[],cssLib:n.cssLib||[]};return a.htmlTpl=a.html,a.jsTpl=a.js,a.script=(t=a.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),a},Ks=function(e){return e=e.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),e+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function Hs(){var e=Ds(document,"vuepress-plugin-demo-block__wrapper",!0);e.length?e.forEach((function(e){if("true"!==e.dataset.created){e.style.display="block";var n=Ds(e,"vuepress-plugin-demo-block__code"),t=Ds(e,"vuepress-plugin-demo-block__display"),r=Ds(e,"vuepress-plugin-demo-block__footer"),o=Ds(t,"vuepress-plugin-demo-block__app"),i=decodeURIComponent(e.dataset.code),a=decodeURIComponent(e.dataset.config),s=decodeURIComponent(e.dataset.type);a=a?JSON.parse(a):{};var c=n.querySelector("div").clientHeight,l="react"===s?function(e,n){var t=(0,window.Babel.transform)(e,{presets:["es2015","react"]}).code,r="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),o=new Function("return ".concat(r))(),i={js:o,css:o.__style__||"",jsLib:n.jsLib||[],cssLib:n.cssLib||[],jsTpl:Ks(e),htmlTpl:zs("")},a=Ms("react"),s=Ms("reactDOM");return i.jsLib.unshift(a,s),i}(i,a):"vanilla"===s?qs(i,a):Ns(i,a),u=Fs("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(r.appendChild(u),u.addEventListener("click",Vs.bind(null,u,c,n,r)),Ms("jsfiddle")&&r.appendChild(function(e){var n=e.css,t=e.htmlTpl,r=e.jsTpl,o=e.jsLib,i=e.cssLib,a=o.concat(i).concat(Ms("cssLib")).concat(Ms("jsLib")).join(",");return Fs("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:n}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:r}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:a}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(l)),Ms("codepen")&&r.appendChild(function(e){var n=e.css,t=e.htmlTpl,r=e.jsTpl,o=e.jsLib,i=e.cssLib,a=JSON.stringify({css:n,html:t,js:r,js_external:o.concat(Ms("jsLib")).join(";"),css_external:i.concat(Ms("cssLib")).join(";"),layout:Ms("codepenLayout"),js_pre_processor:Ms("codepenJsProcessor"),editors:Ms("codepenEditors")});return Fs("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:a}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(l)),void 0!==a.horizontal?a.horizontal:Ms("horizontal")){e.classList.add("vuepress-plugin-demo-block__horizontal");var d=n.firstChild.cloneNode(!0);d.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(d)}if(l.css&&function(e){if(!Bs[e]){var n=Fs("style",{innerHTML:e});document.body.appendChild(n),Bs[e]=!0}}(l.css),"react"===s)ReactDOM.render(React.createElement(l.js),o);else if("vue"===s){var p=(new(Vue.extend(l.script))).$mount();o.appendChild(p.$el)}else"vanilla"===s&&(o.innerHTML=l.html,new Function("return (function(){".concat(l.script,"})()"))());e.dataset.created="true"}})):setTimeout((function(e){Hs()}),300)}function Vs(e,n,t,r){var o="1"!==e.dataset.isExpand;t.style.height=o?"".concat(n,"px"):0,o?r.classList.add("vuepress-plugin-demo-block__show-link"):r.classList.remove("vuepress-plugin-demo-block__show-link"),e.dataset.isExpand=o?"1":"0"}var Gs={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},Hs()},updated:function(){Hs()}},Ws="auto",Xs="zoom-in",Zs="zoom-out",Ys="grab",Js="move";function Qs(e,n,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o={passive:!1};r?e.addEventListener(n,t,o):e.removeEventListener(n,t,o)}function ec(e,n){if(e){var t=new Image;t.onload=function(){n&&n(t)},t.src=e}}function nc(e){return e.dataset.original?e.dataset.original:"A"===e.parentNode.tagName?e.parentNode.getAttribute("href"):null}function tc(e,n,t){!function(e){var n=rc,t=oc;if(e.transition){var r=e.transition;delete e.transition,e[n]=r}if(e.transform){var o=e.transform;delete e.transform,e[t]=o}}(n);var r=e.style,o={};for(var i in n)t&&(o[i]=r[i]||""),r[i]=n[i];return o}var rc="transition",oc="transform",ic="transform",ac="transitionend";var sc=function(){},cc={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:sc,onClose:sc,onGrab:sc,onMove:sc,onRelease:sc,onBeforeOpen:sc,onBeforeClose:sc,onBeforeGrab:sc,onBeforeRelease:sc,onImageLoading:sc,onImageLoaded:sc},lc={init:function(e){var n,t;n=this,t=e,Object.getOwnPropertyNames(Object.getPrototypeOf(n)).forEach((function(e){n[e]=n[e].bind(t)}))},click:function(e){if(e.preventDefault(),dc(e))return window.open(this.target.srcOriginal||e.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(e.currentTarget)},scroll:function(){var e=document.documentElement||document.body.parentNode||document.body,n=window.pageXOffset||e.scrollLeft,t=window.pageYOffset||e.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:n,y:t});var r=this.lastScrollPosition.x-n,o=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(o)>=i||Math.abs(r)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(e){(function(e){return"Escape"===(e.key||e.code)||27===e.keyCode})(e)&&(this.released?this.close():this.release(this.close))},mousedown:function(e){if(uc(e)&&!dc(e)){e.preventDefault();var n=e.clientX,t=e.clientY;this.pressTimer=setTimeout(function(){this.grab(n,t)}.bind(this),200)}},mousemove:function(e){this.released||this.move(e.clientX,e.clientY)},mouseup:function(e){uc(e)&&!dc(e)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(e){e.preventDefault();var n=e.touches[0],t=n.clientX,r=n.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(e){if(!this.released){var n=e.touches[0],t=n.clientX,r=n.clientY;this.move(t,r)}},touchend:function(e){(function(e){e.targetTouches.length})(e)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function uc(e){return 0===e.button}function dc(e){return e.metaKey||e.ctrlKey}var pc={init:function(e){this.el=document.createElement("div"),this.instance=e,this.parent=document.body,tc(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(e.options),Qs(this.el,"click",e.handler.clickOverlay.bind(e))},updateStyle:function(e){tc(this.el,{zIndex:e.zIndex,backgroundColor:e.bgColor,transition:"opacity\n        "+e.transitionDuration+"s\n        "+e.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},fc="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},hc=function(){function e(e,n){for(var t=0;t<n.length;t++){var r=n[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(n,t,r){return t&&e(n.prototype,t),r&&e(n,r),n}}(),mc=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},vc={init:function(e,n){this.el=e,this.instance=n,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=nc(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var e=this.instance.options,n=e.zIndex,t=e.enableGrab,r=e.transitionDuration,o=e.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:n+1,cursor:t?Ys:Zs,transition:ic+"\n        "+r+"s\n        "+o,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=tc(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,tc(this.el,{transform:"none"})},grab:function(e,n,t){var r=yc(),o=r.x-e,i=r.y-n;tc(this.el,{cursor:Js,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(e,n,t){var r=yc(),o=r.x-e,i=r.y-n;tc(this.el,{transition:ic,transform:"translate3d(\n        "+(this.translate.x+o)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){tc(this.el,this.styleClose)},restoreOpenStyle:function(){tc(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var e=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var n=this.el.cloneNode(!1);n.setAttribute("src",this.srcOriginal),n.style.position="fixed",n.style.visibility="hidden",e.appendChild(n),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),e.removeChild(n)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var e=yc(),n=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:e.x-n,y:e.y-t}},calculateScale:function(){var e=this.el.dataset,n=e.zoomingHeight,t=e.zoomingWidth,r=this.instance.options,o=r.customSize,i=r.scaleBase;if(!o&&n&&t)return{x:t/this.rect.width,y:n/this.rect.height};if(o&&"object"===(void 0===o?"undefined":fc(o)))return{x:o.width/this.rect.width,y:o.height/this.rect.height};var a=this.rect.width/2,s=this.rect.height/2,c=yc(),l={x:c.x-a,y:c.y-s},u=l.x/a,d=l.y/s,p=i+Math.min(u,d);if(o&&"string"==typeof o){var f=t||this.el.naturalWidth,h=n||this.el.naturalHeight,m=parseFloat(o)*f/(100*this.rect.width),v=parseFloat(o)*h/(100*this.rect.height);if(p>m||p>v)return{x:m,y:v}}return{x:p,y:p}}};function yc(){var e=document.documentElement;return{x:Math.min(e.clientWidth,window.innerWidth)/2,y:Math.min(e.clientHeight,window.innerHeight)/2}}function gc(e,n,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Qs(e,r,n[r],t)}))}var bc=function(){function e(n){!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,e),this.target=Object.create(vc),this.overlay=Object.create(pc),this.handler=Object.create(lc),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=mc({},cc,n),this.overlay.init(this),this.handler.init(this)}return hc(e,[{key:"listen",value:function(e){if("string"==typeof e)for(var n=document.querySelectorAll(e),t=n.length;t--;)this.listen(n[t]);else"IMG"===e.tagName&&(e.style.cursor=Xs,Qs(e,"click",this.handler.click),this.options.preloadImage&&ec(nc(e)));return this}},{key:"config",value:function(e){return e?(mc(this.options,e),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(e){var n=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof e?document.querySelector(e):e;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var o=this.target.srcOriginal;null!=o&&(this.options.onImageLoading(r),ec(o,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Qs(document,"scroll",this.handler.scroll),Qs(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Qs(window,"resize",this.handler.resizeWindow);var i=function e(){Qs(r,ac,e,!1),n.lock=!1,n.target.upgradeSource(),n.options.enableGrab&&gc(document,n.handler,!0),t(r)};return Qs(r,ac,i),this}}}},{key:"close",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Ws,this.overlay.fadeOut(),this.target.zoomOut(),Qs(document,"scroll",this.handler.scroll,!1),Qs(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Qs(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Qs(t,ac,r,!1),e.shown=!1,e.lock=!1,e.target.downgradeSource(),e.options.enableGrab&&gc(document,e.handler,!1),e.target.restoreCloseStyle(),e.overlay.remove(),n(t)};return Qs(t,ac,r),this}}},{key:"grab",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var o=this.target.el;this.options.onBeforeGrab(o),this.released=!1,this.target.grab(e,n,t);var i=function e(){Qs(o,ac,e,!1),r(o)};return Qs(o,ac,i),this}}},{key:"move",value:function(e,n){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Js,this.target.move(e,n,t);var o=this.target.el,i=function e(){Qs(o,ac,e,!1),r(o)};return Qs(o,ac,i),this}}},{key:"release",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Ws,this.target.restoreOpenStyle();var r=function r(){Qs(t,ac,r,!1),e.lock=!1,e.released=!0,n(t)};return Qs(t,ac,r),this}}}]),e}();const _c=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),kc=Number("500");class xc{constructor(){this.instance=new bc(_c)}update(e=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(e)}updateDelay(e=".theme-vdoing-content img:not(.no-zoom)",n=kc){setTimeout(()=>this.update(e),n)}}var Ec=[gs,ws,Ls,Rs,Is,Gs,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new xc,this.$vuepress.zooming.updateDelay()}}],wc={name:"GlobalLayout",computed:{layout(){const e=this.getLayout();return fs("layout",e),Wt.component(e)}},methods:{getLayout(){if(this.$page.path){const e=this.$page.frontmatter.layout;return e&&(this.$vuepress.getLayoutAsyncComponent(e)||this.$vuepress.getVueComponent(e))?e:"Layout"}return"NotFound"}}},Cc=Object(js.a)(wc,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(e,n,t){switch(n){case"components":e[n]||(e[n]={}),Object.assign(e[n],t);break;case"mixins":e[n]||(e[n]=[]),e[n].push(...t);break;default:throw new Error("Unknown option name.")}}(Cc,"mixins",Ec);const Ac=[{name:"v-14d5b00e",path:"/pages/fccd91/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-14d5b00e").then(t)}},{path:"/pages/fccd91/index.html",redirect:"/pages/fccd91/"},{path:"/01.系统设计算法/01.系统设计算法/01.布隆过滤.html",redirect:"/pages/fccd91/"},{name:"v-6f4636bc",path:"/pages/1e28a2/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-6f4636bc").then(t)}},{path:"/pages/1e28a2/index.html",redirect:"/pages/1e28a2/"},{path:"/01.系统设计算法/01.系统设计算法/02.一致性哈希.html",redirect:"/pages/1e28a2/"},{name:"v-30a03cb6",path:"/pages/8624c5/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-30a03cb6").then(t)}},{path:"/pages/8624c5/index.html",redirect:"/pages/8624c5/"},{path:"/01.系统设计算法/01.系统设计算法/03.Count-Min Sketch.html",redirect:"/pages/8624c5/"},{name:"v-24d5fda5",path:"/pages/7d22be/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-24d5fda5").then(t)}},{path:"/pages/7d22be/index.html",redirect:"/pages/7d22be/"},{path:"/01.系统设计算法/01.系统设计算法/05.LFU.html",redirect:"/pages/7d22be/"},{name:"v-be411e82",path:"/pages/87589a/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-be411e82").then(t)}},{path:"/pages/87589a/index.html",redirect:"/pages/87589a/"},{path:"/01.系统设计算法/01.系统设计算法/04.LRU.html",redirect:"/pages/87589a/"},{name:"v-639e0f9a",path:"/pages/73ef48/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-639e0f9a").then(t)}},{path:"/pages/73ef48/index.html",redirect:"/pages/73ef48/"},{path:"/01.系统设计算法/",redirect:"/pages/73ef48/"},{name:"v-fb7b08d2",path:"/pages/a95d7d/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-fb7b08d2").then(t)}},{path:"/pages/a95d7d/index.html",redirect:"/pages/a95d7d/"},{path:"/02.设计热门应用/01.社交类/01.设计 微信.html",redirect:"/pages/a95d7d/"},{name:"v-d89ce0de",path:"/pages/90ad66/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-d89ce0de").then(t)}},{path:"/pages/90ad66/index.html",redirect:"/pages/90ad66/"},{path:"/02.设计热门应用/01.社交类/02.设计Twitter.html",redirect:"/pages/90ad66/"},{name:"v-2b8f38b0",path:"/pages/6e86ba/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-2b8f38b0").then(t)}},{path:"/pages/6e86ba/index.html",redirect:"/pages/6e86ba/"},{path:"/02.设计热门应用/",redirect:"/pages/6e86ba/"},{name:"v-345df50e",path:"/pages/def08a/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-345df50e").then(t)}},{path:"/pages/def08a/index.html",redirect:"/pages/def08a/"},{path:"/03.场景设计/01.热门场景设计/01.双写一致性.html",redirect:"/pages/def08a/"},{name:"v-072dd135",path:"/pages/24abe0/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-072dd135").then(t)}},{path:"/pages/24abe0/index.html",redirect:"/pages/24abe0/"},{path:"/03.场景设计/01.热门场景设计/04.任务补偿.html",redirect:"/pages/24abe0/"},{name:"v-71660c7c",path:"/pages/1d96b2/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-71660c7c").then(t)}},{path:"/pages/1d96b2/index.html",redirect:"/pages/1d96b2/"},{path:"/03.场景设计/01.热门场景设计/03.缓存击穿.html",redirect:"/pages/1d96b2/"},{name:"v-4fb0b446",path:"/pages/a72629/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-4fb0b446").then(t)}},{path:"/pages/a72629/index.html",redirect:"/pages/a72629/"},{path:"/03.场景设计/01.热门场景设计/05.秒杀.html",redirect:"/pages/a72629/"},{name:"v-2d6b4bec",path:"/pages/f3295f/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-2d6b4bec").then(t)}},{path:"/pages/f3295f/index.html",redirect:"/pages/f3295f/"},{path:"/03.场景设计/01.热门场景设计/06.海量数据计数.html",redirect:"/pages/f3295f/"},{name:"v-0ac18964",path:"/pages/51aa8b/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-0ac18964").then(t)}},{path:"/pages/51aa8b/index.html",redirect:"/pages/51aa8b/"},{path:"/03.场景设计/01.热门场景设计/07.多级缓存.html",redirect:"/pages/51aa8b/"},{name:"v-5d56c92a",path:"/pages/0dfb49/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-5d56c92a").then(t)}},{path:"/pages/0dfb49/index.html",redirect:"/pages/0dfb49/"},{path:"/03.场景设计/01.热门场景设计/08.超时&重试.html",redirect:"/pages/0dfb49/"},{name:"v-23e43bec",path:"/pages/4fc8cb/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-23e43bec").then(t)}},{path:"/pages/4fc8cb/index.html",redirect:"/pages/4fc8cb/"},{path:"/03.场景设计/01.热门场景设计/09.幂等&防重.html",redirect:"/pages/4fc8cb/"},{name:"v-0e70e808",path:"/pages/a027c2/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-0e70e808").then(t)}},{path:"/pages/a027c2/index.html",redirect:"/pages/a027c2/"},{path:"/03.场景设计/",redirect:"/pages/a027c2/"},{name:"v-4e80661c",path:"/pages/84cb49/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-4e80661c").then(t)}},{path:"/pages/84cb49/index.html",redirect:"/pages/84cb49/"},{path:"/04.设计基础设施/01.基础设施/01.分布式缓存.html",redirect:"/pages/84cb49/"},{name:"v-82af755a",path:"/pages/5dcb6b/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-82af755a").then(t)}},{path:"/pages/5dcb6b/index.html",redirect:"/pages/5dcb6b/"},{path:"/04.设计基础设施/01.基础设施/03.热点探查（Top k）.html",redirect:"/pages/5dcb6b/"},{name:"v-ca3de854",path:"/pages/57d5a5/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-ca3de854").then(t)}},{path:"/pages/57d5a5/index.html",redirect:"/pages/57d5a5/"},{path:"/04.设计基础设施/01.基础设施/02.限流器.html",redirect:"/pages/57d5a5/"},{name:"v-f75dbe40",path:"/pages/567090/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-f75dbe40").then(t)}},{path:"/pages/567090/index.html",redirect:"/pages/567090/"},{path:"/04.设计基础设施/01.基础设施/04.消息队列.html",redirect:"/pages/567090/"},{name:"v-4985a9a2",path:"/pages/3c1db5/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-4985a9a2").then(t)}},{path:"/pages/3c1db5/index.html",redirect:"/pages/3c1db5/"},{path:"/04.设计基础设施/",redirect:"/pages/3c1db5/"},{name:"v-15eefc95",path:"/pages/8416e6/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-15eefc95").then(t)}},{path:"/pages/8416e6/index.html",redirect:"/pages/8416e6/"},{path:"/04.设计基础设施/01.基础设施/05.订阅发布.html",redirect:"/pages/8416e6/"},{name:"v-0b0ed22c",path:"/pages/92b2ee/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-0b0ed22c").then(t)}},{path:"/pages/92b2ee/index.html",redirect:"/pages/92b2ee/"},{path:"/05.问答/",redirect:"/pages/92b2ee/"},{name:"v-551313d7",path:"/pages/9b3c80/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-551313d7").then(t)}},{path:"/pages/9b3c80/index.html",redirect:"/pages/9b3c80/"},{path:"/06.动态/",redirect:"/pages/9b3c80/"},{name:"v-61d0fb85",path:"/blog/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-61d0fb85").then(t)}},{path:"/blog/index.html",redirect:"/blog/"},{path:"/@pages/archivesPage.html",redirect:"/blog/"},{name:"v-a11d1cc4",path:"/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-a11d1cc4").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-33f15289",path:"/pages/1e9e8e/",component:Cc,beforeEnter:(e,n,t)=>{ps("Layout","v-33f15289").then(t)}},{path:"/pages/1e9e8e/index.html",redirect:"/pages/1e9e8e/"},{path:"/03.场景设计/01.热门场景设计/02.缓存穿透.html",redirect:"/pages/1e9e8e/"},{path:"*",component:Cc}],Lc={title:"Echo 系统设计之美",description:"将系统设计技能提升到一个新水平所需的一切",base:"/",headTags:[["link",{rel:"icon",href:"/img/favicon.ico"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"布隆过滤",frontmatter:{title:"布隆过滤",date:"2024-09-14T03:52:03.000Z",permalink:"/pages/fccd91/"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4.html",relativePath:"01.系统设计算法/01.系统设计算法/01.布隆过滤.md",key:"v-14d5b00e",path:"/pages/fccd91/",headers:[{level:2,title:"布隆过滤器是什么",slug:"布隆过滤器是什么",normalizedTitle:"布隆过滤器是什么",charIndex:2},{level:3,title:"优点",slug:"优点",normalizedTitle:"优点",charIndex:181},{level:3,title:"缺点",slug:"缺点",normalizedTitle:"缺点",charIndex:311},{level:3,title:"使用场景",slug:"使用场景",normalizedTitle:"使用场景",charIndex:367},{level:2,title:"布隆过滤器的原理",slug:"布隆过滤器的原理",normalizedTitle:"布隆过滤器的原理",charIndex:646},{level:3,title:"数据结构",slug:"数据结构",normalizedTitle:"数据结构",charIndex:295},{level:3,title:"空间计算",slug:"空间计算",normalizedTitle:"空间计算",charIndex:915},{level:3,title:"增加元素",slug:"增加元素",normalizedTitle:"增加元素",charIndex:927},{level:3,title:"查询元素",slug:"查询元素",normalizedTitle:"查询元素",charIndex:198},{level:3,title:"修改元素",slug:"修改元素",normalizedTitle:"修改元素",charIndex:1797},{level:3,title:"删除元素",slug:"删除元素",normalizedTitle:"删除元素",charIndex:358},{level:2,title:"Redis 中的 布隆过滤器",slug:"redis-中的-布隆过滤器",normalizedTitle:"redis 中的 布隆过滤器",charIndex:1933},{level:2,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:1952}],headersStr:"布隆过滤器是什么 优点 缺点 使用场景 布隆过滤器的原理 数据结构 空间计算 增加元素 查询元素 修改元素 删除元素 Redis 中的 布隆过滤器 参考文献",content:"# 布隆过滤器是什么\n\n布隆过滤器（Bloom Filter）是1970年由布隆提出的。它实际上是 一个很长的二进制向量 和 一系列随机映射函数。布隆过滤器可以用于 检索一个元素是否在一个集合中。\n\n如果还是不太好理解的话，就可以把布隆过滤器理解为一个 set 集合，我们可以通过 add 往里面添加元素，通过 contains 来判断是否包含某个元素\n\n\n# 优点\n\n * 时间复杂度低，增加和查询元素的时间复杂为 O(N)，（N 为哈希函数的个数，通常情况比较小）\n * 保密性强，布隆过滤器不存储元素本身\n * 存储空间小，如果允许存在一定的误判，布隆过滤器是非常节省空间的（相比其他数据结构如Set集合）\n\n\n# 缺点\n\n * 有点一定的误判率，但是可以通过调整参数来降低\n * 无法获取元素本身\n * 很难删除元素\n\n\n# 使用场景\n\n布隆过滤器可以告诉我们 “某样东西一定不存在或者可能存在”，也就是说布隆过滤器说这个数不存在则一定不存，布隆过滤器说这个数存在则可能不存在（误判，后续会讲），利用这个判断是否存在的特点可以做很多有趣的事情。\n\n * 解决 Redis 缓存穿透问题（面试重点）\n * 邮件过滤，使用布隆过滤器来做邮件黑名单过滤\n * 对爬虫网址进行过滤，爬过的不再爬\n * 解决新闻推荐过的不再推荐(类似抖音刷过的往下滑动不再刷到)\n * HBase RocksDB LevelDB 等数据库内置布隆过滤器，用于判断数据是否存在，可以减少数据库的IO请求\n\n\n# 布隆过滤器的原理\n\n\n# 数据结构\n\n布隆过滤器它实际上是 一个很长的二进制向量 和 一系列随机映射函数。以Redis中的布隆过滤器实现为例，Redis 中的布隆过滤器底层是一个大型位数组（二进制数组）+多个无偏hash函数。\n\n\n\n多个无偏hash函数\n\n无偏hash函数就是能把元素的hash值计算的 比较均匀 的hash函数，能使得计算后的元素下标比较均匀的映射到位数组中。能有效减少误差。\n\n如下就是一个简单的布隆过滤器示意图，其中 k1、k2 代表增加的元素，a、b、c即为无偏hash函数，最下层则为二进制数组。\n\n\n\n\n# 空间计算\n\n在布隆过滤器增加元素之前，首先需要初始化布隆过滤器的空间，也就是上面说的二进制数组，除此之外还需要计算无偏hash函数的个数。\n\n布隆过滤器提供了两个参数，分别是预计加入元素的大小 n，运行的错误率 p。\n\n布隆过滤器中有算法根据这两个参数会计算出二进制数组的大小 m，以及无偏hash函数的个数 k。\n\n它们之间的关系比较简单：\n\n如下地址是一个免费的在线布隆过滤器在线计算的网址：\n\n> https://krisives.github.io/bloom-calculator/\n\n\n\n\n# 增加元素\n\n往布隆过滤器增加元素，添加的key需要根据k个无偏hash函数计算得到多个hash值，然后对数组长度进行取模得到数组下标的位置，然后将对应数组下标的位置的值置为1\n\n * 通过k个无偏hash函数计算得到k个hash值\n * 依次取模数组长度，得到数组索引\n * 将计算得到的数组索引下标位置数据修改为1\n\n例如，key = Liziba，无偏hash函数的个数k=3，分别为hash1、hash2、hash3。三个hash函数计算后得到三个数组下标值，并将其值修改为1.\n\n如图所示\n\n\n\n\n# 查询元素\n\n布隆过滤器最大的用处就在于判断某样东西一定不存在或者可能存在，而这个就是查询元素的结果。其查询元素的过程如下：\n\n * 通过 k 个无偏hash函数计算得到 k 个hash值\n * 依次取模数组长度，得到数组索引\n * 判断索引处的值是否全部为 1，如果全部为 1 则存在（这种存在可能是误判），如果存在一个 0 则必定不存在\n\n关于误判，其实非常好理解，hash函数再怎么牛逼，也无法完全避免hash冲突，也就是说可能会存在多个元素计算的hash值是相同的，那么它们取模数组长度后的到的数组索引也是相同的，这就是误判的原因。例如李子捌和李子柒的hash值取模后得到的数组索引都是1，但其实这里只有李子捌，如果此时判断李子柒在不在这里，误判就出现啦！因此布隆过滤器最大的缺点误判只要知道其判断元素是否存在的原理就很容易明白了！\n\n\n# 修改元素\n\n不允许修改\n\n\n# 删除元素\n\n布隆过滤器对元素的删除不太支持，目前有一些变形的特定布隆过滤器支持元素的删除！关于为什么对删除不太支持，其实也非常好理解，hash冲突必然存在，删除肯定是很苦难的！你将 A 的数组下标置为 0，那可能 B 也为受到影响\n\n\n# Redis 中的 布隆过滤器\n\n\n# 参考文献\n\n布隆(Bloom Filter)过滤器——全面讲解，建议收藏-CSDN博客",normalizedContent:"# 布隆过滤器是什么\n\n布隆过滤器（bloom filter）是1970年由布隆提出的。它实际上是 一个很长的二进制向量 和 一系列随机映射函数。布隆过滤器可以用于 检索一个元素是否在一个集合中。\n\n如果还是不太好理解的话，就可以把布隆过滤器理解为一个 set 集合，我们可以通过 add 往里面添加元素，通过 contains 来判断是否包含某个元素\n\n\n# 优点\n\n * 时间复杂度低，增加和查询元素的时间复杂为 o(n)，（n 为哈希函数的个数，通常情况比较小）\n * 保密性强，布隆过滤器不存储元素本身\n * 存储空间小，如果允许存在一定的误判，布隆过滤器是非常节省空间的（相比其他数据结构如set集合）\n\n\n# 缺点\n\n * 有点一定的误判率，但是可以通过调整参数来降低\n * 无法获取元素本身\n * 很难删除元素\n\n\n# 使用场景\n\n布隆过滤器可以告诉我们 “某样东西一定不存在或者可能存在”，也就是说布隆过滤器说这个数不存在则一定不存，布隆过滤器说这个数存在则可能不存在（误判，后续会讲），利用这个判断是否存在的特点可以做很多有趣的事情。\n\n * 解决 redis 缓存穿透问题（面试重点）\n * 邮件过滤，使用布隆过滤器来做邮件黑名单过滤\n * 对爬虫网址进行过滤，爬过的不再爬\n * 解决新闻推荐过的不再推荐(类似抖音刷过的往下滑动不再刷到)\n * hbase rocksdb leveldb 等数据库内置布隆过滤器，用于判断数据是否存在，可以减少数据库的io请求\n\n\n# 布隆过滤器的原理\n\n\n# 数据结构\n\n布隆过滤器它实际上是 一个很长的二进制向量 和 一系列随机映射函数。以redis中的布隆过滤器实现为例，redis 中的布隆过滤器底层是一个大型位数组（二进制数组）+多个无偏hash函数。\n\n\n\n多个无偏hash函数\n\n无偏hash函数就是能把元素的hash值计算的 比较均匀 的hash函数，能使得计算后的元素下标比较均匀的映射到位数组中。能有效减少误差。\n\n如下就是一个简单的布隆过滤器示意图，其中 k1、k2 代表增加的元素，a、b、c即为无偏hash函数，最下层则为二进制数组。\n\n\n\n\n# 空间计算\n\n在布隆过滤器增加元素之前，首先需要初始化布隆过滤器的空间，也就是上面说的二进制数组，除此之外还需要计算无偏hash函数的个数。\n\n布隆过滤器提供了两个参数，分别是预计加入元素的大小 n，运行的错误率 p。\n\n布隆过滤器中有算法根据这两个参数会计算出二进制数组的大小 m，以及无偏hash函数的个数 k。\n\n它们之间的关系比较简单：\n\n如下地址是一个免费的在线布隆过滤器在线计算的网址：\n\n> https://krisives.github.io/bloom-calculator/\n\n\n\n\n# 增加元素\n\n往布隆过滤器增加元素，添加的key需要根据k个无偏hash函数计算得到多个hash值，然后对数组长度进行取模得到数组下标的位置，然后将对应数组下标的位置的值置为1\n\n * 通过k个无偏hash函数计算得到k个hash值\n * 依次取模数组长度，得到数组索引\n * 将计算得到的数组索引下标位置数据修改为1\n\n例如，key = liziba，无偏hash函数的个数k=3，分别为hash1、hash2、hash3。三个hash函数计算后得到三个数组下标值，并将其值修改为1.\n\n如图所示\n\n\n\n\n# 查询元素\n\n布隆过滤器最大的用处就在于判断某样东西一定不存在或者可能存在，而这个就是查询元素的结果。其查询元素的过程如下：\n\n * 通过 k 个无偏hash函数计算得到 k 个hash值\n * 依次取模数组长度，得到数组索引\n * 判断索引处的值是否全部为 1，如果全部为 1 则存在（这种存在可能是误判），如果存在一个 0 则必定不存在\n\n关于误判，其实非常好理解，hash函数再怎么牛逼，也无法完全避免hash冲突，也就是说可能会存在多个元素计算的hash值是相同的，那么它们取模数组长度后的到的数组索引也是相同的，这就是误判的原因。例如李子捌和李子柒的hash值取模后得到的数组索引都是1，但其实这里只有李子捌，如果此时判断李子柒在不在这里，误判就出现啦！因此布隆过滤器最大的缺点误判只要知道其判断元素是否存在的原理就很容易明白了！\n\n\n# 修改元素\n\n不允许修改\n\n\n# 删除元素\n\n布隆过滤器对元素的删除不太支持，目前有一些变形的特定布隆过滤器支持元素的删除！关于为什么对删除不太支持，其实也非常好理解，hash冲突必然存在，删除肯定是很苦难的！你将 a 的数组下标置为 0，那可能 b 也为受到影响\n\n\n# redis 中的 布隆过滤器\n\n\n# 参考文献\n\n布隆(bloom filter)过滤器——全面讲解，建议收藏-csdn博客",charsets:{cjk:!0},lastUpdated:"2024/09/14, 04:51:08",lastUpdatedTimestamp:1726289468e3},{title:"一致性哈希",frontmatter:{title:"一致性哈希",date:"2024-09-14T03:52:03.000Z",permalink:"/pages/1e28a2/"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/02.%E4%B8%80%E8%87%B4%E6%80%A7%E5%93%88%E5%B8%8C.html",relativePath:"01.系统设计算法/01.系统设计算法/02.一致性哈希.md",key:"v-6f4636bc",path:"/pages/1e28a2/",headers:[{level:2,title:"使用普通 hash 算法 (取模算法)",slug:"使用普通-hash-算法-取模算法",normalizedTitle:"使用普通 hash 算法 (取模算法)",charIndex:2},{level:3,title:"普通 hash算法 与 使用场景描述：",slug:"普通-hash算法-与-使用场景描述",normalizedTitle:"普通 hash算法 与 使用场景描述：",charIndex:26},{level:3,title:"缺陷",slug:"缺陷",normalizedTitle:"缺陷",charIndex:801},{level:2,title:"一致性哈希算法",slug:"一致性哈希算法",normalizedTitle:"一致性哈希算法",charIndex:50},{level:3,title:"什么是 一致性 hash 算法",slug:"什么是-一致性-hash-算法",normalizedTitle:"什么是 一致性 hash 算法",charIndex:1158},{level:3,title:"一致性 hash 算法的优点",slug:"一致性-hash-算法的优点",normalizedTitle:"一致性 hash 算法的优点",charIndex:2080},{level:3,title:"hash 环的倾斜与虚拟节点",slug:"hash-环的倾斜与虚拟节点",normalizedTitle:"hash 环的倾斜与虚拟节点",charIndex:2518},{level:2,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:2917}],headersStr:"使用普通 hash 算法 (取模算法) 普通 hash算法 与 使用场景描述： 缺陷 一致性哈希算法 什么是 一致性 hash 算法 一致性 hash 算法的优点 hash 环的倾斜与虚拟节点 参考文献",content:"# 使用普通 hash 算法 (取模算法)\n\n\n# 普通 hash算法 与 使用场景描述：\n\n在了解一致性哈希算法之前，我们先了解一下缓存中的一个应用场景，了解了这个应用场景之后，再来理解一致性哈希算法，就容易多了，也更能体现出一致性哈希算法的优点，那么，我们先来描述一下这个经典的分布式缓存的应用场景。\n\n假设我们有三台缓存服务器，用于缓存图片，我们为这三台缓存服务器编号为 0号、1号、2号，现在有3万张图片需要缓存，我们希望这些图片被均匀的缓存到这3台服务器上，以便它们能够分摊缓存的压力。也就是说，我们希望每台服务器能够缓存1万张左右的图片，那么我们应该怎样做呢？常见的做法是对缓存项的键进行哈希，将hash后的结果对缓存服务器的数量进行取模操作，通过取模后的结果，决定缓存项将会缓存在哪一台服务器上\n\n我们举例说明，以刚才描述的场景为例，假设图片名称是不重复的，那我们就可以使用图片名称作为访问图片的key，使用如下公式，计算出图片应该存放在哪台服务器上。\n\nhash(图片名称) % N\n\n当我们对同一个图片名称做相同的哈希计算时，得出的结果应该是不变的，如果我们有3台服务器，使用哈希后的结果对3求余，那么余数一定是0、1或者2；如果求余的结果为0， 就把当前图片缓存在0号服务器上，如果余数为1，就缓存在1号服务器上，以此类推；同理，当我们访问任意图片时，只要再次对图片名称进行上述运算，即可得出图片应该存放在哪一台缓存服务器上，我们只要在这一台服务器上查找图片即可，如果图片在对应的服务器上不存在，则证明对应的图片没有被缓存，也不用再去遍历其他缓存服务器了，通过这样的方法，即可将3万张图片随机的分布到3台缓存服务器上了，而且下次访问某张图片时，直接能够判断出该图片应该存在于哪台缓存服务器上，我们暂时称上述算法为 HASH 算法或者取模算法，取模算法的过程可以用下图表示：\n\n\n# 缺陷\n\n上述 HASH 算法时，会出现一些缺陷：如果服务器已经不能满足缓存需求，就需要增加服务器数量，假设我们增加了一台缓存服务器，此时如果仍然使用上述方法对同一张图片进行缓存，那么这张图片所在的服务器编号必定与原来3台服务器时所在的服务器编号不同，因为除数由3变为了4，最终导致所有缓存的位置都要发生改变，也就是说，当服务器数量发生改变时，所有缓存在一定时间内是失效的，当应用无法从缓存中获取数据时，则会向后端服务器请求数据；同理，假设突然有一台缓存服务器出现了故障，那么我们则需要将故障机器移除，那么缓存服务器数量从3台变为2台，同样会导致大量缓存在同一时间失效，造成了缓存的雪崩，后端服务器将会承受巨大的压力，整个系统很有可能被压垮。为了解决这种情况，就有了一致性哈希算法。\n\n\n# 一致性哈希算法\n\n\n# 什么是 一致性 hash 算法\n\n一致性哈希算法也是使用取模的方法，但是取模算法是对服务器的数量进行取模，而一致性哈希算法是对 2^32 取模，具体步骤如下：\n\n 1. 一致性哈希算法将整个哈希值空间按照顺时针方向组织成一个虚拟的圆环，称为 Hash 环；\n 2. 接着将各个服务器使用 Hash 函数进行哈希，具体可以选择服务器的IP或主机名作为关键字进行哈希，从而确定每台机器在哈希环上的位置\n 3. 最后使用算法定位数据访问到相应服务器：将数据key使用相同的函数Hash计算出哈希值，并确定此数据在环上的位置，从此位置沿环顺时针寻找，第一台遇到的服务器就是其应该定位到的服务器\n\n下面我们使用具体案例说明一下一致性哈希算法的具体流程：\n\n步骤一：哈希环的组织\n\n我们将 2^32 想象成一个圆，像钟表一样，钟表的圆可以理解成由60个点组成的圆，而此处我们把这个圆想象成由**2^32个点**组成的圆，示意图如下：\n\n\n\n圆环的正上方的点代表0，0点右侧的第一个点代表1，以此类推，2、3、4、5、6……直到2^32-1,也就是说0点左侧的第一个点代表2^32-1，我们把这个由 2^32 个点组成的圆环称为hash环。\n\n步骤二：确定服务器在哈希环的位置\n\n哈希算法：hash(服务器的IP) % 2^32\n\n上述公式的计算结果一定是 0 到 2^32-1 之间的整数，那么上图中的 hash 环上必定有一个点与这个整数对应，所以我们可以使用这个整数代表服务器，也就是服务器就可以映射到这个环上，假设我们有 ABC 三台服务器，那么它们在哈希环上的示意图如下：\n\n步骤三：将数据映射到哈希环上\n\n我们还是使用图片的名称作为 key，所以我们使用下面算法将图片映射在哈希环上：hash（图片名称） % 2^32，假设我们有4张图片，映射后的示意图如下，其中橘黄色的点表示图片：\n\n\n\n那么，怎么算出上图中的图片应该被缓存到哪一台服务上面呢？我们只要从图片的位置开始，沿顺时针方向遇到的第一个服务器就是图片存放的服务器了。最终，1号、2号图片将会被缓存到服务器A上，3号图片将会被缓存到服务器B上，4号图片将会被缓存到服务器C上。\n\n\n# 一致性 hash 算法的优点\n\n前面提到，如果简单对服务器数量进行取模，那么当服务器数量发生变化时，会产生缓存的雪崩，从而很有可能导致系统崩溃，而使用一致性哈希算法就可以很好的解决这个问题，因为一致性Hash算法对于节点的增减都只需重定位环空间中的一小部分数据，只有部分缓存会失效，不至于将所有压力都在同一时间集中到后端服务器上，具有较好的容错性和可扩展性。\n\n假设服务器B出现了故障，需要将服务器B移除，那么移除前后的示意图如下图所示\n\n在服务器B未移除时，图片3应该被缓存到服务器B中，可是当服务器B移除以后，按照之前描述的一致性哈希算法的规则，图片3应该被缓存到服务器C中，因为从图片3的位置出发，沿顺时针方向遇到的第一个缓存服务器节点就是服务器C，也就是说，如果服务器B出现故障被移除时，图片3的缓存位置会发生改变，但是，图片4仍然会被缓存到服务器C中，图片1与图片2仍然会被缓存到服务器A中，这与服务器B移除之前并没有任何区别，这就是一致性哈希算法的优点。\n\n\n# hash 环的倾斜与虚拟节点\n\n一致性哈希算法在服务节点太少的情况下，容易因为节点分部不均匀而造成数据倾斜问题，也就是被缓存的对象大部分集中缓存在某一台服务器上，从而出现数据分布不均匀的情况，这种情况就称为 hash 环的倾斜。如下图所示：\n\n\n\n上述左图为理想情况，右图为出现了数据倾斜的情况\n\nhash 环的倾斜在极端情况下，仍然有可能引起系统的崩溃，为了解决这种数据倾斜问题，一致性哈希算法引入了虚拟节点机制，即对每一个服务节点计算多个哈希，每个计算结果位置都放置一个此服务节点，称为虚拟节点，一个实际物理节点可以对应多个虚拟节点，虚拟节点越多，hash环上的节点就越多，缓存被均匀分布的概率就越大，hash环倾斜所带来的影响就越小，同时数据定位算法不变，只是多了一步虚拟节点到实际节点的映射。具体做法可以在服务器ip或主机名的后面增加编号来实现，加入虚拟节点以后的hash环如下：\n\n\n# 参考文献\n\n一致性哈希算法原理详解-CSDN博客\n\n白话解析：一致性哈希算法 consistent hashing-朱双印博客 (zsythink.net)",normalizedContent:"# 使用普通 hash 算法 (取模算法)\n\n\n# 普通 hash算法 与 使用场景描述：\n\n在了解一致性哈希算法之前，我们先了解一下缓存中的一个应用场景，了解了这个应用场景之后，再来理解一致性哈希算法，就容易多了，也更能体现出一致性哈希算法的优点，那么，我们先来描述一下这个经典的分布式缓存的应用场景。\n\n假设我们有三台缓存服务器，用于缓存图片，我们为这三台缓存服务器编号为 0号、1号、2号，现在有3万张图片需要缓存，我们希望这些图片被均匀的缓存到这3台服务器上，以便它们能够分摊缓存的压力。也就是说，我们希望每台服务器能够缓存1万张左右的图片，那么我们应该怎样做呢？常见的做法是对缓存项的键进行哈希，将hash后的结果对缓存服务器的数量进行取模操作，通过取模后的结果，决定缓存项将会缓存在哪一台服务器上\n\n我们举例说明，以刚才描述的场景为例，假设图片名称是不重复的，那我们就可以使用图片名称作为访问图片的key，使用如下公式，计算出图片应该存放在哪台服务器上。\n\nhash(图片名称) % n\n\n当我们对同一个图片名称做相同的哈希计算时，得出的结果应该是不变的，如果我们有3台服务器，使用哈希后的结果对3求余，那么余数一定是0、1或者2；如果求余的结果为0， 就把当前图片缓存在0号服务器上，如果余数为1，就缓存在1号服务器上，以此类推；同理，当我们访问任意图片时，只要再次对图片名称进行上述运算，即可得出图片应该存放在哪一台缓存服务器上，我们只要在这一台服务器上查找图片即可，如果图片在对应的服务器上不存在，则证明对应的图片没有被缓存，也不用再去遍历其他缓存服务器了，通过这样的方法，即可将3万张图片随机的分布到3台缓存服务器上了，而且下次访问某张图片时，直接能够判断出该图片应该存在于哪台缓存服务器上，我们暂时称上述算法为 hash 算法或者取模算法，取模算法的过程可以用下图表示：\n\n\n# 缺陷\n\n上述 hash 算法时，会出现一些缺陷：如果服务器已经不能满足缓存需求，就需要增加服务器数量，假设我们增加了一台缓存服务器，此时如果仍然使用上述方法对同一张图片进行缓存，那么这张图片所在的服务器编号必定与原来3台服务器时所在的服务器编号不同，因为除数由3变为了4，最终导致所有缓存的位置都要发生改变，也就是说，当服务器数量发生改变时，所有缓存在一定时间内是失效的，当应用无法从缓存中获取数据时，则会向后端服务器请求数据；同理，假设突然有一台缓存服务器出现了故障，那么我们则需要将故障机器移除，那么缓存服务器数量从3台变为2台，同样会导致大量缓存在同一时间失效，造成了缓存的雪崩，后端服务器将会承受巨大的压力，整个系统很有可能被压垮。为了解决这种情况，就有了一致性哈希算法。\n\n\n# 一致性哈希算法\n\n\n# 什么是 一致性 hash 算法\n\n一致性哈希算法也是使用取模的方法，但是取模算法是对服务器的数量进行取模，而一致性哈希算法是对 2^32 取模，具体步骤如下：\n\n 1. 一致性哈希算法将整个哈希值空间按照顺时针方向组织成一个虚拟的圆环，称为 hash 环；\n 2. 接着将各个服务器使用 hash 函数进行哈希，具体可以选择服务器的ip或主机名作为关键字进行哈希，从而确定每台机器在哈希环上的位置\n 3. 最后使用算法定位数据访问到相应服务器：将数据key使用相同的函数hash计算出哈希值，并确定此数据在环上的位置，从此位置沿环顺时针寻找，第一台遇到的服务器就是其应该定位到的服务器\n\n下面我们使用具体案例说明一下一致性哈希算法的具体流程：\n\n步骤一：哈希环的组织\n\n我们将 2^32 想象成一个圆，像钟表一样，钟表的圆可以理解成由60个点组成的圆，而此处我们把这个圆想象成由**2^32个点**组成的圆，示意图如下：\n\n\n\n圆环的正上方的点代表0，0点右侧的第一个点代表1，以此类推，2、3、4、5、6……直到2^32-1,也就是说0点左侧的第一个点代表2^32-1，我们把这个由 2^32 个点组成的圆环称为hash环。\n\n步骤二：确定服务器在哈希环的位置\n\n哈希算法：hash(服务器的ip) % 2^32\n\n上述公式的计算结果一定是 0 到 2^32-1 之间的整数，那么上图中的 hash 环上必定有一个点与这个整数对应，所以我们可以使用这个整数代表服务器，也就是服务器就可以映射到这个环上，假设我们有 abc 三台服务器，那么它们在哈希环上的示意图如下：\n\n步骤三：将数据映射到哈希环上\n\n我们还是使用图片的名称作为 key，所以我们使用下面算法将图片映射在哈希环上：hash（图片名称） % 2^32，假设我们有4张图片，映射后的示意图如下，其中橘黄色的点表示图片：\n\n\n\n那么，怎么算出上图中的图片应该被缓存到哪一台服务上面呢？我们只要从图片的位置开始，沿顺时针方向遇到的第一个服务器就是图片存放的服务器了。最终，1号、2号图片将会被缓存到服务器a上，3号图片将会被缓存到服务器b上，4号图片将会被缓存到服务器c上。\n\n\n# 一致性 hash 算法的优点\n\n前面提到，如果简单对服务器数量进行取模，那么当服务器数量发生变化时，会产生缓存的雪崩，从而很有可能导致系统崩溃，而使用一致性哈希算法就可以很好的解决这个问题，因为一致性hash算法对于节点的增减都只需重定位环空间中的一小部分数据，只有部分缓存会失效，不至于将所有压力都在同一时间集中到后端服务器上，具有较好的容错性和可扩展性。\n\n假设服务器b出现了故障，需要将服务器b移除，那么移除前后的示意图如下图所示\n\n在服务器b未移除时，图片3应该被缓存到服务器b中，可是当服务器b移除以后，按照之前描述的一致性哈希算法的规则，图片3应该被缓存到服务器c中，因为从图片3的位置出发，沿顺时针方向遇到的第一个缓存服务器节点就是服务器c，也就是说，如果服务器b出现故障被移除时，图片3的缓存位置会发生改变，但是，图片4仍然会被缓存到服务器c中，图片1与图片2仍然会被缓存到服务器a中，这与服务器b移除之前并没有任何区别，这就是一致性哈希算法的优点。\n\n\n# hash 环的倾斜与虚拟节点\n\n一致性哈希算法在服务节点太少的情况下，容易因为节点分部不均匀而造成数据倾斜问题，也就是被缓存的对象大部分集中缓存在某一台服务器上，从而出现数据分布不均匀的情况，这种情况就称为 hash 环的倾斜。如下图所示：\n\n\n\n上述左图为理想情况，右图为出现了数据倾斜的情况\n\nhash 环的倾斜在极端情况下，仍然有可能引起系统的崩溃，为了解决这种数据倾斜问题，一致性哈希算法引入了虚拟节点机制，即对每一个服务节点计算多个哈希，每个计算结果位置都放置一个此服务节点，称为虚拟节点，一个实际物理节点可以对应多个虚拟节点，虚拟节点越多，hash环上的节点就越多，缓存被均匀分布的概率就越大，hash环倾斜所带来的影响就越小，同时数据定位算法不变，只是多了一步虚拟节点到实际节点的映射。具体做法可以在服务器ip或主机名的后面增加编号来实现，加入虚拟节点以后的hash环如下：\n\n\n# 参考文献\n\n一致性哈希算法原理详解-csdn博客\n\n白话解析：一致性哈希算法 consistent hashing-朱双印博客 (zsythink.net)",charsets:{cjk:!0},lastUpdated:"2024/09/14, 06:13:04",lastUpdatedTimestamp:1726294384e3},{title:"Count-Min Sketch",frontmatter:{title:"Count-Min Sketch",date:"2024-09-14T13:30:19.000Z",permalink:"/pages/8624c5"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/03.Count-Min%20Sketch.html",relativePath:"01.系统设计算法/01.系统设计算法/03.Count-Min Sketch.md",key:"v-30a03cb6",path:"/pages/8624c5/",headers:[{level:2,title:"如何统计元素出现频率？",slug:"如何统计元素出现频率",normalizedTitle:"如何统计元素出现频率？",charIndex:2},{level:4,title:"hashmap 解决",slug:"hashmap-解决",normalizedTitle:"hashmap 解决",charIndex:82},{level:2,title:"CMS简介",slug:"cms简介",normalizedTitle:"cms简介",charIndex:850},{level:4,title:"举个栗子",slug:"举个栗子",normalizedTitle:"举个栗子",charIndex:1041},{level:2,title:"CMS 的具体实现",slug:"cms-的具体实现",normalizedTitle:"cms 的具体实现",charIndex:1486},{level:2,title:"CMS 的参数选择",slug:"cms-的参数选择",normalizedTitle:"cms 的参数选择",charIndex:2916},{level:2,title:"Count-Mean-Min-Sketch",slug:"count-mean-min-sketch",normalizedTitle:"count-mean-min-sketch",charIndex:3168},{level:2,title:"参考文献",slug:"参考文献",normalizedTitle:"参考文献",charIndex:3878}],headersStr:"如何统计元素出现频率？ hashmap 解决 CMS简介 举个栗子 CMS 的具体实现 CMS 的参数选择 Count-Mean-Min-Sketch 参考文献",content:"# 如何统计元素出现频率？\n\n问题： 如果老板让你统计一个实时的数据流中元素出现的频率，并且准备随时回答某个元素出现的频率，不需要的精确的计数，那该怎么办？\n\n# hashmap 解决\n\n在大数据场景下，比如网页的 TopK 问题，爬虫的是否访问过的问题，都是一种出现频次相关的问题，那么在系统设计的时候，如何选择策略和数据结构去存储相关的数据是最高效合适的呢？\n\n计算元素的出现频次，如果出现与普通的场景下，简单的方案就是用 hashmap 来记录元素出现的次数：\n\n// 用HashMap存储元素及其频率\nHashMap<String, Integer> freq = new HashMap<>();\n\n// 统计频率\nfor (String e : elements) {\n    if (!freq.containsKey(e)) {\n    \tfreq.put(e, 1);\n    } else {\n    \tfreq.put(e, freq.get(e) + 1);\n    }\n}\n\n\n但是这种方式在大量数据流的情况下，如果存在大量唯一元素的情况下，会占用大量的内存，导致其无法应对大数据场景，因此在”时间换空间” 的策略选择中，这里就需要考虑通过时间，或者准确率等其他的因素来换空间。\n\n通常来说，针对大数据场景，会无限扩张的数据结构显然是不适用的，所以希望能用固定的空间来进行计数的管理，同时希望尽量不要影响到运行的时间，换言之，可以牺牲掉一定的准确性，来实现节省空间的效果。\n\n基于上述需求，我们可以想到 Hash 算法：将无限大的空间映射到固定的 size 的输出上；而大数据场景下的 Hash 会遇到冲突会被无限放大的问题\n\n如何解决冲突是最核心的问题\n\n * 基于概率数据结构实现的 Bloom Filter 算法采取多 Hash 的方法来减少冲突\n * 而其衍生出来的 CMS 算法以同样的思想，基于不同的设计，更为适应这种计数场景 下面介绍该方法的具体实现\n\n\n# CMS简介\n\nCount-min Sketch 算法是一个可以用来计数的算法，在数据大小非常大时，一种高效的计数算法，通过牺牲准确性提高的效率。\n\n * 是一个概率数据机构\n\n * 算法效率高\n * 提供计数上线\n\n其中，重要参数包括\n\n * Hash 哈希函数的数量： k\n * 计数表格列的数量： m\n * 内存中用空间： k x m x size of counter\n\n# 举个栗子\n\n我们规定一个 m=5，k=3 的Count-min Sketch，用来计数，其中所有hash函数如下\n\n\n\n注意，所有hash函数的结果需 mod m\n\n下面开始填表，首先初始状态为\n\n\n\n首先，向里面添加字母B，其ASCII码为66，求hash函数的结果为\n\n\n\n因此，表格变为\n\n\n\n接下来，我们查询字母A，其ASCII码为65，求hash函数的结果为\n\n\n\n用这个结果去读表，发现其对应位置均为0，因此字母A最多出现0次，这个值是准确的。\n\n然后，我们在查询字母G，其ASCII码为71，求hash函数的结果为\n\n\n\n用这个结果去读表，发现其对应位置均为1，因此字母G最多出现1次；**出错了！**我们从未向里面添加过字母G，这就是一次collision。Count-min Sketch的确会有这种问题，因为这个模型是从Bloom Filter衍生过来的。所以说Count-min Sketch是一个概率模型，返回的结果是一个上限值（upper-bound）。\n\n\n# CMS 的具体实现\n\n首先第一点，通过 hash 来实现数值空间的转换，通过哈希函数 H 将输入元素 x 映射到一维数组上，通过该 index 的值来判断元素的 Count（是否存在）\n\nfor (char x : input_element)\n{\n\tidx = Hash(x);\n\tarray[idx] += 1;\n}\n\n\n实际上这就是 Bloom Filter 的基础思想，然而无论是定长数组的”有限”还是 Hash 函数本身，都需要考虑冲突问题（两个元素被映射到同一个 index 上），冲突会导致 Count 比真实的大。\n\n于是接下来面临的问题就是：**如何降低冲突的概率？**如何提高计数的准确性（实际上也包含在降低冲突的概率中）\n\n可以参考 Bloom Filter 的策略，其通过多个 Hash 函数来映射同一个数，从而来降低元素的冲突概率（未考虑超大数据场景），进而也能提高计数的准确性，那么我们看一下 bloom filter 方法：\n\n> Bloom Filter 算法解决的是存在性问题，因此只需要一个 01 向量，当且仅当所有 Hash 计算出来的 index 的值都为 1 的时候，这个元素才可能存在；\n\n考虑将该方法向 Count 问题上迁移：\n\n * 计数过程中：使用 n 个 Hash 函数计算 idx{1~n} ，然后 vec[idx[i]] += 1 对count+1\n * 查询过程中：使用 n 个 Hash 函数计算 idx{1~n}，然后取 vec[idx[i]] 的最小值，考虑冲突场景可知，这个最小值>=实际的 count。\n\nint query_count = INT_MAX;\nfor (size_t i=0; i < function_size; ++i){\n\tint idx = Hash[i](query);\n\tint tmp_count = count_set[idx];\n\tquery_count = (tmp_count < query_count)? tmp_count: query_count;\n}\n\n\n实际上取多个 hash 的最小值就是 Count-Min Sketch 的核心，但如果仅是如此很明显有个问题，就是多个 hash 函数算出的多个 idx 会进一步的“污染”计数，得不偿失，导致 Count 更加不准确。\n\n实际上很容易想到，为了通过多个 hash 来减少冲突，并使得多 hash 的索引更加的唯一，最好的办法就是使得每个 hash 对应的计数空间是独立的，也就是将我们的计数空间在拓展成二维数组,其 size 为 depth × width 其中 depth 就代表 hash 函数的个数。\n\n那么假设每个 Hash 函数的冲突概率是 p~i~ 那么优化后的冲突概率就从 min(P~i~) 减小到\n\n\n\nfor (size_t i=0; i<function_size; ++i){\n\tint idx = Hash[i](query);\n\tint tmp_count = count_set[i][idx];\n\tquery_count = (tmp_count < query_count)? tmp_count: query_count;\n}\n\n\n结合了这个二维数组就是完整的 CMS 算法了，最终求得的 count 是实际 Count 的近似值（上界）。\n\n\n# CMS 的参数选择\n\n如果确定使用 CMS，接下来面对的就是计数的精度问题，那么如何选择这个数组的 shape 才能尽可能的减少误差呢？（很明显都是越大越好，那么怎么样是最优/达标的呢）\n\n确定一些变量参数：\n\n\n\n设定误差范围：\n\n\n\n以及结果在这个范围内的概率为:\n\n\n\n那么可以计算出：e 是自然常数\n\n\n\n计算公式来自论文，有效性分析也可以从论文中阅读\n\n> 添加一个新哈希函数以指数级别迅速降低超出边界异常数据的概率；当然，增加矩阵的宽度也可以增加减少冲突的概率，但这个只是线性级别。\n\n\n# Count-Mean-Min-Sketch\n\n由于 Hash 的冲突，CMS 对于低频的元素误差还是太大了，引入噪音对于高频元素可以接受（topk）但是对于低频长尾来说太不准确了，因此有了以下的改进：\n\n * 首先按照 CMS 的流程取出 d 个 sketch\n * 对于每个 hash 估计出一个噪音，噪音为该行的所有整数（除了被查询元素）的平均值\n * 该行的 sketch 减去该行的噪音，作为真正的 sketch\n * 返回 d 个 sketch 的中位数\n\nclass CountMeanMinSketch {\n    // initialization and addition procedures as in CountMinSketch\n    // n is total number of added elements\n    long estimateFrequency(value) {\n        long e[] = new long[d]\n        for(i = 0; i < d; i++) {\n            sketchCounter = estimators[i][ hash(value, i) ]\n            noiseEstimation = (n - sketchCounter) / (m - 1)\n            e[i] = sketchCounter – noiseEstimator\n        }\n        return median(e)\n    }\n}\n\n\n该算法显著改善了在长尾数据上的精确度。\n\n\n# 参考文献\n\nCount-min Sketch 算法 - 知乎 (zhihu.com)\n\nCount_Min Sketch算法 - AikenH Blogs",normalizedContent:"# 如何统计元素出现频率？\n\n问题： 如果老板让你统计一个实时的数据流中元素出现的频率，并且准备随时回答某个元素出现的频率，不需要的精确的计数，那该怎么办？\n\n# hashmap 解决\n\n在大数据场景下，比如网页的 topk 问题，爬虫的是否访问过的问题，都是一种出现频次相关的问题，那么在系统设计的时候，如何选择策略和数据结构去存储相关的数据是最高效合适的呢？\n\n计算元素的出现频次，如果出现与普通的场景下，简单的方案就是用 hashmap 来记录元素出现的次数：\n\n// 用hashmap存储元素及其频率\nhashmap<string, integer> freq = new hashmap<>();\n\n// 统计频率\nfor (string e : elements) {\n    if (!freq.containskey(e)) {\n    \tfreq.put(e, 1);\n    } else {\n    \tfreq.put(e, freq.get(e) + 1);\n    }\n}\n\n\n但是这种方式在大量数据流的情况下，如果存在大量唯一元素的情况下，会占用大量的内存，导致其无法应对大数据场景，因此在”时间换空间” 的策略选择中，这里就需要考虑通过时间，或者准确率等其他的因素来换空间。\n\n通常来说，针对大数据场景，会无限扩张的数据结构显然是不适用的，所以希望能用固定的空间来进行计数的管理，同时希望尽量不要影响到运行的时间，换言之，可以牺牲掉一定的准确性，来实现节省空间的效果。\n\n基于上述需求，我们可以想到 hash 算法：将无限大的空间映射到固定的 size 的输出上；而大数据场景下的 hash 会遇到冲突会被无限放大的问题\n\n如何解决冲突是最核心的问题\n\n * 基于概率数据结构实现的 bloom filter 算法采取多 hash 的方法来减少冲突\n * 而其衍生出来的 cms 算法以同样的思想，基于不同的设计，更为适应这种计数场景 下面介绍该方法的具体实现\n\n\n# cms简介\n\ncount-min sketch 算法是一个可以用来计数的算法，在数据大小非常大时，一种高效的计数算法，通过牺牲准确性提高的效率。\n\n * 是一个概率数据机构\n\n * 算法效率高\n * 提供计数上线\n\n其中，重要参数包括\n\n * hash 哈希函数的数量： k\n * 计数表格列的数量： m\n * 内存中用空间： k x m x size of counter\n\n# 举个栗子\n\n我们规定一个 m=5，k=3 的count-min sketch，用来计数，其中所有hash函数如下\n\n\n\n注意，所有hash函数的结果需 mod m\n\n下面开始填表，首先初始状态为\n\n\n\n首先，向里面添加字母b，其ascii码为66，求hash函数的结果为\n\n\n\n因此，表格变为\n\n\n\n接下来，我们查询字母a，其ascii码为65，求hash函数的结果为\n\n\n\n用这个结果去读表，发现其对应位置均为0，因此字母a最多出现0次，这个值是准确的。\n\n然后，我们在查询字母g，其ascii码为71，求hash函数的结果为\n\n\n\n用这个结果去读表，发现其对应位置均为1，因此字母g最多出现1次；**出错了！**我们从未向里面添加过字母g，这就是一次collision。count-min sketch的确会有这种问题，因为这个模型是从bloom filter衍生过来的。所以说count-min sketch是一个概率模型，返回的结果是一个上限值（upper-bound）。\n\n\n# cms 的具体实现\n\n首先第一点，通过 hash 来实现数值空间的转换，通过哈希函数 h 将输入元素 x 映射到一维数组上，通过该 index 的值来判断元素的 count（是否存在）\n\nfor (char x : input_element)\n{\n\tidx = hash(x);\n\tarray[idx] += 1;\n}\n\n\n实际上这就是 bloom filter 的基础思想，然而无论是定长数组的”有限”还是 hash 函数本身，都需要考虑冲突问题（两个元素被映射到同一个 index 上），冲突会导致 count 比真实的大。\n\n于是接下来面临的问题就是：**如何降低冲突的概率？**如何提高计数的准确性（实际上也包含在降低冲突的概率中）\n\n可以参考 bloom filter 的策略，其通过多个 hash 函数来映射同一个数，从而来降低元素的冲突概率（未考虑超大数据场景），进而也能提高计数的准确性，那么我们看一下 bloom filter 方法：\n\n> bloom filter 算法解决的是存在性问题，因此只需要一个 01 向量，当且仅当所有 hash 计算出来的 index 的值都为 1 的时候，这个元素才可能存在；\n\n考虑将该方法向 count 问题上迁移：\n\n * 计数过程中：使用 n 个 hash 函数计算 idx{1~n} ，然后 vec[idx[i]] += 1 对count+1\n * 查询过程中：使用 n 个 hash 函数计算 idx{1~n}，然后取 vec[idx[i]] 的最小值，考虑冲突场景可知，这个最小值>=实际的 count。\n\nint query_count = int_max;\nfor (size_t i=0; i < function_size; ++i){\n\tint idx = hash[i](query);\n\tint tmp_count = count_set[idx];\n\tquery_count = (tmp_count < query_count)? tmp_count: query_count;\n}\n\n\n实际上取多个 hash 的最小值就是 count-min sketch 的核心，但如果仅是如此很明显有个问题，就是多个 hash 函数算出的多个 idx 会进一步的“污染”计数，得不偿失，导致 count 更加不准确。\n\n实际上很容易想到，为了通过多个 hash 来减少冲突，并使得多 hash 的索引更加的唯一，最好的办法就是使得每个 hash 对应的计数空间是独立的，也就是将我们的计数空间在拓展成二维数组,其 size 为 depth × width 其中 depth 就代表 hash 函数的个数。\n\n那么假设每个 hash 函数的冲突概率是 p~i~ 那么优化后的冲突概率就从 min(p~i~) 减小到\n\n\n\nfor (size_t i=0; i<function_size; ++i){\n\tint idx = hash[i](query);\n\tint tmp_count = count_set[i][idx];\n\tquery_count = (tmp_count < query_count)? tmp_count: query_count;\n}\n\n\n结合了这个二维数组就是完整的 cms 算法了，最终求得的 count 是实际 count 的近似值（上界）。\n\n\n# cms 的参数选择\n\n如果确定使用 cms，接下来面对的就是计数的精度问题，那么如何选择这个数组的 shape 才能尽可能的减少误差呢？（很明显都是越大越好，那么怎么样是最优/达标的呢）\n\n确定一些变量参数：\n\n\n\n设定误差范围：\n\n\n\n以及结果在这个范围内的概率为:\n\n\n\n那么可以计算出：e 是自然常数\n\n\n\n计算公式来自论文，有效性分析也可以从论文中阅读\n\n> 添加一个新哈希函数以指数级别迅速降低超出边界异常数据的概率；当然，增加矩阵的宽度也可以增加减少冲突的概率，但这个只是线性级别。\n\n\n# count-mean-min-sketch\n\n由于 hash 的冲突，cms 对于低频的元素误差还是太大了，引入噪音对于高频元素可以接受（topk）但是对于低频长尾来说太不准确了，因此有了以下的改进：\n\n * 首先按照 cms 的流程取出 d 个 sketch\n * 对于每个 hash 估计出一个噪音，噪音为该行的所有整数（除了被查询元素）的平均值\n * 该行的 sketch 减去该行的噪音，作为真正的 sketch\n * 返回 d 个 sketch 的中位数\n\nclass countmeanminsketch {\n    // initialization and addition procedures as in countminsketch\n    // n is total number of added elements\n    long estimatefrequency(value) {\n        long e[] = new long[d]\n        for(i = 0; i < d; i++) {\n            sketchcounter = estimators[i][ hash(value, i) ]\n            noiseestimation = (n - sketchcounter) / (m - 1)\n            e[i] = sketchcounter – noiseestimator\n        }\n        return median(e)\n    }\n}\n\n\n该算法显著改善了在长尾数据上的精确度。\n\n\n# 参考文献\n\ncount-min sketch 算法 - 知乎 (zhihu.com)\n\ncount_min sketch算法 - aikenh blogs",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:45:30",lastUpdatedTimestamp:172630353e4},{title:"LFU",frontmatter:{title:"LFU",date:"2024-09-14T18:14:42.000Z",permalink:"/pages/7d22be/"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/05.LFU.html",relativePath:"01.系统设计算法/01.系统设计算法/05.LFU.md",key:"v-24d5fda5",path:"/pages/7d22be/",headers:[{level:2,title:"引子",slug:"引子",normalizedTitle:"引子",charIndex:2},{level:2,title:"LFU算法的基本原理",slug:"lfu算法的基本原理",normalizedTitle:"lfu算法的基本原理",charIndex:182},{level:2,title:"LFU算法的实现",slug:"lfu算法的实现",normalizedTitle:"lfu算法的实现",charIndex:648},{level:3,title:"键值对访问频率记录",slug:"键值对访问频率记录",normalizedTitle:"键值对访问频率记录",charIndex:862},{level:3,title:"键值对访问频率的初始化与更新",slug:"键值对访问频率的初始化与更新",normalizedTitle:"键值对访问频率的初始化与更新",charIndex:1303},{level:4,title:"第一步，根据距离上次访问的时长，衰减访问次数。",slug:"第一步-根据距离上次访问的时长-衰减访问次数。",normalizedTitle:"第一步，根据距离上次访问的时长，衰减访问次数。",charIndex:3832},{level:4,title:"第二步，根据当前访问更新访问次数",slug:"第二步-根据当前访问更新访问次数",normalizedTitle:"第二步，根据当前访问更新访问次数",charIndex:6846},{level:4,title:"第三步，更新 lru 变量值",slug:"第三步-更新-lru-变量值",normalizedTitle:"第三步，更新 lru 变量值",charIndex:8610},{level:3,title:"LFU 算法淘汰数据",slug:"lfu-算法淘汰数据",normalizedTitle:"lfu 算法淘汰数据",charIndex:8954},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:9222}],headersStr:"引子 LFU算法的基本原理 LFU算法的实现 键值对访问频率记录 键值对访问频率的初始化与更新 第一步，根据距离上次访问的时长，衰减访问次数。 第二步，根据当前访问更新访问次数 第三步，更新 lru 变量值 LFU 算法淘汰数据 总结",content:"# 引子\n\nRedis在4.0版本后，还引入了LFU算法，也就是，最不频繁使用（Least Frequently Used，LFU）\n\nLFU算法在进行数据淘汰时，会把最不频繁访问的数据淘汰掉。而LRU算法是把最近最少使用的数据淘汰掉，看起来也是淘汰不频繁访问的数据。\n\nLFU算法和LRU算法的区别到底有哪些呢？我们在实际场景中，需要使用LFU算法吗？\n\n\n# LFU算法的基本原理\n\n因为LFU算法是根据数据访问的频率来选择被淘汰数据的，所以LFU算法会记录每个数据的访问次数。当一个数据被再次访问时，就会增加该数据的访问次数。\n\n不过，访问次数和访问频率还不能完全等同。\n\n访问频率是指在一定时间内的访问次数，也就是说，在计算访问频率时，我们不仅需要记录访问次数，还要记录这些访问是在多长时间内执行的。否则，如果只记录访问次数的话，就缺少了时间维度的信息，进而就无法按照频率来淘汰数据了\n\n> 我来给你举个例子，假设数据A在15分钟内访问了15次，数据B在5分钟内访问了10次。如果只是按访问次数来统计的话，数据A的访问次数大于数据B，所以淘汰数据时会优先淘汰数据B。不过，如果按照访问频率来统计的话，数据A的访问频率是1分钟访问1次，而数据B的访问频率是1分钟访问2次，所以按访问频率淘汰数据的话，数据A应该被淘汰掉。 所以说，当要实现LFU算法时，我们需要能统计到数据的访问频率，而不是简单地记录数据访问次数就行。 那么接下来，我们就来学习下Redis是如何实现LFU算法的。\n\n\n# LFU算法的实现\n\n首先，LFU算法的启用，是通过设置Redis配置文件redis.conf中的maxmemory和maxmemory-policy。其中，maxmemory设置为Redis会用的最大内存容量，而maxmemory-policy可以设置为allkeys-lfu或是volatile-lfu，表示淘汰的键值对会分别从所有键值对或是设置了过期时间的键值对中筛选\n\nLFU算法的实现可以分成三部分内容，分别是\n\n * 键值对访问频率记录\n * 键值对访问频率初始化和更新\n * LFU算法淘汰数据\n\n\n# 键值对访问频率记录\n\n每个键值对的值都对应了一个redisObject结构体，其中有一个24 bits的lru变量。lru变量在LRU算法实现时，是用来记录数据的访问时间戳。因为Redis server每次运行时，只能将maxmemory-policy配置项设置为使用一种淘汰策略，所以，LRU算法和LFU算法并不会同时使用。而为了节省内存开销，Redis源码就复用了lru变量来记录LFU算法所需的访问频率信息。\n\n具体来说，当lru变量用来记录LFU算法的所需信息时，它会用24 bits中的低8 bits作为计数器，来记录键值对的访问次数，同时它会用24 bits中的高16 bits，记录访问的时间戳。下图就展示了用来记录访问频率时的lru变量内容，你可以看下。\n\n好，了解了 LFU 算法所需的访问频率是如何记录的，接下来，我们再来看下键值对的访问频率是如何初始化和更新的。\n\n\n# 键值对访问频率的初始化与更新\n\n首先，我们要知道，LFU 算法和 LRU 算法的基本步骤，实际上是在相同的入口函数中执行的。围绕 LRU 算法的实现，我们已经了解到这些基本步骤包括数据访问信息的初始化、访问信息更新，以及实际淘汰数据。这些步骤对应的入口函数如下表所示，你也可以再去回顾下内容。\n\n了解了这些入口函数后，我们再去分析 LFU 算法的实现，就容易找到对应的函数了。\n\n对于键值对访问频率的初始化来说，当一个键值对被创建后，createObject 函数就会被调用，用来分配 redisObject 结构体的空间和设置初始化值。如果 Redis 将 maxmemory-policy 设置为 LFU 算法，那么，键值对 redisObject 结构体中的 lru 变量初始化值，会由两部分组成：\n\n * 第一部分是 lru 变量的高 16 位，是以 1 分钟为精度的 UNIX 时间戳。这是通过调用 LFUGetTimeInMinutes 函数（在 evict.c 文件中）计算得到的。\n * 第二部分是 lru 变量的低 8 位，被设置为宏定义 LFU_INIT_VAL（在server.h文件中），默认值为 5。\n\n你会发现，这和我刚才给你介绍的键值对访问频率记录是一致的，也就是说，当使用 LFU 算法时，lru 变量包括了键值对的访问时间戳和访问次数。以下代码也展示了这部分的执行逻辑，你可以看下。\n\nrobj *createObject(int type, void *ptr) {\n    robj *o = zmalloc(sizeof(*o));\n    o->type = type;\n    o->encoding = OBJ_ENCODING_RAW;\n    o->ptr = ptr;\n    o->refcount = 1;\n\n    /* Set the LRU to the current lruclock (minutes resolution), or\n     * alternatively the LFU counter. */\n    // 使用LFU算法时，lru变量包括以分钟为精度的UNIX时间戳和访问次数5\n    if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n        o->lru = (LFUGetTimeInMinutes()<<8) | LFU_INIT_VAL;\n    } else {\n        o->lru = LRU_CLOCK();\n    }\n    return o;\n}\n\n\n/* Return the current time in minutes, just taking the least significant\n * 16 bits. The returned time is suitable to be stored as LDT (last decrement\n * time) for the LFU implementation. */\nunsigned long LFUGetTimeInMinutes(void) {\n    return (server.unixtime/60) & 65535;\n}\n\n\n#define LFU_INIT_VAL 5\n\n\n下面，我们再来看下键值对访问频率的更新。\n\n当一个键值对被访问时，Redis 会调用 lookupKey 函数进行查找。当 maxmemory-policy 设置使用 LFU 算法时，lookupKey 函数会调用 updateLFU 函数来更新键值对的访问频率，也就是 lru 变量值，如下所示：\n\n/* Low level key lookup API, not actually called directly from commands\n * implementations that should instead rely on lookupKeyRead(),\n * lookupKeyWrite() and lookupKeyReadWithFlags(). */\nrobj *lookupKey(redisDb *db, robj *key, int flags) {\n    dictEntry *de = dictFind(db->dict,key->ptr);\n    if (de) {\n        robj *val = dictGetVal(de);\n\n        /* Update the access time for the ageing algorithm.\n         * Don't do it if we have a saving child, as this will trigger\n         * a copy on write madness. */\n        if (!hasActiveChildProcess() && !(flags & LOOKUP_NOTOUCH)){\n            // 使用LFU算法时，调用updateLFU函数更新访问频率\n            if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n                updateLFU(val);\n            } else {\n                // 使用LRU算法时，调用LRU_CLOCK\n                val->lru = LRU_CLOCK();\n            }\n        }\n        return val;\n    } else {\n        return NULL;\n    }\n}\n\n\nupdateLFU 函数是在db.c文件中实现的，它的执行逻辑比较明确，一共分成三步。\n\n# 第一步，根据距离上次访问的时长，衰减访问次数。\n\nupdateLFU 函数首先会调用 LFUDecrAndReturn 函数（在 evict.c 文件中），对键值对的访问次数进行衰减操作，如下所示：\n\n/* Update LFU when an object is accessed.\n * Firstly, decrement the counter if the decrement time is reached.\n * Then logarithmically increment the counter, and update the access time. */\nvoid updateLFU(robj *val) {\n    // 首先，递减计数器\n    unsigned long counter = LFUDecrAndReturn(val);\n    // 然后以logN级别递增计数器，并更新访问次数。\n    counter = LFULogIncr(counter);\n    val->lru = (LFUGetTimeInMinutes()<<8) | counter;\n}\n\n\n看到这里，你可能会有疑问：访问键值对时不是要增加键值对的访问次数吗，为什么要先衰减访问次数呢？\n\n其实，这就是我在前面一开始和你介绍的，LFU 算法是根据访问频率来淘汰数据的，而不只是访问次数。访问频率需要考虑键值对的访问是多长时间段内发生的。键值对的先前访问距离当前时间越长，那么这个键值对的访问频率相应地也就会降低。\n\n我给你举个例子，假设数据 A 在时刻 T 到 T+10 分钟这段时间内，被访问了 30 次，那么，这段时间内数据 A 的访问频率可以计算为 3 次 / 分钟（30 次 /10 分钟 = 3 次 / 分钟）。\n\n紧接着，在 T+10 分钟到 T+20 分钟这段时间内，数据 A 没有再被访问，那么此时，如果我们计算数据 A 在 T 到 T+20 分钟这段时间内的访问频率，它的访问频率就会降为 1.5 次 / 分钟（30 次 /20 分钟 = 1.5 次 / 分钟）。以此类推，随着时间的推移，如果数据 A 在 T+10 分钟后一直没有新的访问，那么它的访问频率就会逐步降低。这就是所谓的访问频率衰减。\n\n因为 Redis 是使用 lru 变量中的访问次数来表示访问频率，所以在每次更新键值对的访问频率时，就会通过 LFUDecrAndReturn 函数对访问次数进行衰减。\n\n具体来说，LFUDecrAndReturn 函数会首先获取当前键值对的上一次访问时间，这是保存在 lru 变量高 16 位上的值。然后，LFUDecrAndReturn 函数会根据全局变量 server 的 lru_decay_time 成员变量的取值，来计算衰减的大小 num_period。\n\n这个计算过程会判断 lfu_decay_time 的值是否为 0。如果 lfu_decay_time 值为 0，那么衰减大小也为 0。此时，访问次数不进行衰减。\n\n否则的话，LFUDecrAndReturn 函数会调用 LFUTimeElapsed 函数（在 evict.c 文件中），计算距离键值对的上一次访问已经过去的时长。这个时长也是以 1 分钟为精度来计算的。有了距离上次访问的时长后，LFUDecrAndReturn 函数会把这个时长除以 lfu_decay_time 的值，并把结果作为访问次数的衰减大小。\n\n这里，你需要注意的是，lfu_decay_time 变量值，是由 redis.conf 文件中的配置项 lfu-decay-time 来决定的。Redis 在初始化时，会通过 initServerConfig 函数来设置 lfu_decay_time 变量的值，默认值为 1。所以，在默认情况下，访问次数的衰减大小就是等于上一次访问距离当前的分钟数。比如，假设上一次访问是 10 分钟前，那么在默认情况下，访问次数的衰减大小就等于 10。\n\n当然，如果上一次访问距离当前的分钟数，已经超过访问次数的值了，那么访问次数就会被设置为 0，这就表示键值对已经很长时间没有被访问了。\n\n下面的代码展示了 LFUDecrAndReturn 函数的执行逻辑，你可以看下。\n\n/* If the object decrement time is reached decrement the LFU counter but\n * do not update LFU fields of the object, we update the access time\n * and counter in an explicit way when the object is really accessed.\n * And we will times halve the counter according to the times of\n * elapsed time than server.lfu_decay_time.\n * Return the object frequency counter.\n *\n * This function is used in order to scan the dataset for the best object\n * to fit: as we check for the candidate, we incrementally decrement the\n * counter of the scanned objects if needed. */\nunsigned long LFUDecrAndReturn(robj *o) {\n    // 获取当前键值对的上一次访问时间，lru右移8位，相当于保留的是前面16位的时间戳\n    unsigned long ldt = o->lru >> 8;\n    // 获取当前的访问次数，相当于后8位与255做与运算，即得到计数器\n    unsigned long counter = o->lru & 255;\n    // 计算衰减大小\n    unsigned long num_periods = server.lfu_decay_time ? LFUTimeElapsed(ldt) / server.lfu_decay_time : 0;\n    // 如果衰减大小不为0\n    if (num_periods)\n        // 如果衰减大小小于当前访问次数，那么，衰减后的访问次数是当前访问次数减去衰减大小；否则，衰减后的访问次数等于0\n        counter = (num_periods > counter) ? 0 : counter - num_periods;\n    // 如果衰减大小为0，则返回原来的访问次数\n    return counter;\n}\t\n\n\n好了，到这里，updateLFU 函数就通过 LFUDecrAndReturn 函数，完成了键值对访问次数的衰减。紧接着，updateLFU 函数还是会基于键值对当前的这次访问，来更新它的访问次数。\n\n# 第二步，根据当前访问更新访问次数\n\n在这一步中，updateLFU 函数会调用 LFULogIncr 函数，来增加键值对的访问次数，如下所示：\n\n/* Logarithmically increment a counter. The greater is the current counter value\n * the less likely is that it gets really implemented. Saturate it at 255. */\n// 对数递增计数值\n//核心就是访问次数越大，访问次数被递增的可能性越小，最大 255，此外你可以在配置 redis.conf 中写明访问多少次递增多少。\nuint8_t LFULogIncr(uint8_t counter) {\n    // 到最大值了，不能在增加了\n    if (counter == 255) return 255;\n    //    rand()产生一个0-0x7fff的随机数,一个随机数去除以 RAND_MAX也就是Ox7FFF，也就是随机概率\n    double r = (double)rand()/RAND_MAX;\n    // 减去新对象初始化的基数值 (LFU_INIT_VAL 默认是 5)\n    double baseval = counter - LFU_INIT_VAL;\n    // baseval 如果小于零，说明这个对象快不行了，不过本次 incr 将会延长它的寿命\n    if (baseval < 0) baseval = 0;\n    // baseval * LFU 对数计数器因子 + 1保证分母大于1\n    // 当 baseval 特别大时，最大是 (255-5)，p 值会非常小，很难会走到 counter++ 这一步\n    // p 就是 counter 通往 [+1] 权力的门缝，baseval 越大，这个门缝越窄，通过就越艰难\n    double p = 1.0/(baseval*server.lfu_log_factor+1);\n    // 如果随机概率小于当前计算的访问概率，那么访问次数加1\n    if (r < p) counter++;\n    return counter;\n}\n\n\n * 第一个分支对应了当前访问次数等于最大值 255 的情况。此时，LFULogIncr 函数不再增加访问次数。\n\n * 第二个分支对应了当前访问次数小于 255 的情况。此时，LFULogIncr 函数会计算一个阈值 p，以及一个取值为 0 到 1 之间的随机概率值 r。如果概率 r 小于阈值 p，那么 LFULogIncr 函数才会将访问次数加 1。否则的话，LFULogIncr 函数会返回当前的访问次数，不做更新。\n\n从这里你可以看到，因为概率值 r 是随机定的，所以，阈值 p 的大小就决定了访问次数增加的难度。阈值 p 越小，概率值 r 小于 p 的可能性也越小，此时，访问次数也越难增加；相反，如果阈值 p 越大，概率值 r 小于 p 的可能性就越大，访问次数就越容易增加。\n\n而阈值 p 的值大小，其实是由两个因素决定的。一个是当前访问次数和宏定义 LFU_INIT_VAL 的差值 baseval，另一个是 reids.conf 文件中定义的配置项 lfu-log-factor。\n\n当计算阈值 p 时，我们是把 baseval 和 lfu-log-factor 乘积后，加上 1，然后再取其倒数。所以，baseval 或者 lfu-log-factor 越大，那么其倒数就越小，也就是阈值 p 就越小；反之，阈值 p 就越大。也就是说，这里其实就对应了两种影响因素。\n\n * baseval 的大小：这反映了当前访问次数的多少。比如，访问次数越多的键值对，它的访问次数再增加的难度就会越大；(有点类似指数退避算法)\n * lfu-log-factor 的大小：这是可以被设置的。也就是说，Redis 源码提供了让我们人为调节访问次数增加难度的方法。\n\n这样，等到 LFULogIncr 函数执行完成后，键值对的访问次数就算更新完了。\n\n# 第三步，更新 lru 变量值\n\n最后，到这一步，updateLFU 函数已经完成了键值对访问次数的更新。接着，它就会调用 LFUGetTimeInMinutes 函数，来获取当前的时间戳，并和更新后的访问次数组合，形成最新的访问频率信息，赋值给键值对的 lru 变量，如下所示：\n\n好了，到这里，你就了解了，Redis 源码在更新键值对访问频率时，对于访问次数，它是先按照上次访问距离当前的时长，来对访问次数进行衰减。然后，再按照一定概率增加访问次数。这样的设计方法，就既包含了访问的时间段对访问频率的影响，也避免了 8 bits 计数器对访问次数的影响。而对于访问时间来说，Redis 还会获取最新访问时间戳并更新到 lru 变量中。\n\n那么最后，我们再来看下 Redis 是如何基于 LFU 算法淘汰数据的。\n\n\n# LFU 算法淘汰数据\n\n在实现使用 LFU 算法淘汰数据时，Redis 是采用了和实现近似 LRU 算法相同的方法。也就是说，Redis 会使用一个全局数组 EvictionPoolLRU，来保存待淘汰候选键值对集合。然后，在 processCommand 函数处理每个命令时，它会调用 freeMemoryIfNeededAndSafe 函数和 freeMemoryIfNeeded 函数，来执行具体的数据淘汰流程。\n\n这个淘汰流程我在上篇文章已经给你介绍过了，你可以再去整体回顾下。这里，我也再简要总结下，也就是分成三个步骤：\n\n * 第一步，调用 getMaxmemoryState 函数计算待释放的内存空间；\n * 第二步，调用 evictionPoolPopulate 函数随机采样键值对，并插入到待淘汰集合 EvictionPoolLRU 中；\n * 第三步，遍历待淘汰集合 EvictionPoolLRU，选择实际被淘汰数据，并删除。\n\n虽然这个基本流程和 LRU 算法相同，但是你要注意，LFU 算法在淘汰数据时，在第二步的 evictionPoolPopulate 函数中，使用了不同的方法来计算每个待淘汰键值对的空闲时间\n\n具体来说，在实现 LRU 算法时，待淘汰候选键值对集合 EvictionPoolLRU 中的每个元素，都使用成员变量 idle 来记录它距离上次访问的空闲时间。\n\n而当实现 LFU 算法时，因为 LFU 算法会对访问次数进行衰减和按概率增加，所以，它是使用访问次数来近似表示访问频率的。相应的，LFU 算法其实是用 255 减去键值对的访问次数，这样来计算 EvictionPoolLRU 数组中每个元素的 idle 变量值的。而且，在计算 idle 变量值前，LFU 算法还会调用 LFUDecrAndReturn 函数，衰减一次键值对的访问次数，以便能更加准确地反映实际选择待淘汰数据时，数据的访问频率。\n\n下面的代码展示了 LFU 算法计算 idle 变量值的过程，你可以看下。\n\nif (server.maxmemory_policy & MAXMEMORY_FLAG_LRU) {\n    idle = estimateObjectIdleTime(o);\n} else if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n    idle = 255-LFUDecrAndReturn(o);\n}\n\n\n所以说，当 LFU 算法按照访问频率，计算了待淘汰键值对集合中每个元素的 idle 值后，键值对访问次数越大，它的 idle 值就越小，反之 idle 值越大。而 EvictionPoolLRU 数组中的元素，是按 idle 值从小到大来排序的。最后当 freeMemoryIfNeeded 函数按照 idle 值从大到小，遍历 EvictionPoolLRU 数组，选择实际被淘汰的键值对时，它就能选出访问次数小的键值对了，也就是把访问频率低的键值对淘汰出去。\n\n这样，Redis 就完成了按访问频率来淘汰数据的操作了。\n\n\n# 总结\n\n 1. LFU 是在 Redis 4.0 新增的淘汰策略，它涉及的巧妙之处在于，其复用了 redisObject 结构的 lru 字段，把这个字段「一分为二」，高16位保存最后访问时间和低8位保存访问次数\n 2. key 的访问次数不能只增不减，它需要根据时间间隔来做衰减，才能达到 LFU 的目的\n 3. 每次在访问一个 key 时，会**「懒惰」**更新这个 key 的访问次数：先衰减访问次数，再更新访问次数\n 4. 衰减访问次数，会根据时间间隔计算，间隔时间越久，衰减越厉害\n 5. 因为 redisObject lru 字段宽度限制，这个访问次数是有上限的（8 bit 最大值 255），所以递增访问次数时，会根据「当前」访问次数和「概率」的方式做递增，访问次数越大，递增因子越大，递增概率越低\n 6. Redis 实现的 LFU 算法也是**「近似」**LFU，是在性能和内存方面平衡的结果",normalizedContent:"# 引子\n\nredis在4.0版本后，还引入了lfu算法，也就是，最不频繁使用（least frequently used，lfu）\n\nlfu算法在进行数据淘汰时，会把最不频繁访问的数据淘汰掉。而lru算法是把最近最少使用的数据淘汰掉，看起来也是淘汰不频繁访问的数据。\n\nlfu算法和lru算法的区别到底有哪些呢？我们在实际场景中，需要使用lfu算法吗？\n\n\n# lfu算法的基本原理\n\n因为lfu算法是根据数据访问的频率来选择被淘汰数据的，所以lfu算法会记录每个数据的访问次数。当一个数据被再次访问时，就会增加该数据的访问次数。\n\n不过，访问次数和访问频率还不能完全等同。\n\n访问频率是指在一定时间内的访问次数，也就是说，在计算访问频率时，我们不仅需要记录访问次数，还要记录这些访问是在多长时间内执行的。否则，如果只记录访问次数的话，就缺少了时间维度的信息，进而就无法按照频率来淘汰数据了\n\n> 我来给你举个例子，假设数据a在15分钟内访问了15次，数据b在5分钟内访问了10次。如果只是按访问次数来统计的话，数据a的访问次数大于数据b，所以淘汰数据时会优先淘汰数据b。不过，如果按照访问频率来统计的话，数据a的访问频率是1分钟访问1次，而数据b的访问频率是1分钟访问2次，所以按访问频率淘汰数据的话，数据a应该被淘汰掉。 所以说，当要实现lfu算法时，我们需要能统计到数据的访问频率，而不是简单地记录数据访问次数就行。 那么接下来，我们就来学习下redis是如何实现lfu算法的。\n\n\n# lfu算法的实现\n\n首先，lfu算法的启用，是通过设置redis配置文件redis.conf中的maxmemory和maxmemory-policy。其中，maxmemory设置为redis会用的最大内存容量，而maxmemory-policy可以设置为allkeys-lfu或是volatile-lfu，表示淘汰的键值对会分别从所有键值对或是设置了过期时间的键值对中筛选\n\nlfu算法的实现可以分成三部分内容，分别是\n\n * 键值对访问频率记录\n * 键值对访问频率初始化和更新\n * lfu算法淘汰数据\n\n\n# 键值对访问频率记录\n\n每个键值对的值都对应了一个redisobject结构体，其中有一个24 bits的lru变量。lru变量在lru算法实现时，是用来记录数据的访问时间戳。因为redis server每次运行时，只能将maxmemory-policy配置项设置为使用一种淘汰策略，所以，lru算法和lfu算法并不会同时使用。而为了节省内存开销，redis源码就复用了lru变量来记录lfu算法所需的访问频率信息。\n\n具体来说，当lru变量用来记录lfu算法的所需信息时，它会用24 bits中的低8 bits作为计数器，来记录键值对的访问次数，同时它会用24 bits中的高16 bits，记录访问的时间戳。下图就展示了用来记录访问频率时的lru变量内容，你可以看下。\n\n好，了解了 lfu 算法所需的访问频率是如何记录的，接下来，我们再来看下键值对的访问频率是如何初始化和更新的。\n\n\n# 键值对访问频率的初始化与更新\n\n首先，我们要知道，lfu 算法和 lru 算法的基本步骤，实际上是在相同的入口函数中执行的。围绕 lru 算法的实现，我们已经了解到这些基本步骤包括数据访问信息的初始化、访问信息更新，以及实际淘汰数据。这些步骤对应的入口函数如下表所示，你也可以再去回顾下内容。\n\n了解了这些入口函数后，我们再去分析 lfu 算法的实现，就容易找到对应的函数了。\n\n对于键值对访问频率的初始化来说，当一个键值对被创建后，createobject 函数就会被调用，用来分配 redisobject 结构体的空间和设置初始化值。如果 redis 将 maxmemory-policy 设置为 lfu 算法，那么，键值对 redisobject 结构体中的 lru 变量初始化值，会由两部分组成：\n\n * 第一部分是 lru 变量的高 16 位，是以 1 分钟为精度的 unix 时间戳。这是通过调用 lfugettimeinminutes 函数（在 evict.c 文件中）计算得到的。\n * 第二部分是 lru 变量的低 8 位，被设置为宏定义 lfu_init_val（在server.h文件中），默认值为 5。\n\n你会发现，这和我刚才给你介绍的键值对访问频率记录是一致的，也就是说，当使用 lfu 算法时，lru 变量包括了键值对的访问时间戳和访问次数。以下代码也展示了这部分的执行逻辑，你可以看下。\n\nrobj *createobject(int type, void *ptr) {\n    robj *o = zmalloc(sizeof(*o));\n    o->type = type;\n    o->encoding = obj_encoding_raw;\n    o->ptr = ptr;\n    o->refcount = 1;\n\n    /* set the lru to the current lruclock (minutes resolution), or\n     * alternatively the lfu counter. */\n    // 使用lfu算法时，lru变量包括以分钟为精度的unix时间戳和访问次数5\n    if (server.maxmemory_policy & maxmemory_flag_lfu) {\n        o->lru = (lfugettimeinminutes()<<8) | lfu_init_val;\n    } else {\n        o->lru = lru_clock();\n    }\n    return o;\n}\n\n\n/* return the current time in minutes, just taking the least significant\n * 16 bits. the returned time is suitable to be stored as ldt (last decrement\n * time) for the lfu implementation. */\nunsigned long lfugettimeinminutes(void) {\n    return (server.unixtime/60) & 65535;\n}\n\n\n#define lfu_init_val 5\n\n\n下面，我们再来看下键值对访问频率的更新。\n\n当一个键值对被访问时，redis 会调用 lookupkey 函数进行查找。当 maxmemory-policy 设置使用 lfu 算法时，lookupkey 函数会调用 updatelfu 函数来更新键值对的访问频率，也就是 lru 变量值，如下所示：\n\n/* low level key lookup api, not actually called directly from commands\n * implementations that should instead rely on lookupkeyread(),\n * lookupkeywrite() and lookupkeyreadwithflags(). */\nrobj *lookupkey(redisdb *db, robj *key, int flags) {\n    dictentry *de = dictfind(db->dict,key->ptr);\n    if (de) {\n        robj *val = dictgetval(de);\n\n        /* update the access time for the ageing algorithm.\n         * don't do it if we have a saving child, as this will trigger\n         * a copy on write madness. */\n        if (!hasactivechildprocess() && !(flags & lookup_notouch)){\n            // 使用lfu算法时，调用updatelfu函数更新访问频率\n            if (server.maxmemory_policy & maxmemory_flag_lfu) {\n                updatelfu(val);\n            } else {\n                // 使用lru算法时，调用lru_clock\n                val->lru = lru_clock();\n            }\n        }\n        return val;\n    } else {\n        return null;\n    }\n}\n\n\nupdatelfu 函数是在db.c文件中实现的，它的执行逻辑比较明确，一共分成三步。\n\n# 第一步，根据距离上次访问的时长，衰减访问次数。\n\nupdatelfu 函数首先会调用 lfudecrandreturn 函数（在 evict.c 文件中），对键值对的访问次数进行衰减操作，如下所示：\n\n/* update lfu when an object is accessed.\n * firstly, decrement the counter if the decrement time is reached.\n * then logarithmically increment the counter, and update the access time. */\nvoid updatelfu(robj *val) {\n    // 首先，递减计数器\n    unsigned long counter = lfudecrandreturn(val);\n    // 然后以logn级别递增计数器，并更新访问次数。\n    counter = lfulogincr(counter);\n    val->lru = (lfugettimeinminutes()<<8) | counter;\n}\n\n\n看到这里，你可能会有疑问：访问键值对时不是要增加键值对的访问次数吗，为什么要先衰减访问次数呢？\n\n其实，这就是我在前面一开始和你介绍的，lfu 算法是根据访问频率来淘汰数据的，而不只是访问次数。访问频率需要考虑键值对的访问是多长时间段内发生的。键值对的先前访问距离当前时间越长，那么这个键值对的访问频率相应地也就会降低。\n\n我给你举个例子，假设数据 a 在时刻 t 到 t+10 分钟这段时间内，被访问了 30 次，那么，这段时间内数据 a 的访问频率可以计算为 3 次 / 分钟（30 次 /10 分钟 = 3 次 / 分钟）。\n\n紧接着，在 t+10 分钟到 t+20 分钟这段时间内，数据 a 没有再被访问，那么此时，如果我们计算数据 a 在 t 到 t+20 分钟这段时间内的访问频率，它的访问频率就会降为 1.5 次 / 分钟（30 次 /20 分钟 = 1.5 次 / 分钟）。以此类推，随着时间的推移，如果数据 a 在 t+10 分钟后一直没有新的访问，那么它的访问频率就会逐步降低。这就是所谓的访问频率衰减。\n\n因为 redis 是使用 lru 变量中的访问次数来表示访问频率，所以在每次更新键值对的访问频率时，就会通过 lfudecrandreturn 函数对访问次数进行衰减。\n\n具体来说，lfudecrandreturn 函数会首先获取当前键值对的上一次访问时间，这是保存在 lru 变量高 16 位上的值。然后，lfudecrandreturn 函数会根据全局变量 server 的 lru_decay_time 成员变量的取值，来计算衰减的大小 num_period。\n\n这个计算过程会判断 lfu_decay_time 的值是否为 0。如果 lfu_decay_time 值为 0，那么衰减大小也为 0。此时，访问次数不进行衰减。\n\n否则的话，lfudecrandreturn 函数会调用 lfutimeelapsed 函数（在 evict.c 文件中），计算距离键值对的上一次访问已经过去的时长。这个时长也是以 1 分钟为精度来计算的。有了距离上次访问的时长后，lfudecrandreturn 函数会把这个时长除以 lfu_decay_time 的值，并把结果作为访问次数的衰减大小。\n\n这里，你需要注意的是，lfu_decay_time 变量值，是由 redis.conf 文件中的配置项 lfu-decay-time 来决定的。redis 在初始化时，会通过 initserverconfig 函数来设置 lfu_decay_time 变量的值，默认值为 1。所以，在默认情况下，访问次数的衰减大小就是等于上一次访问距离当前的分钟数。比如，假设上一次访问是 10 分钟前，那么在默认情况下，访问次数的衰减大小就等于 10。\n\n当然，如果上一次访问距离当前的分钟数，已经超过访问次数的值了，那么访问次数就会被设置为 0，这就表示键值对已经很长时间没有被访问了。\n\n下面的代码展示了 lfudecrandreturn 函数的执行逻辑，你可以看下。\n\n/* if the object decrement time is reached decrement the lfu counter but\n * do not update lfu fields of the object, we update the access time\n * and counter in an explicit way when the object is really accessed.\n * and we will times halve the counter according to the times of\n * elapsed time than server.lfu_decay_time.\n * return the object frequency counter.\n *\n * this function is used in order to scan the dataset for the best object\n * to fit: as we check for the candidate, we incrementally decrement the\n * counter of the scanned objects if needed. */\nunsigned long lfudecrandreturn(robj *o) {\n    // 获取当前键值对的上一次访问时间，lru右移8位，相当于保留的是前面16位的时间戳\n    unsigned long ldt = o->lru >> 8;\n    // 获取当前的访问次数，相当于后8位与255做与运算，即得到计数器\n    unsigned long counter = o->lru & 255;\n    // 计算衰减大小\n    unsigned long num_periods = server.lfu_decay_time ? lfutimeelapsed(ldt) / server.lfu_decay_time : 0;\n    // 如果衰减大小不为0\n    if (num_periods)\n        // 如果衰减大小小于当前访问次数，那么，衰减后的访问次数是当前访问次数减去衰减大小；否则，衰减后的访问次数等于0\n        counter = (num_periods > counter) ? 0 : counter - num_periods;\n    // 如果衰减大小为0，则返回原来的访问次数\n    return counter;\n}\t\n\n\n好了，到这里，updatelfu 函数就通过 lfudecrandreturn 函数，完成了键值对访问次数的衰减。紧接着，updatelfu 函数还是会基于键值对当前的这次访问，来更新它的访问次数。\n\n# 第二步，根据当前访问更新访问次数\n\n在这一步中，updatelfu 函数会调用 lfulogincr 函数，来增加键值对的访问次数，如下所示：\n\n/* logarithmically increment a counter. the greater is the current counter value\n * the less likely is that it gets really implemented. saturate it at 255. */\n// 对数递增计数值\n//核心就是访问次数越大，访问次数被递增的可能性越小，最大 255，此外你可以在配置 redis.conf 中写明访问多少次递增多少。\nuint8_t lfulogincr(uint8_t counter) {\n    // 到最大值了，不能在增加了\n    if (counter == 255) return 255;\n    //    rand()产生一个0-0x7fff的随机数,一个随机数去除以 rand_max也就是ox7fff，也就是随机概率\n    double r = (double)rand()/rand_max;\n    // 减去新对象初始化的基数值 (lfu_init_val 默认是 5)\n    double baseval = counter - lfu_init_val;\n    // baseval 如果小于零，说明这个对象快不行了，不过本次 incr 将会延长它的寿命\n    if (baseval < 0) baseval = 0;\n    // baseval * lfu 对数计数器因子 + 1保证分母大于1\n    // 当 baseval 特别大时，最大是 (255-5)，p 值会非常小，很难会走到 counter++ 这一步\n    // p 就是 counter 通往 [+1] 权力的门缝，baseval 越大，这个门缝越窄，通过就越艰难\n    double p = 1.0/(baseval*server.lfu_log_factor+1);\n    // 如果随机概率小于当前计算的访问概率，那么访问次数加1\n    if (r < p) counter++;\n    return counter;\n}\n\n\n * 第一个分支对应了当前访问次数等于最大值 255 的情况。此时，lfulogincr 函数不再增加访问次数。\n\n * 第二个分支对应了当前访问次数小于 255 的情况。此时，lfulogincr 函数会计算一个阈值 p，以及一个取值为 0 到 1 之间的随机概率值 r。如果概率 r 小于阈值 p，那么 lfulogincr 函数才会将访问次数加 1。否则的话，lfulogincr 函数会返回当前的访问次数，不做更新。\n\n从这里你可以看到，因为概率值 r 是随机定的，所以，阈值 p 的大小就决定了访问次数增加的难度。阈值 p 越小，概率值 r 小于 p 的可能性也越小，此时，访问次数也越难增加；相反，如果阈值 p 越大，概率值 r 小于 p 的可能性就越大，访问次数就越容易增加。\n\n而阈值 p 的值大小，其实是由两个因素决定的。一个是当前访问次数和宏定义 lfu_init_val 的差值 baseval，另一个是 reids.conf 文件中定义的配置项 lfu-log-factor。\n\n当计算阈值 p 时，我们是把 baseval 和 lfu-log-factor 乘积后，加上 1，然后再取其倒数。所以，baseval 或者 lfu-log-factor 越大，那么其倒数就越小，也就是阈值 p 就越小；反之，阈值 p 就越大。也就是说，这里其实就对应了两种影响因素。\n\n * baseval 的大小：这反映了当前访问次数的多少。比如，访问次数越多的键值对，它的访问次数再增加的难度就会越大；(有点类似指数退避算法)\n * lfu-log-factor 的大小：这是可以被设置的。也就是说，redis 源码提供了让我们人为调节访问次数增加难度的方法。\n\n这样，等到 lfulogincr 函数执行完成后，键值对的访问次数就算更新完了。\n\n# 第三步，更新 lru 变量值\n\n最后，到这一步，updatelfu 函数已经完成了键值对访问次数的更新。接着，它就会调用 lfugettimeinminutes 函数，来获取当前的时间戳，并和更新后的访问次数组合，形成最新的访问频率信息，赋值给键值对的 lru 变量，如下所示：\n\n好了，到这里，你就了解了，redis 源码在更新键值对访问频率时，对于访问次数，它是先按照上次访问距离当前的时长，来对访问次数进行衰减。然后，再按照一定概率增加访问次数。这样的设计方法，就既包含了访问的时间段对访问频率的影响，也避免了 8 bits 计数器对访问次数的影响。而对于访问时间来说，redis 还会获取最新访问时间戳并更新到 lru 变量中。\n\n那么最后，我们再来看下 redis 是如何基于 lfu 算法淘汰数据的。\n\n\n# lfu 算法淘汰数据\n\n在实现使用 lfu 算法淘汰数据时，redis 是采用了和实现近似 lru 算法相同的方法。也就是说，redis 会使用一个全局数组 evictionpoollru，来保存待淘汰候选键值对集合。然后，在 processcommand 函数处理每个命令时，它会调用 freememoryifneededandsafe 函数和 freememoryifneeded 函数，来执行具体的数据淘汰流程。\n\n这个淘汰流程我在上篇文章已经给你介绍过了，你可以再去整体回顾下。这里，我也再简要总结下，也就是分成三个步骤：\n\n * 第一步，调用 getmaxmemorystate 函数计算待释放的内存空间；\n * 第二步，调用 evictionpoolpopulate 函数随机采样键值对，并插入到待淘汰集合 evictionpoollru 中；\n * 第三步，遍历待淘汰集合 evictionpoollru，选择实际被淘汰数据，并删除。\n\n虽然这个基本流程和 lru 算法相同，但是你要注意，lfu 算法在淘汰数据时，在第二步的 evictionpoolpopulate 函数中，使用了不同的方法来计算每个待淘汰键值对的空闲时间\n\n具体来说，在实现 lru 算法时，待淘汰候选键值对集合 evictionpoollru 中的每个元素，都使用成员变量 idle 来记录它距离上次访问的空闲时间。\n\n而当实现 lfu 算法时，因为 lfu 算法会对访问次数进行衰减和按概率增加，所以，它是使用访问次数来近似表示访问频率的。相应的，lfu 算法其实是用 255 减去键值对的访问次数，这样来计算 evictionpoollru 数组中每个元素的 idle 变量值的。而且，在计算 idle 变量值前，lfu 算法还会调用 lfudecrandreturn 函数，衰减一次键值对的访问次数，以便能更加准确地反映实际选择待淘汰数据时，数据的访问频率。\n\n下面的代码展示了 lfu 算法计算 idle 变量值的过程，你可以看下。\n\nif (server.maxmemory_policy & maxmemory_flag_lru) {\n    idle = estimateobjectidletime(o);\n} else if (server.maxmemory_policy & maxmemory_flag_lfu) {\n    idle = 255-lfudecrandreturn(o);\n}\n\n\n所以说，当 lfu 算法按照访问频率，计算了待淘汰键值对集合中每个元素的 idle 值后，键值对访问次数越大，它的 idle 值就越小，反之 idle 值越大。而 evictionpoollru 数组中的元素，是按 idle 值从小到大来排序的。最后当 freememoryifneeded 函数按照 idle 值从大到小，遍历 evictionpoollru 数组，选择实际被淘汰的键值对时，它就能选出访问次数小的键值对了，也就是把访问频率低的键值对淘汰出去。\n\n这样，redis 就完成了按访问频率来淘汰数据的操作了。\n\n\n# 总结\n\n 1. lfu 是在 redis 4.0 新增的淘汰策略，它涉及的巧妙之处在于，其复用了 redisobject 结构的 lru 字段，把这个字段「一分为二」，高16位保存最后访问时间和低8位保存访问次数\n 2. key 的访问次数不能只增不减，它需要根据时间间隔来做衰减，才能达到 lfu 的目的\n 3. 每次在访问一个 key 时，会**「懒惰」**更新这个 key 的访问次数：先衰减访问次数，再更新访问次数\n 4. 衰减访问次数，会根据时间间隔计算，间隔时间越久，衰减越厉害\n 5. 因为 redisobject lru 字段宽度限制，这个访问次数是有上限的（8 bit 最大值 255），所以递增访问次数时，会根据「当前」访问次数和「概率」的方式做递增，访问次数越大，递增因子越大，递增概率越低\n 6. redis 实现的 lfu 算法也是**「近似」**lfu，是在性能和内存方面平衡的结果",charsets:{cjk:!0},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"LRU 算法",frontmatter:{title:"LRU 算法",date:"2024-09-14T16:39:57.000Z",permalink:"/pages/87589a"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/04.LRU.html",relativePath:"01.系统设计算法/01.系统设计算法/04.LRU.md",key:"v-be411e82",path:"/pages/87589a/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:2},{level:2,title:"基于 HashMap 和 双向链表 实现 LRU",slug:"基于-hashmap-和-双向链表-实现-lru",normalizedTitle:"基于 hashmap 和 双向链表 实现 lru",charIndex:427},{level:2,title:"Redis 如何实现 LRU",slug:"redis-如何实现-lru",normalizedTitle:"redis 如何实现 lru",charIndex:2875},{level:3,title:"一些点子",slug:"一些点子",normalizedTitle:"一些点子",charIndex:2894},{level:3,title:"如何实现",slug:"如何实现",normalizedTitle:"如何实现",charIndex:2881},{level:3,title:"全局 LRU 时钟值的计算",slug:"全局-lru-时钟值的计算",normalizedTitle:"全局 lru 时钟值的计算",charIndex:3985},{level:3,title:"键值对 LRU 时钟值的初始化与更新",slug:"键值对-lru-时钟值的初始化与更新",normalizedTitle:"键值对 lru 时钟值的初始化与更新",charIndex:4065},{level:3,title:"近似 LRU 算法的实际执行",slug:"近似-lru-算法的实际执行",normalizedTitle:"近似 lru 算法的实际执行",charIndex:4135},{level:4,title:"何时触发算法执行？",slug:"何时触发算法执行",normalizedTitle:"何时触发算法执行？",charIndex:10069},{level:4,title:"近似 LRU 算法具体如何执行？",slug:"近似-lru-算法具体如何执行",normalizedTitle:"近似 lru 算法具体如何执行？",charIndex:11265},{level:5,title:"判断当前内存使用情况",slug:"判断当前内存使用情况",normalizedTitle:"判断当前内存使用情况",charIndex:11312},{level:5,title:"更新待淘汰的候选键值对集合",slug:"更新待淘汰的候选键值对集合",normalizedTitle:"更新待淘汰的候选键值对集合",charIndex:11326},{level:5,title:"选择被淘汰的键值对并删除",slug:"选择被淘汰的键值对并删除",normalizedTitle:"选择被淘汰的键值对并删除",charIndex:11343},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:19982}],headersStr:"简介 基于 HashMap 和 双向链表 实现 LRU Redis 如何实现 LRU 一些点子 如何实现 全局 LRU 时钟值的计算 键值对 LRU 时钟值的初始化与更新 近似 LRU 算法的实际执行 何时触发算法执行？ 近似 LRU 算法具体如何执行？ 判断当前内存使用情况 更新待淘汰的候选键值对集合 选择被淘汰的键值对并删除 总结",content:"# 简介\n\nLRU 是 Least Recently Used 的缩写，即最近最少使用置换算法，最经典的场景是作为虚拟页式存储管理服务的，是根据页面调入内存后的使用情况进行决策了。由于无法预测各页面将来的使用情况，只能利用“最近的过去”作为“最近的将来”的近似，因此，LRU算法就是将最近最久未使用的页面予以淘汰。\n\n操作系统课程里有学过，在内存不够的场景下，淘汰旧内容的策略。LRU … Least Recent Used，淘汰掉最不经常使用的。可以稍微多补充两句，因为计算机体系结构中，最大的最可靠的存储是硬盘，它容量很大，并且内容可以固化，但是访问速度很慢，所以需要把使用的内容载入内存中；内存速度很快，但是容量有限，并且断电后内容会丢失，并且为了进一步提升性能，还有CPU内部的 L1 Cache，L2 Cache等概念。因为速度越快的地方，它的单位成本越高，容量越小，新的内容不断被载入，旧的内容肯定要被淘汰，所以就有这样的使用背景。\n\n\n# 基于 HashMap 和 双向链表 实现 LRU\n\n146. LRU 缓存 - 力扣（LeetCode）\n\npublic class LRUCache {\n    class DLinkedNode {\n        int key;\n        int value;\n        DLinkedNode prev;\n        DLinkedNode next;\n        public DLinkedNode() {}\n        public DLinkedNode(int _key, int _value) {key = _key; value = _value;}\n    }\n\n    private Map<Integer, DLinkedNode> cache = new HashMap<Integer, DLinkedNode>();\n    private int size;\n    private int capacity;\n    private DLinkedNode head, tail;\n\n    public LRUCache(int capacity) {\n        this.size = 0;\n        this.capacity = capacity;\n        // 使用伪头部和伪尾部节点\n        head = new DLinkedNode();\n        tail = new DLinkedNode();\n        head.next = tail;\n        tail.prev = head;\n    }\n\n    public int get(int key) {\n        DLinkedNode node = cache.get(key);\n        if (node == null) {\n            return -1;\n        }\n        // 如果 key 存在，先通过哈希表定位，再移到头部\n        moveToHead(node);\n        return node.value;\n    }\n\n    public void put(int key, int value) {\n        DLinkedNode node = cache.get(key);\n        if (node == null) {\n            // 如果 key 不存在，创建一个新的节点\n            DLinkedNode newNode = new DLinkedNode(key, value);\n            // 添加进哈希表\n            cache.put(key, newNode);\n            // 添加至双向链表的头部\n            addToHead(newNode);\n            ++size;\n            if (size > capacity) {\n                // 如果超出容量，删除双向链表的尾部节点\n                DLinkedNode tail = removeTail();\n                // 删除哈希表中对应的项\n                cache.remove(tail.key);\n                --size;\n            }\n        }\n        else {\n            // 如果 key 存在，先通过哈希表定位，再修改 value，并移到头部\n            node.value = value;\n            moveToHead(node);\n        }\n    }\n\n    private void addToHead(DLinkedNode node) {\n        node.prev = head;\n        node.next = head.next;\n        head.next.prev = node;\n        head.next = node;\n    }\n\n    private void removeNode(DLinkedNode node) {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n    }\n\n    private void moveToHead(DLinkedNode node) {\n        removeNode(node);\n        addToHead(node);\n    }\n\n    private DLinkedNode removeTail() {\n        DLinkedNode res = tail.prev;\n        removeNode(res);\n        return res;\n    }\n}\n\n\nLRU 算法的执行，可以分成三种情况来掌握\n\n * 当有新数据插入时，LRU 算法会把该数据插入到链表头部，同时把原来链表头部的数据及其之后的数据，都向尾部移动一位。\n * 当有数据刚被访问了一次之后，LRU 算法就会把该数据从它在链表中的当前位置，移动到链表头部。同时，把从链表头部到它当前位置的其他数据，都向尾部移动一位。\n * 情况三：当链表长度无法再容纳更多数据时，若再有新数据插入，LRU 算法就会去除链表尾部的数据，这也相当于将数据从缓存中淘汰掉。\n\n\n# Redis 如何实现 LRU\n\n\n# 一些点子\n\n最直观的想法：LRU啊，记录下每个key 最近一次的访问时间（比如unix timestamp），unix timestamp最小的Key，就是最近未使用的，把这个Key移除。看下来一个HashMap就能搞定啊。是的，但是首先需要存储每个Key和它的timestamp。其次，还要比较timestamp得出最小值。代价很大，不现实啊。\n\n第二种方法：换个角度，不记录具体的访问时间点(unix timestamp)，而是记录idle time：idle time越小，意味着是最近被访问的。\n\n> The LRU algorithm evicts the Least Recently Used key, which means the one with the greatest idle time.\n\n\n\n比如A、B、C、D四个Key，A每5s访问一次，B每2s访问一次，C和D每10s访问一次。（一个波浪号代表1s），从上图中可看出：A的空闲时间是2s，B的idle time是1s，C的idle time是5s，D刚刚访问了所以idle time是0s\n\n这里，用一个双向链表(linkedlist)把所有的Key链表起来，如果一个Key被访问了，将就这个Key移到链表的表头，而要移除Key时，直接从表尾移除。\n\n你其实可以发现，如果要严格按照 LRU 算法的基本原理来实现的话，你需要在代码中实现如下内容：\n\n * 要为 Redis 使用最大内存时，可容纳的所有数据维护一个链表；\n * 每当有新数据插入或是现有数据被再次访问时，需要执行多次链表操作。\n\n而假设 Redis 保存的数据比较多的话，那么，这两部分的代码实现，就既需要额外的内存空间来保存链表，还会在访问数据的过程中，让 Redis 受到数据移动和链表操作的开销影响，从而就会降低 Redis 访问性能。\n\n\n# 如何实现\n\n这和 Redis 配置文件 redis.conf 中的两个配置参数有关：\n\n * maxmemory，该配置项设定了 Redis server 可以使用的最大内存容量，一旦 server 使用的实际内存量超出该阈值时，server 就会根据 maxmemory-policy 配置项定义的策略，执行内存淘汰操作；\n * maxmemory-policy，该配置项设定了 Redis server 的内存淘汰策略，主要包括近似 LRU 算法、LFU 算法、按 TTL 值淘汰和随机淘汰等几种算法。\n\n我们把 Redis 对近似 LRU 算法的实现分成三个部分。\n\n * 全局 LRU 时钟值的计算：这部分包括，Redis 源码为了实现近似 LRU 算法的效果，是如何计算全局 LRU 时钟值的，以用来判断数据访问的时效性；\n * 键值对 LRU 时钟值的初始化与更新：这部分包括，Redis 源码在哪些函数中对每个键值对对应的 LRU 时钟值，进行初始化与更新；\n * 近似 LRU 算法的实际执行：这部分包括，Redis 源码具体如何执行近似 LRU 算法，也就是何时触发数据淘汰，以及实际淘汰的机制是怎么实现的。\n\n\n# 全局 LRU 时钟值的计算\n\n虽然 Redis 使用了近似 LRU 算法，但是，这个算法仍然需要区分不同数据的访问时效性，也就是说，Redis 需要知道数据的最近一次访问时间。因此，Redis 就设计了 LRU 时钟来记录数据每次访问的时间戳。\n\n我们在前面中已经了解到，Redis 在源码中对于每个键值对中的值，会使用一个 redisObject 结构体来保存指向值的指针。那么，redisObject 结构体除了记录值的指针以外，它其实还会使用 24 bits 来保存 LRU 时钟信息，对应的是 lru 成员变量。所以这样一来，每个键值对都会把它最近一次被访问的时间戳，记录在 lru 变量当中。\n\ntypedef struct redisObject {\n    unsigned type:4;\n    unsigned encoding:4;\n    unsigned lru:LRU_BITS;  //记录LRU信息，宏定义LRU_BITS是24 bits\n    int refcount;\n    void *ptr;\n} robj;\n\n\n那么，每个键值对的 LRU 时钟值具体是如何计算的呢？其实，Redis server 使用了一个实例级别的全局 LRU 时钟，每个键值对的 LRU 时钟值会根据全局 LRU 时钟进行设置。\n\n这个全局 LRU 时钟保存在了 Redis 全局变量 server 的成员变量 lruclock 中。当 Redis server 启动后，调用 initServerConfig 函数初始化各项参数时，就会对这个全局 LRU 时钟 lruclock 进行设置。具体来说，initServerConfig 函数是调用 getLRUClock 函数，来设置 lruclock 的值，如下所示：\n\n// 调用getLRUClock函数计算全局LRU时钟值\nunsigned int lruclock = getLRUClock();\n//设置lruclock为刚计算的LRU时钟值\natomicSet(server.lruclock,lruclock);\n\n\n所以，全局 LRU 时钟值就是通过 getLRUClock 函数计算得到的。\n\ngetLRUClock 函数是在evict.c文件中实现的，它会调用 mstime 函数（在server.c文件中）获得以毫秒为单位计算的 UNIX 时间戳，然后将这个 UNIX 时间戳除以宏定义 LRU_CLOCK_RESOLUTION。宏定义 LRU_CLOCK_RESOLUTION 是在 server.h 文件中定义的，它表示的是以毫秒为单位的 LRU 时钟精度，也就是以毫秒为单位来表示的 LRU 时钟最小单位。\n\n因为 LRU_CLOCK_RESOLUTION 的默认值是 1000，所以，LRU 时钟精度就是 1000 毫秒，也就是 1 秒。\n\n这样一来，你需要注意的就是，如果一个数据前后两次访问的时间间隔小于 1 秒，那么这两次访问的时间戳就是一样的。因为 LRU 时钟的精度就是 1 秒，它无法区分间隔小于 1 秒的不同时间戳。\n\n了解了宏定义 LRU_CLOCK_RESOLUTION 的含义之后，我们再来看下 getLRUClock 函数中的计算。\n\n 1. 首先，getLRUClock 函数将获得的 UNIX 时间戳，除以 LRU_CLOCK_RESOLUTION 后，就得到了以 LRU 时钟精度来计算的 UNIX 时间戳，也就是当前的 LRU 时钟值。\n 2. 紧接着，getLRUClock 函数会把 LRU 时钟值和宏定义 LRU_CLOCK_MAX 做与运算，其中宏定义 LRU_CLOCK_MAX 表示的是 LRU 时钟能表示的最大值。\n\n/* Return the LRU clock, based on the clock resolution. This is a time\n * in a reduced-bits format that can be used to set and check the\n * object->lru field of redisObject structures. */\nunsigned int getLRUClock(void) {\n    return (mstime()/LRU_CLOCK_RESOLUTION) & LRU_CLOCK_MAX;\n}\n\n\n#define LRU_BITS 24\n#define LRU_CLOCK_MAX ((1<<LRU_BITS)-1) /* Max value of obj->lru */\n#define LRU_CLOCK_RESOLUTION 1000 /* LRU clock resolution in ms */\n\n\n所以现在，你就知道了在默认情况下，全局 LRU 时钟值是以 1 秒为精度来计算的 UNIX 时间戳，并且它是在 initServerConfig 函数中进行了初始化。那么接下来，你可能还会困惑的问题是：在 Redis server 的运行过程中，全局 LRU 时钟值是如何更新的呢？\n\n这就和 Redis server 在事件驱动框架中，定期运行的时间事件所对应的 serverCron 函数有关了。\n\nserverCron 函数作为时间事件的回调函数，本身会按照一定的频率周期性执行，其频率值是由 Redis 配置文件 redis.conf 中的 hz 配置项决定的。hz 配置项的默认值是 10，这表示 serverCron 函数会每 100 毫秒（1 秒 /10 = 100 毫秒）运行一次。\n\n这样，在 serverCron 函数中，全局 LRU 时钟值就会按照这个函数的执行频率，定期调用 getLRUClock 函数进行更新，如下所示：\n\nint serverCron(struct aeEventLoop *eventLoop, long long id, void *clientData) {\n    ...\n    unsigned int lruclock = getLRUClock(); //默认情况下，每100毫秒调用getLRUClock函数更新一次全局LRU时钟值\n    atomicSet(server.lruclock,lruclock); //设置lruclock变量\n    ...\n}\n\n\n所以这样一来，每个键值对就可以从全局 LRU 时钟获取最新的访问时间戳了。\n\n好，那么接下来，我们就来了解下，对于每个键值对来说，它对应的 redisObject 结构体中的 lru 变量，是在哪些函数中进行初始化和更新的。\n\n\n# 键值对 LRU 时钟值的初始化与更新\n\n首先，对于一个键值对来说，它的 LRU 时钟值最初是在这个键值对被创建的时候，进行初始化设置的，这个初始化操作是在 createObject 函数中调用的。createObject 函数实现在object.c文件当中，当 Redis 要创建一个键值对时，就会调用这个函数。\n\nrobj *createObject(int type, void *ptr) {\n    robj *o = zmalloc(sizeof(*o));\n    o->type = type;\n    o->encoding = OBJ_ENCODING_RAW;\n    o->ptr = ptr;\n    o->refcount = 1;\n\n    /* Set the LRU to the current lruclock (minutes resolution), or\n     * alternatively the LFU counter. */\n    if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n        o->lru = (LFUGetTimeInMinutes()<<8) | LFU_INIT_VAL;\n    } else {\n        o->lru = LRU_CLOCK();\n    }\n    return o;\n}\n\n\n而 createObject 函数除了会给 redisObject 结构体分配内存空间之外，它还会根据我刚才提到的 maxmemory_policy 配置项的值，来初始化设置 redisObject 结构体中的 lru 变量。\n\n具体来说，就是如果 maxmemory_policy 配置为使用 LFU 策略，那么 lru 变量值会被初始化设置为 LFU 算法的计算值。而如果 maxmemory_policy 配置项没有使用 LFU 策略，那么，createObject 函数就会调用 LRU_CLOCK 函数来设置 lru 变量的值，也就是键值对对应的 LRU 时钟值。\n\nLRU_CLOCK 函数是在 evict.c 文件中实现的，它的作用就是返回当前的全局 LRU 时钟值。因为一个键值对一旦被创建，也就相当于有了一次访问，所以它对应的 LRU 时钟值就表示了它的访问时间戳。\n\n/* This function is used to obtain the current LRU clock.\n * If the current resolution is lower than the frequency we refresh the\n * LRU clock (as it should be in production servers) we return the\n * precomputed value, otherwise we need to resort to a system call. */\nunsigned int LRU_CLOCK(void) {\n    unsigned int lruclock;\n    if (1000/server.hz <= LRU_CLOCK_RESOLUTION) {\n        atomicGet(server.lruclock,lruclock);\n    } else {\n        lruclock = getLRUClock();\n    }\n    return lruclock;\n}\n\n\n那么到这里，又出现了一个新的问题：一个键值对的 LRU 时钟值又是在什么时候被再次更新的呢？\n\n其实，只要一个键值对被访问了，它的 LRU 时钟值就会被更新。而当一个键值对被访问时，访问操作最终都会调用 lookupKey 函数。\n\nlookupKey 函数是在db.c文件中实现的，它会从全局哈希表中查找要访问的键值对。如果该键值对存在，那么 lookupKey 函数就会根据 maxmemory_policy 的配置值，来更新键值对的 LRU 时钟值，也就是它的访问时间戳。\n\n而当 maxmemory_policy 没有配置为 LFU 策略时，lookupKey 函数就会调用 LRU_CLOCK 函数，来获取当前的全局 LRU 时钟值，并将其赋值给键值对的 redisObject 结构体中的 lru 变量，如下所示：\n\n/* Low level key lookup API, not actually called directly from commands\n * implementations that should instead rely on lookupKeyRead(),\n * lookupKeyWrite() and lookupKeyReadWithFlags(). */\nrobj *lookupKey(redisDb *db, robj *key, int flags) {\n    dictEntry *de = dictFind(db->dict,key->ptr);\n    if (de) {\n        // 获取键值对对应的redisObject结构体\n        robj *val = dictGetVal(de);\n\n        /* Update the access time for the ageing algorithm.\n         * Don't do it if we have a saving child, as this will trigger\n         * a copy on write madness. */\n        if (!hasActiveChildProcess() && !(flags & LOOKUP_NOTOUCH)){\n            if (server.maxmemory_policy & MAXMEMORY_FLAG_LFU) {\n                // 如果使用了LFU策略，更新LFU计数值\n                updateLFU(val);\n            } else {\n                 // 否则，调用LRU_CLOCK函数获取全局LRU时钟值\n                val->lru = LRU_CLOCK();\n            }\n        }\n        return val;\n    } else {\n        return NULL;\n    }\n}\n\n\n这样一来，每个键值对一旦被访问，就能获得最新的访问时间戳了。不过现在，你可能要问了：这些访问时间戳最终是如何被用于近似 LRU 算法，来进行数据淘汰的呢？接下来，我们就来学习下近似 LRU 算法的实际执行过程。\n\n\n# 近似 LRU 算法的实际执行\n\n现在我们已经知道，Redis 之所以实现近似 LRU 算法的目的，是为了减少内存资源和操作时间上的开销。那么在这里，我们其实可以从两个方面来了解近似 LRU 算法的执行过程，分别是：\n\n * 何时触发算法执行？\n * 算法具体如何执行？\n\n# 何时触发算法执行？\n\n首先，近似 LRU 算法的主要逻辑是在 freeMemoryIfNeeded 函数中实现的，而这个函数本身是在 evict.c 文件中实现。\n\nfreeMemoryIfNeeded 函数是被 freeMemoryIfNeededAndSafe 函数（在 evict.c 文件中）调用，而 freeMemoryIfNeededAndSafe 函数又是被 processCommand 函数所调用的。你可以参考下面的图，展示了这三者的调用关系。\n\n\n\n所以，我们看到 processCommand 函数，就应该知道这个函数是 Redis 处理每个命令时都会被调用的。\n\n那么，processCommand 函数在执行的时候，实际上会根据两个条件来判断是否调用 freeMemoryIfNeededAndSafe 函数。\n\n * 条件一：设置了 maxmemory 配置项为非 0 值。\n * 条件二：Lua 脚本没有在超时运行。\n\n如果这两个条件成立，那么 processCommand 函数就会调用 freeMemoryIfNeededAndSafe 函数，如下所示：\n\nif (server.maxmemory && !server.lua_timedout) {\n        int out_of_memory = freeMemoryIfNeededAndSafe() == C_ERR;\n\n\n也就是说，只有在这两个条件都不成立的情况下，freeMemoryIfNeeded 函数才会被调用。下面的代码展示了 freeMemoryIfNeededAndSafe 函数的执行逻辑，你可以看下。\n\n * 条件一：Lua 脚本在超时运行。\n * 条件二：Redis server 正在加载数据。\n\n也就是说，只有在这两个条件都不成立的情况下，freeMemoryIfNeeded 函数才会被调用。下面的代码展示了 freeMemoryIfNeededAndSafe 函数的执行逻辑，你可以看下。\n\nint freeMemoryIfNeededAndSafe(void) {\n    if (server.lua_timedout || server.loading) return C_OK;\n    return freeMemoryIfNeeded();\n}\n\n\n这样，一旦 freeMemoryIfNeeded 函数被调用了，并且 maxmemory-policy 被设置为了 allkeys-lru 或 volatile-lru，那么近似 LRU 算法就开始被触发执行了。接下来，我们就来看下近似 LRU 算法具体是如何执行的，也就是来了解 freeMemoryIfNeeded 函数的主要执行流程。\n\n# 近似 LRU 算法具体如何执行？\n\n近似 LRU 算法的执行可以分成三大步骤，分别是\n\n * 判断当前内存使用情况\n * 更新待淘汰的候选键值对集合\n * 选择被淘汰的键值对并删除\n\n下面我们就依次来看下。\n\n# 判断当前内存使用情况\n\n * 首先，freeMemoryIfNeeded 函数会调用 getMaxmemoryState 函数，评估当前的内存使用情况。getMaxmemoryState 函数是在 evict.c 文件中实现的，它会判断当前 Redis server 使用的内存容量是否超过了 maxmemory 配置的值。\n * 如果当前内存使用量没有超过 maxmemory，那么，getMaxmemoryState 函数会返回 C_OK，紧接着，freeMemoryIfNeeded 函数也会直接返回了。\n\nint freeMemoryIfNeeded(void) {\n    ...\n    if (getMaxmemoryState(&mem_reported,NULL,&mem_tofree,NULL) == C_OK)\n            return C_OK;\n    ...\n}\n\n\n这里，你需要注意的是，getMaxmemoryState 函数在评估当前内存使用情况的时候，如果发现已用内存超出了 maxmemory，它就会计算需要释放的内存量。这个释放的内存大小等于已使用的内存量减去 maxmemory。不过，已使用的内存量并不包括用于主从复制的复制缓冲区大小，这是 getMaxmemoryState 函数，通过调用 freeMemoryGetNotCountedMemory 函数来计算的。\n\n/* Get the memory status from the point of view of the maxmemory directive:\n * if the memory used is under the maxmemory setting then C_OK is returned.\n * Otherwise, if we are over the memory limit, the function returns\n * C_ERR.\n *\n * The function may return additional info via reference, only if the\n * pointers to the respective arguments is not NULL. Certain fields are\n * populated only when C_ERR is returned:\n *\n *  'total'     total amount of bytes used.\n *              (Populated both for C_ERR and C_OK)\n *\n *  'logical'   the amount of memory used minus the slaves/AOF buffers.\n *              (Populated when C_ERR is returned)\n *\n *  'tofree'    the amount of memory that should be released\n *              in order to return back into the memory limits.\n *              (Populated when C_ERR is returned)\n *\n *  'level'     this usually ranges from 0 to 1, and reports the amount of\n *              memory currently used. May be > 1 if we are over the memory\n *              limit.\n *              (Populated both for C_ERR and C_OK)\n */\nint getMaxmemoryState(size_t *total, size_t *logical, size_t *tofree, float *level) {\n    size_t mem_reported, mem_used, mem_tofree;\n\n    /* Check if we are over the memory usage limit. If we are not, no need\n     * to subtract the slaves output buffers. We can just return ASAP. */\n    // 计算已使用的内存量\n    mem_reported = zmalloc_used_memory();\n    if (total) *total = mem_reported;\n\n    /* We may return ASAP if there is no need to compute the level. */\n    int return_ok_asap = !server.maxmemory || mem_reported <= server.maxmemory;\n    if (return_ok_asap && !level) return C_OK;\n\n    /* Remove the size of slaves output buffers and AOF buffer from the\n     * count of used memory. */\n    // 将用于主从复制的复制缓冲区大小和AOF缓冲区大小从已使用内存量中扣除\n    mem_used = mem_reported;\n    size_t overhead = freeMemoryGetNotCountedMemory();\n    mem_used = (mem_used > overhead) ? mem_used-overhead : 0;\n\n\n    /* Compute the ratio of memory usage. */\n    // 计算内存使用率。\n    if (level) {\n        if (!server.maxmemory) {\n            *level = 0;\n        } else {\n            *level = (float)mem_used / (float)server.maxmemory;\n        }\n    }\n\n    if (return_ok_asap) return C_OK;\n\n    /* Check if we are still over the memory limit. */\n    // 检查我们是否仍然超过内存限制。\n    if (mem_used <= server.maxmemory) return C_OK;\n\n    // 计算需要释放的内存量\n    /* Compute how much memory we need to free. */\n    mem_tofree = mem_used - server.maxmemory;\n\n    if (logical) *logical = mem_used;\n    if (tofree) *tofree = mem_tofree;\n\n    return C_ERR;\n}\n\n\n而如果当前 server 使用的内存量，的确已经超出 maxmemory 的上限了，那么 freeMemoryIfNeeded 函数就会执行一个 while 循环，来淘汰数据释放内存。\n\n其实，为了淘汰数据，Redis 定义了一个数组 EvictionPoolLRU，用来保存待淘汰的候选键值对。这个数组的元素类型是 evictionPoolEntry 结构体，该结构体保存了待淘汰键值对的空闲时间 idle、对应的 key 等信息。以下代码展示了 EvictionPoolLRU 数组和 evictionPoolEntry 结构体，它们都是在 evict.c 文件中定义的。\n\nstruct evictionPoolEntry {\n    // 待淘汰的键值对的空闲时间\n    unsigned long long idle;    /* Object idle time (inverse frequency for LFU) */\n    // 待淘汰的键值对的key\n    sds key;                    /* Key name. */\n    // 缓存的SDS对象\n    sds cached;                 /* Cached SDS object for key name. */\n    // 待淘汰键值对的key所在的数据库ID\n    int dbid;                   /* Key DB number. */\n};\n\nstatic struct evictionPoolEntry *EvictionPoolLRU;\n\n\n这样，Redis server 在执行 initSever 函数进行初始化时，会调用 evictionPoolAlloc 函数（在 evict.c 文件中）为 EvictionPoolLRU 数组分配内存空间，该数组的大小由宏定义 EVPOOL_SIZE（在 evict.c 文件中）决定，默认是 16 个元素，也就是可以保存 16 个待淘汰的候选键值对。\n\n#define EVPOOL_SIZE 16\n\n/* Create a new eviction pool. */\nvoid evictionPoolAlloc(void) {\n    struct evictionPoolEntry *ep;\n    int j;\n\n    ep = zmalloc(sizeof(*ep)*EVPOOL_SIZE);\n    for (j = 0; j < EVPOOL_SIZE; j++) {\n        ep[j].idle = 0;\n        ep[j].key = NULL;\n        ep[j].cached = sdsnewlen(NULL,EVPOOL_CACHED_SDS_SIZE);\n        ep[j].dbid = 0;\n    }\n    EvictionPoolLRU = ep;\n}\n\n\n那么，freeMemoryIfNeeded 函数在淘汰数据的循环流程中，就会更新这个待淘汰的候选键值对集合，也就是 EvictionPoolLRU 数组。下面我就来给你具体介绍一下。\n\n# 更新待淘汰的候选键值对集合\n\n首先，freeMemoryIfNeeded 函数会调用 evictionPoolPopulate 函数（在 evict.c 文件中），而 evictionPoolPopulate 函数会先调用 dictGetSomeKeys 函数（在 dict.c 文件中），从待采样的哈希表中随机获取一定数量的 key。不过，这里还有两个地方你需要注意下。\n\n第一点，dictGetSomeKeys 函数采样的哈希表，是由 maxmemory_policy 配置项来决定的。如果 maxmemory_policy 配置的是 allkeys_lru，那么待采样哈希表就是 Redis server 的全局哈希表，也就是在所有键值对中进行采样；否则，待采样哈希表就是保存着设置了过期时间的 key 的哈希表。\n\n以下代码是 freeMemoryIfNeeded 函数中对 evictionPoolPopulate 函数的调用过程，你可以看下。\n\n/* We don't want to make local-db choices when expiring keys,\n * so to start populate the eviction pool sampling keys from\n * every DB. */\nfor (i = 0; i < server.dbnum; i++) {\n    // 对Redis server上的每一个数据库都执行\n    db = server.db+i;\n    // 根据淘汰策略，决定使用全局哈希表还是设置了过期时间的key的哈希表\n    dict = (server.maxmemory_policy & MAXMEMORY_FLAG_ALLKEYS) ?\n            db->dict : db->expires;\n    // 将选择的哈希表dict传入evictionPoolPopulate函数，同时将全局哈希表也传给evictionPoolPopulate函数\n    if ((keys = dictSize(dict)) != 0) {\n        evictionPoolPopulate(i, dict, db->dict, pool);\n        total_keys += keys;\n    }\n}\n\n\n第二点，dictGetSomeKeys 函数采样的 key 的数量，是由 redis.conf 中的配置项 maxmemory-samples 决定的，该配置项的默认值是 5。下面代码就展示了 evictionPoolPopulate 函数对 dictGetSomeKeys 函数的调用：\n\nvoid evictionPoolPopulate(int dbid, dict *sampledict, dict *keydict, struct evictionPoolEntry *pool) {\n    ...\n    dictEntry *samples[server.maxmemory_samples];  //采样后的集合，大小为maxmemory_samples\n    //将待采样的哈希表sampledict、采样后的集合samples、以及采样数量maxmemory_samples，作为参数传给dictGetSomeKeys\n    count = dictGetSomeKeys(sampledict,samples,server.maxmemory_samples);\n    ...\n}\n\n\n如此一来，dictGetSomeKeys 函数就能返回采样的键值对集合了。然后，evictionPoolPopulate 函数会根据实际采样到的键值对数量 count，执行一个循环。\n\nfor (j = 0; j < count; j++) {\n...\nif (server.maxmemory_policy & MAXMEMORY_FLAG_LRU) {\n            idle = estimateObjectIdleTime(o);\n}\n...\n\n\n紧接着，evictionPoolPopulate 函数会遍历待淘汰的候选键值对集合，也就是 EvictionPoolLRU 数组。在遍历过程中，它会尝试把采样的每一个键值对插入 EvictionPoolLRU 数组，这主要取决于以下两个条件之一：\n\n * 一是，它能在数组中找到一个尚未插入键值对的空位；\n * 二是，它能在数组中找到一个空闲时间小于采样键值对空闲时间的键值对\n\n这两个条件有一个成立的话，evictionPoolPopulate 函数就可以把采样键值对插入 EvictionPoolLRU 数组。等所有采样键值对都处理完后，evictionPoolPopulate 函数就完成对待淘汰候选键值对集合的更新了。\n\n接下来，freeMemoryIfNeeded 函数，就可以开始选择最终被淘汰的键值对了。\n\n# 选择被淘汰的键值对并删除\n\n因为 evictionPoolPopulate 函数已经更新了 EvictionPoolLRU 数组，而且这个数组里面的 key，是按照空闲时间从小到大排好序了。所以，freeMemoryIfNeeded 函数会遍历一次 EvictionPoolLRU 数组，从数组的最后一个 key 开始选择，如果选到的 key 不是空值，那么就把它作为最终淘汰的 key。\n\n// 从数组最后一个key开始查找\n/* Go backward from best to worst element to evict. */\nfor (k = EVPOOL_SIZE-1; k >= 0; k--) {\n    // 当前key为空值，则查找下一个key\n    if (pool[k].key == NULL) continue;\n    bestdbid = pool[k].dbid;\n    // 从全局哈希表或是expire哈希表中，获取当前key对应的键值对；并将当前key从EvictionPoolLRU数组删除\n    if (server.maxmemory_policy & MAXMEMORY_FLAG_ALLKEYS) {\n        de = dictFind(server.db[pool[k].dbid].dict,\n            pool[k].key);\n    } else {\n        de = dictFind(server.db[pool[k].dbid].expires,\n            pool[k].key);\n    }\n\n    /* Remove the entry from the pool. */\n    if (pool[k].key != pool[k].cached)\n        sdsfree(pool[k].key);\n    pool[k].key = NULL;\n    pool[k].idle = 0;\n\n    /* If the key exists, is our pick. Otherwise it is\n     * a ghost and we need to try the next element. */\n    // 如果当前key对应的键值对不为空，选择当前key为被淘汰的key\n    if (de) {\n        bestkey = dictGetKey(de);\n        break;\n    } else {\n        //否则，继续查找下个key\n        /* Ghost... Iterate again. */\n    }\n}\n\n\n最后，一旦选到了被淘汰的 key，freeMemoryIfNeeded 函数就会根据 Redis server 的惰性删除配置，来执行同步删除或异步删除，如下所示：\n\nif (bestkey) {\n    db = server.db+bestdbid;\n    robj *keyobj = createStringObject(bestkey,sdslen(bestkey));        //将删除key的信息传递给从库和AOF文件\n    propagateExpire(db,keyobj,server.lazyfree_lazy_eviction);\n    //如果配置了惰性删除，则进行异步删除\n    if (server.lazyfree_lazy_eviction)\n    \tdbAsyncDelete(db,keyobj);\n    else  //否则进行同步删除\n    \tdbSyncDelete(db,keyobj);\n}\n\n\n好了，到这里，freeMemoryIfNeeded 函数就淘汰了一个 key。而如果此时，释放的内存空间还不够，也就是说没有达到我前面介绍的待释放空间，那么 freeMemoryIfNeeded 函数还会重复执行前面所说的更新待淘汰候选键值对集合、选择最终淘汰 key 的过程，直到满足待释放空间的大小要求。\n\n下图就展示了 freeMemoryIfNeeded 函数涉及的基本流程，你可以再来整体回顾下。\n\n\n\n其实，从刚才介绍的内容中，你就可以看到，近似 LRU 算法并没有使用耗时耗空间的链表，而是使用了固定大小的待淘汰数据集合，每次随机选择一些 key 加入待淘汰数据集合中。最后，再按照待淘汰集合中 key 的空闲时间长度，删除空闲时间最长的 key。这样一来，Redis 就近似实现了 LRU 算法的效果了。\n\n\n# 总结\n\n你现在应该知道了 Redis 是如何实现 LRU 算法来进行缓存数据替换的。其中，我们根据 LRU 算法的基本原理，可以发现如果严格按照原理来实现 LRU 算法，那么开发的系统就需要用额外的内存空间来保存 LRU 链表，而且系统运行时也会受到 LRU 链表操作的开销影响。\n\n而对于 Redis 来说，内存资源和性能都很重要，所以 Redis 实现了近似 LRU 算法。而为了实现近似 LRU 算法，Redis 首先是设置了全局 LRU 时钟，并在键值对创建时获取全局 LRU 时钟值作为访问时间戳，以及在每次访问时获取全局 LRU 时钟值，更新访问时间戳。\n\n然后，当 Redis 每处理一个命令时，都会调用 freeMemoryIfNeeded 函数来判断是否需要释放内存。如果已使用内存超出了 maxmemory，那么，近似 LRU 算法就会随机选择一些键值对，组成待淘汰候选集合，并根据它们的访问时间戳，选出最旧的数据，将其淘汰。\n\nRedis 计算实例内存时，不会把「主从复制」的缓冲区计算在内，也就是说不管一个实例后面挂了多少个从库，主库不会把主从复制所需的「缓冲区」内存，计算到实例内存中，即这部分内存增加，不会对数据淘汰产生影响。",normalizedContent:"# 简介\n\nlru 是 least recently used 的缩写，即最近最少使用置换算法，最经典的场景是作为虚拟页式存储管理服务的，是根据页面调入内存后的使用情况进行决策了。由于无法预测各页面将来的使用情况，只能利用“最近的过去”作为“最近的将来”的近似，因此，lru算法就是将最近最久未使用的页面予以淘汰。\n\n操作系统课程里有学过，在内存不够的场景下，淘汰旧内容的策略。lru … least recent used，淘汰掉最不经常使用的。可以稍微多补充两句，因为计算机体系结构中，最大的最可靠的存储是硬盘，它容量很大，并且内容可以固化，但是访问速度很慢，所以需要把使用的内容载入内存中；内存速度很快，但是容量有限，并且断电后内容会丢失，并且为了进一步提升性能，还有cpu内部的 l1 cache，l2 cache等概念。因为速度越快的地方，它的单位成本越高，容量越小，新的内容不断被载入，旧的内容肯定要被淘汰，所以就有这样的使用背景。\n\n\n# 基于 hashmap 和 双向链表 实现 lru\n\n146. lru 缓存 - 力扣（leetcode）\n\npublic class lrucache {\n    class dlinkednode {\n        int key;\n        int value;\n        dlinkednode prev;\n        dlinkednode next;\n        public dlinkednode() {}\n        public dlinkednode(int _key, int _value) {key = _key; value = _value;}\n    }\n\n    private map<integer, dlinkednode> cache = new hashmap<integer, dlinkednode>();\n    private int size;\n    private int capacity;\n    private dlinkednode head, tail;\n\n    public lrucache(int capacity) {\n        this.size = 0;\n        this.capacity = capacity;\n        // 使用伪头部和伪尾部节点\n        head = new dlinkednode();\n        tail = new dlinkednode();\n        head.next = tail;\n        tail.prev = head;\n    }\n\n    public int get(int key) {\n        dlinkednode node = cache.get(key);\n        if (node == null) {\n            return -1;\n        }\n        // 如果 key 存在，先通过哈希表定位，再移到头部\n        movetohead(node);\n        return node.value;\n    }\n\n    public void put(int key, int value) {\n        dlinkednode node = cache.get(key);\n        if (node == null) {\n            // 如果 key 不存在，创建一个新的节点\n            dlinkednode newnode = new dlinkednode(key, value);\n            // 添加进哈希表\n            cache.put(key, newnode);\n            // 添加至双向链表的头部\n            addtohead(newnode);\n            ++size;\n            if (size > capacity) {\n                // 如果超出容量，删除双向链表的尾部节点\n                dlinkednode tail = removetail();\n                // 删除哈希表中对应的项\n                cache.remove(tail.key);\n                --size;\n            }\n        }\n        else {\n            // 如果 key 存在，先通过哈希表定位，再修改 value，并移到头部\n            node.value = value;\n            movetohead(node);\n        }\n    }\n\n    private void addtohead(dlinkednode node) {\n        node.prev = head;\n        node.next = head.next;\n        head.next.prev = node;\n        head.next = node;\n    }\n\n    private void removenode(dlinkednode node) {\n        node.prev.next = node.next;\n        node.next.prev = node.prev;\n    }\n\n    private void movetohead(dlinkednode node) {\n        removenode(node);\n        addtohead(node);\n    }\n\n    private dlinkednode removetail() {\n        dlinkednode res = tail.prev;\n        removenode(res);\n        return res;\n    }\n}\n\n\nlru 算法的执行，可以分成三种情况来掌握\n\n * 当有新数据插入时，lru 算法会把该数据插入到链表头部，同时把原来链表头部的数据及其之后的数据，都向尾部移动一位。\n * 当有数据刚被访问了一次之后，lru 算法就会把该数据从它在链表中的当前位置，移动到链表头部。同时，把从链表头部到它当前位置的其他数据，都向尾部移动一位。\n * 情况三：当链表长度无法再容纳更多数据时，若再有新数据插入，lru 算法就会去除链表尾部的数据，这也相当于将数据从缓存中淘汰掉。\n\n\n# redis 如何实现 lru\n\n\n# 一些点子\n\n最直观的想法：lru啊，记录下每个key 最近一次的访问时间（比如unix timestamp），unix timestamp最小的key，就是最近未使用的，把这个key移除。看下来一个hashmap就能搞定啊。是的，但是首先需要存储每个key和它的timestamp。其次，还要比较timestamp得出最小值。代价很大，不现实啊。\n\n第二种方法：换个角度，不记录具体的访问时间点(unix timestamp)，而是记录idle time：idle time越小，意味着是最近被访问的。\n\n> the lru algorithm evicts the least recently used key, which means the one with the greatest idle time.\n\n\n\n比如a、b、c、d四个key，a每5s访问一次，b每2s访问一次，c和d每10s访问一次。（一个波浪号代表1s），从上图中可看出：a的空闲时间是2s，b的idle time是1s，c的idle time是5s，d刚刚访问了所以idle time是0s\n\n这里，用一个双向链表(linkedlist)把所有的key链表起来，如果一个key被访问了，将就这个key移到链表的表头，而要移除key时，直接从表尾移除。\n\n你其实可以发现，如果要严格按照 lru 算法的基本原理来实现的话，你需要在代码中实现如下内容：\n\n * 要为 redis 使用最大内存时，可容纳的所有数据维护一个链表；\n * 每当有新数据插入或是现有数据被再次访问时，需要执行多次链表操作。\n\n而假设 redis 保存的数据比较多的话，那么，这两部分的代码实现，就既需要额外的内存空间来保存链表，还会在访问数据的过程中，让 redis 受到数据移动和链表操作的开销影响，从而就会降低 redis 访问性能。\n\n\n# 如何实现\n\n这和 redis 配置文件 redis.conf 中的两个配置参数有关：\n\n * maxmemory，该配置项设定了 redis server 可以使用的最大内存容量，一旦 server 使用的实际内存量超出该阈值时，server 就会根据 maxmemory-policy 配置项定义的策略，执行内存淘汰操作；\n * maxmemory-policy，该配置项设定了 redis server 的内存淘汰策略，主要包括近似 lru 算法、lfu 算法、按 ttl 值淘汰和随机淘汰等几种算法。\n\n我们把 redis 对近似 lru 算法的实现分成三个部分。\n\n * 全局 lru 时钟值的计算：这部分包括，redis 源码为了实现近似 lru 算法的效果，是如何计算全局 lru 时钟值的，以用来判断数据访问的时效性；\n * 键值对 lru 时钟值的初始化与更新：这部分包括，redis 源码在哪些函数中对每个键值对对应的 lru 时钟值，进行初始化与更新；\n * 近似 lru 算法的实际执行：这部分包括，redis 源码具体如何执行近似 lru 算法，也就是何时触发数据淘汰，以及实际淘汰的机制是怎么实现的。\n\n\n# 全局 lru 时钟值的计算\n\n虽然 redis 使用了近似 lru 算法，但是，这个算法仍然需要区分不同数据的访问时效性，也就是说，redis 需要知道数据的最近一次访问时间。因此，redis 就设计了 lru 时钟来记录数据每次访问的时间戳。\n\n我们在前面中已经了解到，redis 在源码中对于每个键值对中的值，会使用一个 redisobject 结构体来保存指向值的指针。那么，redisobject 结构体除了记录值的指针以外，它其实还会使用 24 bits 来保存 lru 时钟信息，对应的是 lru 成员变量。所以这样一来，每个键值对都会把它最近一次被访问的时间戳，记录在 lru 变量当中。\n\ntypedef struct redisobject {\n    unsigned type:4;\n    unsigned encoding:4;\n    unsigned lru:lru_bits;  //记录lru信息，宏定义lru_bits是24 bits\n    int refcount;\n    void *ptr;\n} robj;\n\n\n那么，每个键值对的 lru 时钟值具体是如何计算的呢？其实，redis server 使用了一个实例级别的全局 lru 时钟，每个键值对的 lru 时钟值会根据全局 lru 时钟进行设置。\n\n这个全局 lru 时钟保存在了 redis 全局变量 server 的成员变量 lruclock 中。当 redis server 启动后，调用 initserverconfig 函数初始化各项参数时，就会对这个全局 lru 时钟 lruclock 进行设置。具体来说，initserverconfig 函数是调用 getlruclock 函数，来设置 lruclock 的值，如下所示：\n\n// 调用getlruclock函数计算全局lru时钟值\nunsigned int lruclock = getlruclock();\n//设置lruclock为刚计算的lru时钟值\natomicset(server.lruclock,lruclock);\n\n\n所以，全局 lru 时钟值就是通过 getlruclock 函数计算得到的。\n\ngetlruclock 函数是在evict.c文件中实现的，它会调用 mstime 函数（在server.c文件中）获得以毫秒为单位计算的 unix 时间戳，然后将这个 unix 时间戳除以宏定义 lru_clock_resolution。宏定义 lru_clock_resolution 是在 server.h 文件中定义的，它表示的是以毫秒为单位的 lru 时钟精度，也就是以毫秒为单位来表示的 lru 时钟最小单位。\n\n因为 lru_clock_resolution 的默认值是 1000，所以，lru 时钟精度就是 1000 毫秒，也就是 1 秒。\n\n这样一来，你需要注意的就是，如果一个数据前后两次访问的时间间隔小于 1 秒，那么这两次访问的时间戳就是一样的。因为 lru 时钟的精度就是 1 秒，它无法区分间隔小于 1 秒的不同时间戳。\n\n了解了宏定义 lru_clock_resolution 的含义之后，我们再来看下 getlruclock 函数中的计算。\n\n 1. 首先，getlruclock 函数将获得的 unix 时间戳，除以 lru_clock_resolution 后，就得到了以 lru 时钟精度来计算的 unix 时间戳，也就是当前的 lru 时钟值。\n 2. 紧接着，getlruclock 函数会把 lru 时钟值和宏定义 lru_clock_max 做与运算，其中宏定义 lru_clock_max 表示的是 lru 时钟能表示的最大值。\n\n/* return the lru clock, based on the clock resolution. this is a time\n * in a reduced-bits format that can be used to set and check the\n * object->lru field of redisobject structures. */\nunsigned int getlruclock(void) {\n    return (mstime()/lru_clock_resolution) & lru_clock_max;\n}\n\n\n#define lru_bits 24\n#define lru_clock_max ((1<<lru_bits)-1) /* max value of obj->lru */\n#define lru_clock_resolution 1000 /* lru clock resolution in ms */\n\n\n所以现在，你就知道了在默认情况下，全局 lru 时钟值是以 1 秒为精度来计算的 unix 时间戳，并且它是在 initserverconfig 函数中进行了初始化。那么接下来，你可能还会困惑的问题是：在 redis server 的运行过程中，全局 lru 时钟值是如何更新的呢？\n\n这就和 redis server 在事件驱动框架中，定期运行的时间事件所对应的 servercron 函数有关了。\n\nservercron 函数作为时间事件的回调函数，本身会按照一定的频率周期性执行，其频率值是由 redis 配置文件 redis.conf 中的 hz 配置项决定的。hz 配置项的默认值是 10，这表示 servercron 函数会每 100 毫秒（1 秒 /10 = 100 毫秒）运行一次。\n\n这样，在 servercron 函数中，全局 lru 时钟值就会按照这个函数的执行频率，定期调用 getlruclock 函数进行更新，如下所示：\n\nint servercron(struct aeeventloop *eventloop, long long id, void *clientdata) {\n    ...\n    unsigned int lruclock = getlruclock(); //默认情况下，每100毫秒调用getlruclock函数更新一次全局lru时钟值\n    atomicset(server.lruclock,lruclock); //设置lruclock变量\n    ...\n}\n\n\n所以这样一来，每个键值对就可以从全局 lru 时钟获取最新的访问时间戳了。\n\n好，那么接下来，我们就来了解下，对于每个键值对来说，它对应的 redisobject 结构体中的 lru 变量，是在哪些函数中进行初始化和更新的。\n\n\n# 键值对 lru 时钟值的初始化与更新\n\n首先，对于一个键值对来说，它的 lru 时钟值最初是在这个键值对被创建的时候，进行初始化设置的，这个初始化操作是在 createobject 函数中调用的。createobject 函数实现在object.c文件当中，当 redis 要创建一个键值对时，就会调用这个函数。\n\nrobj *createobject(int type, void *ptr) {\n    robj *o = zmalloc(sizeof(*o));\n    o->type = type;\n    o->encoding = obj_encoding_raw;\n    o->ptr = ptr;\n    o->refcount = 1;\n\n    /* set the lru to the current lruclock (minutes resolution), or\n     * alternatively the lfu counter. */\n    if (server.maxmemory_policy & maxmemory_flag_lfu) {\n        o->lru = (lfugettimeinminutes()<<8) | lfu_init_val;\n    } else {\n        o->lru = lru_clock();\n    }\n    return o;\n}\n\n\n而 createobject 函数除了会给 redisobject 结构体分配内存空间之外，它还会根据我刚才提到的 maxmemory_policy 配置项的值，来初始化设置 redisobject 结构体中的 lru 变量。\n\n具体来说，就是如果 maxmemory_policy 配置为使用 lfu 策略，那么 lru 变量值会被初始化设置为 lfu 算法的计算值。而如果 maxmemory_policy 配置项没有使用 lfu 策略，那么，createobject 函数就会调用 lru_clock 函数来设置 lru 变量的值，也就是键值对对应的 lru 时钟值。\n\nlru_clock 函数是在 evict.c 文件中实现的，它的作用就是返回当前的全局 lru 时钟值。因为一个键值对一旦被创建，也就相当于有了一次访问，所以它对应的 lru 时钟值就表示了它的访问时间戳。\n\n/* this function is used to obtain the current lru clock.\n * if the current resolution is lower than the frequency we refresh the\n * lru clock (as it should be in production servers) we return the\n * precomputed value, otherwise we need to resort to a system call. */\nunsigned int lru_clock(void) {\n    unsigned int lruclock;\n    if (1000/server.hz <= lru_clock_resolution) {\n        atomicget(server.lruclock,lruclock);\n    } else {\n        lruclock = getlruclock();\n    }\n    return lruclock;\n}\n\n\n那么到这里，又出现了一个新的问题：一个键值对的 lru 时钟值又是在什么时候被再次更新的呢？\n\n其实，只要一个键值对被访问了，它的 lru 时钟值就会被更新。而当一个键值对被访问时，访问操作最终都会调用 lookupkey 函数。\n\nlookupkey 函数是在db.c文件中实现的，它会从全局哈希表中查找要访问的键值对。如果该键值对存在，那么 lookupkey 函数就会根据 maxmemory_policy 的配置值，来更新键值对的 lru 时钟值，也就是它的访问时间戳。\n\n而当 maxmemory_policy 没有配置为 lfu 策略时，lookupkey 函数就会调用 lru_clock 函数，来获取当前的全局 lru 时钟值，并将其赋值给键值对的 redisobject 结构体中的 lru 变量，如下所示：\n\n/* low level key lookup api, not actually called directly from commands\n * implementations that should instead rely on lookupkeyread(),\n * lookupkeywrite() and lookupkeyreadwithflags(). */\nrobj *lookupkey(redisdb *db, robj *key, int flags) {\n    dictentry *de = dictfind(db->dict,key->ptr);\n    if (de) {\n        // 获取键值对对应的redisobject结构体\n        robj *val = dictgetval(de);\n\n        /* update the access time for the ageing algorithm.\n         * don't do it if we have a saving child, as this will trigger\n         * a copy on write madness. */\n        if (!hasactivechildprocess() && !(flags & lookup_notouch)){\n            if (server.maxmemory_policy & maxmemory_flag_lfu) {\n                // 如果使用了lfu策略，更新lfu计数值\n                updatelfu(val);\n            } else {\n                 // 否则，调用lru_clock函数获取全局lru时钟值\n                val->lru = lru_clock();\n            }\n        }\n        return val;\n    } else {\n        return null;\n    }\n}\n\n\n这样一来，每个键值对一旦被访问，就能获得最新的访问时间戳了。不过现在，你可能要问了：这些访问时间戳最终是如何被用于近似 lru 算法，来进行数据淘汰的呢？接下来，我们就来学习下近似 lru 算法的实际执行过程。\n\n\n# 近似 lru 算法的实际执行\n\n现在我们已经知道，redis 之所以实现近似 lru 算法的目的，是为了减少内存资源和操作时间上的开销。那么在这里，我们其实可以从两个方面来了解近似 lru 算法的执行过程，分别是：\n\n * 何时触发算法执行？\n * 算法具体如何执行？\n\n# 何时触发算法执行？\n\n首先，近似 lru 算法的主要逻辑是在 freememoryifneeded 函数中实现的，而这个函数本身是在 evict.c 文件中实现。\n\nfreememoryifneeded 函数是被 freememoryifneededandsafe 函数（在 evict.c 文件中）调用，而 freememoryifneededandsafe 函数又是被 processcommand 函数所调用的。你可以参考下面的图，展示了这三者的调用关系。\n\n\n\n所以，我们看到 processcommand 函数，就应该知道这个函数是 redis 处理每个命令时都会被调用的。\n\n那么，processcommand 函数在执行的时候，实际上会根据两个条件来判断是否调用 freememoryifneededandsafe 函数。\n\n * 条件一：设置了 maxmemory 配置项为非 0 值。\n * 条件二：lua 脚本没有在超时运行。\n\n如果这两个条件成立，那么 processcommand 函数就会调用 freememoryifneededandsafe 函数，如下所示：\n\nif (server.maxmemory && !server.lua_timedout) {\n        int out_of_memory = freememoryifneededandsafe() == c_err;\n\n\n也就是说，只有在这两个条件都不成立的情况下，freememoryifneeded 函数才会被调用。下面的代码展示了 freememoryifneededandsafe 函数的执行逻辑，你可以看下。\n\n * 条件一：lua 脚本在超时运行。\n * 条件二：redis server 正在加载数据。\n\n也就是说，只有在这两个条件都不成立的情况下，freememoryifneeded 函数才会被调用。下面的代码展示了 freememoryifneededandsafe 函数的执行逻辑，你可以看下。\n\nint freememoryifneededandsafe(void) {\n    if (server.lua_timedout || server.loading) return c_ok;\n    return freememoryifneeded();\n}\n\n\n这样，一旦 freememoryifneeded 函数被调用了，并且 maxmemory-policy 被设置为了 allkeys-lru 或 volatile-lru，那么近似 lru 算法就开始被触发执行了。接下来，我们就来看下近似 lru 算法具体是如何执行的，也就是来了解 freememoryifneeded 函数的主要执行流程。\n\n# 近似 lru 算法具体如何执行？\n\n近似 lru 算法的执行可以分成三大步骤，分别是\n\n * 判断当前内存使用情况\n * 更新待淘汰的候选键值对集合\n * 选择被淘汰的键值对并删除\n\n下面我们就依次来看下。\n\n# 判断当前内存使用情况\n\n * 首先，freememoryifneeded 函数会调用 getmaxmemorystate 函数，评估当前的内存使用情况。getmaxmemorystate 函数是在 evict.c 文件中实现的，它会判断当前 redis server 使用的内存容量是否超过了 maxmemory 配置的值。\n * 如果当前内存使用量没有超过 maxmemory，那么，getmaxmemorystate 函数会返回 c_ok，紧接着，freememoryifneeded 函数也会直接返回了。\n\nint freememoryifneeded(void) {\n    ...\n    if (getmaxmemorystate(&mem_reported,null,&mem_tofree,null) == c_ok)\n            return c_ok;\n    ...\n}\n\n\n这里，你需要注意的是，getmaxmemorystate 函数在评估当前内存使用情况的时候，如果发现已用内存超出了 maxmemory，它就会计算需要释放的内存量。这个释放的内存大小等于已使用的内存量减去 maxmemory。不过，已使用的内存量并不包括用于主从复制的复制缓冲区大小，这是 getmaxmemorystate 函数，通过调用 freememorygetnotcountedmemory 函数来计算的。\n\n/* get the memory status from the point of view of the maxmemory directive:\n * if the memory used is under the maxmemory setting then c_ok is returned.\n * otherwise, if we are over the memory limit, the function returns\n * c_err.\n *\n * the function may return additional info via reference, only if the\n * pointers to the respective arguments is not null. certain fields are\n * populated only when c_err is returned:\n *\n *  'total'     total amount of bytes used.\n *              (populated both for c_err and c_ok)\n *\n *  'logical'   the amount of memory used minus the slaves/aof buffers.\n *              (populated when c_err is returned)\n *\n *  'tofree'    the amount of memory that should be released\n *              in order to return back into the memory limits.\n *              (populated when c_err is returned)\n *\n *  'level'     this usually ranges from 0 to 1, and reports the amount of\n *              memory currently used. may be > 1 if we are over the memory\n *              limit.\n *              (populated both for c_err and c_ok)\n */\nint getmaxmemorystate(size_t *total, size_t *logical, size_t *tofree, float *level) {\n    size_t mem_reported, mem_used, mem_tofree;\n\n    /* check if we are over the memory usage limit. if we are not, no need\n     * to subtract the slaves output buffers. we can just return asap. */\n    // 计算已使用的内存量\n    mem_reported = zmalloc_used_memory();\n    if (total) *total = mem_reported;\n\n    /* we may return asap if there is no need to compute the level. */\n    int return_ok_asap = !server.maxmemory || mem_reported <= server.maxmemory;\n    if (return_ok_asap && !level) return c_ok;\n\n    /* remove the size of slaves output buffers and aof buffer from the\n     * count of used memory. */\n    // 将用于主从复制的复制缓冲区大小和aof缓冲区大小从已使用内存量中扣除\n    mem_used = mem_reported;\n    size_t overhead = freememorygetnotcountedmemory();\n    mem_used = (mem_used > overhead) ? mem_used-overhead : 0;\n\n\n    /* compute the ratio of memory usage. */\n    // 计算内存使用率。\n    if (level) {\n        if (!server.maxmemory) {\n            *level = 0;\n        } else {\n            *level = (float)mem_used / (float)server.maxmemory;\n        }\n    }\n\n    if (return_ok_asap) return c_ok;\n\n    /* check if we are still over the memory limit. */\n    // 检查我们是否仍然超过内存限制。\n    if (mem_used <= server.maxmemory) return c_ok;\n\n    // 计算需要释放的内存量\n    /* compute how much memory we need to free. */\n    mem_tofree = mem_used - server.maxmemory;\n\n    if (logical) *logical = mem_used;\n    if (tofree) *tofree = mem_tofree;\n\n    return c_err;\n}\n\n\n而如果当前 server 使用的内存量，的确已经超出 maxmemory 的上限了，那么 freememoryifneeded 函数就会执行一个 while 循环，来淘汰数据释放内存。\n\n其实，为了淘汰数据，redis 定义了一个数组 evictionpoollru，用来保存待淘汰的候选键值对。这个数组的元素类型是 evictionpoolentry 结构体，该结构体保存了待淘汰键值对的空闲时间 idle、对应的 key 等信息。以下代码展示了 evictionpoollru 数组和 evictionpoolentry 结构体，它们都是在 evict.c 文件中定义的。\n\nstruct evictionpoolentry {\n    // 待淘汰的键值对的空闲时间\n    unsigned long long idle;    /* object idle time (inverse frequency for lfu) */\n    // 待淘汰的键值对的key\n    sds key;                    /* key name. */\n    // 缓存的sds对象\n    sds cached;                 /* cached sds object for key name. */\n    // 待淘汰键值对的key所在的数据库id\n    int dbid;                   /* key db number. */\n};\n\nstatic struct evictionpoolentry *evictionpoollru;\n\n\n这样，redis server 在执行 initsever 函数进行初始化时，会调用 evictionpoolalloc 函数（在 evict.c 文件中）为 evictionpoollru 数组分配内存空间，该数组的大小由宏定义 evpool_size（在 evict.c 文件中）决定，默认是 16 个元素，也就是可以保存 16 个待淘汰的候选键值对。\n\n#define evpool_size 16\n\n/* create a new eviction pool. */\nvoid evictionpoolalloc(void) {\n    struct evictionpoolentry *ep;\n    int j;\n\n    ep = zmalloc(sizeof(*ep)*evpool_size);\n    for (j = 0; j < evpool_size; j++) {\n        ep[j].idle = 0;\n        ep[j].key = null;\n        ep[j].cached = sdsnewlen(null,evpool_cached_sds_size);\n        ep[j].dbid = 0;\n    }\n    evictionpoollru = ep;\n}\n\n\n那么，freememoryifneeded 函数在淘汰数据的循环流程中，就会更新这个待淘汰的候选键值对集合，也就是 evictionpoollru 数组。下面我就来给你具体介绍一下。\n\n# 更新待淘汰的候选键值对集合\n\n首先，freememoryifneeded 函数会调用 evictionpoolpopulate 函数（在 evict.c 文件中），而 evictionpoolpopulate 函数会先调用 dictgetsomekeys 函数（在 dict.c 文件中），从待采样的哈希表中随机获取一定数量的 key。不过，这里还有两个地方你需要注意下。\n\n第一点，dictgetsomekeys 函数采样的哈希表，是由 maxmemory_policy 配置项来决定的。如果 maxmemory_policy 配置的是 allkeys_lru，那么待采样哈希表就是 redis server 的全局哈希表，也就是在所有键值对中进行采样；否则，待采样哈希表就是保存着设置了过期时间的 key 的哈希表。\n\n以下代码是 freememoryifneeded 函数中对 evictionpoolpopulate 函数的调用过程，你可以看下。\n\n/* we don't want to make local-db choices when expiring keys,\n * so to start populate the eviction pool sampling keys from\n * every db. */\nfor (i = 0; i < server.dbnum; i++) {\n    // 对redis server上的每一个数据库都执行\n    db = server.db+i;\n    // 根据淘汰策略，决定使用全局哈希表还是设置了过期时间的key的哈希表\n    dict = (server.maxmemory_policy & maxmemory_flag_allkeys) ?\n            db->dict : db->expires;\n    // 将选择的哈希表dict传入evictionpoolpopulate函数，同时将全局哈希表也传给evictionpoolpopulate函数\n    if ((keys = dictsize(dict)) != 0) {\n        evictionpoolpopulate(i, dict, db->dict, pool);\n        total_keys += keys;\n    }\n}\n\n\n第二点，dictgetsomekeys 函数采样的 key 的数量，是由 redis.conf 中的配置项 maxmemory-samples 决定的，该配置项的默认值是 5。下面代码就展示了 evictionpoolpopulate 函数对 dictgetsomekeys 函数的调用：\n\nvoid evictionpoolpopulate(int dbid, dict *sampledict, dict *keydict, struct evictionpoolentry *pool) {\n    ...\n    dictentry *samples[server.maxmemory_samples];  //采样后的集合，大小为maxmemory_samples\n    //将待采样的哈希表sampledict、采样后的集合samples、以及采样数量maxmemory_samples，作为参数传给dictgetsomekeys\n    count = dictgetsomekeys(sampledict,samples,server.maxmemory_samples);\n    ...\n}\n\n\n如此一来，dictgetsomekeys 函数就能返回采样的键值对集合了。然后，evictionpoolpopulate 函数会根据实际采样到的键值对数量 count，执行一个循环。\n\nfor (j = 0; j < count; j++) {\n...\nif (server.maxmemory_policy & maxmemory_flag_lru) {\n            idle = estimateobjectidletime(o);\n}\n...\n\n\n紧接着，evictionpoolpopulate 函数会遍历待淘汰的候选键值对集合，也就是 evictionpoollru 数组。在遍历过程中，它会尝试把采样的每一个键值对插入 evictionpoollru 数组，这主要取决于以下两个条件之一：\n\n * 一是，它能在数组中找到一个尚未插入键值对的空位；\n * 二是，它能在数组中找到一个空闲时间小于采样键值对空闲时间的键值对\n\n这两个条件有一个成立的话，evictionpoolpopulate 函数就可以把采样键值对插入 evictionpoollru 数组。等所有采样键值对都处理完后，evictionpoolpopulate 函数就完成对待淘汰候选键值对集合的更新了。\n\n接下来，freememoryifneeded 函数，就可以开始选择最终被淘汰的键值对了。\n\n# 选择被淘汰的键值对并删除\n\n因为 evictionpoolpopulate 函数已经更新了 evictionpoollru 数组，而且这个数组里面的 key，是按照空闲时间从小到大排好序了。所以，freememoryifneeded 函数会遍历一次 evictionpoollru 数组，从数组的最后一个 key 开始选择，如果选到的 key 不是空值，那么就把它作为最终淘汰的 key。\n\n// 从数组最后一个key开始查找\n/* go backward from best to worst element to evict. */\nfor (k = evpool_size-1; k >= 0; k--) {\n    // 当前key为空值，则查找下一个key\n    if (pool[k].key == null) continue;\n    bestdbid = pool[k].dbid;\n    // 从全局哈希表或是expire哈希表中，获取当前key对应的键值对；并将当前key从evictionpoollru数组删除\n    if (server.maxmemory_policy & maxmemory_flag_allkeys) {\n        de = dictfind(server.db[pool[k].dbid].dict,\n            pool[k].key);\n    } else {\n        de = dictfind(server.db[pool[k].dbid].expires,\n            pool[k].key);\n    }\n\n    /* remove the entry from the pool. */\n    if (pool[k].key != pool[k].cached)\n        sdsfree(pool[k].key);\n    pool[k].key = null;\n    pool[k].idle = 0;\n\n    /* if the key exists, is our pick. otherwise it is\n     * a ghost and we need to try the next element. */\n    // 如果当前key对应的键值对不为空，选择当前key为被淘汰的key\n    if (de) {\n        bestkey = dictgetkey(de);\n        break;\n    } else {\n        //否则，继续查找下个key\n        /* ghost... iterate again. */\n    }\n}\n\n\n最后，一旦选到了被淘汰的 key，freememoryifneeded 函数就会根据 redis server 的惰性删除配置，来执行同步删除或异步删除，如下所示：\n\nif (bestkey) {\n    db = server.db+bestdbid;\n    robj *keyobj = createstringobject(bestkey,sdslen(bestkey));        //将删除key的信息传递给从库和aof文件\n    propagateexpire(db,keyobj,server.lazyfree_lazy_eviction);\n    //如果配置了惰性删除，则进行异步删除\n    if (server.lazyfree_lazy_eviction)\n    \tdbasyncdelete(db,keyobj);\n    else  //否则进行同步删除\n    \tdbsyncdelete(db,keyobj);\n}\n\n\n好了，到这里，freememoryifneeded 函数就淘汰了一个 key。而如果此时，释放的内存空间还不够，也就是说没有达到我前面介绍的待释放空间，那么 freememoryifneeded 函数还会重复执行前面所说的更新待淘汰候选键值对集合、选择最终淘汰 key 的过程，直到满足待释放空间的大小要求。\n\n下图就展示了 freememoryifneeded 函数涉及的基本流程，你可以再来整体回顾下。\n\n\n\n其实，从刚才介绍的内容中，你就可以看到，近似 lru 算法并没有使用耗时耗空间的链表，而是使用了固定大小的待淘汰数据集合，每次随机选择一些 key 加入待淘汰数据集合中。最后，再按照待淘汰集合中 key 的空闲时间长度，删除空闲时间最长的 key。这样一来，redis 就近似实现了 lru 算法的效果了。\n\n\n# 总结\n\n你现在应该知道了 redis 是如何实现 lru 算法来进行缓存数据替换的。其中，我们根据 lru 算法的基本原理，可以发现如果严格按照原理来实现 lru 算法，那么开发的系统就需要用额外的内存空间来保存 lru 链表，而且系统运行时也会受到 lru 链表操作的开销影响。\n\n而对于 redis 来说，内存资源和性能都很重要，所以 redis 实现了近似 lru 算法。而为了实现近似 lru 算法，redis 首先是设置了全局 lru 时钟，并在键值对创建时获取全局 lru 时钟值作为访问时间戳，以及在每次访问时获取全局 lru 时钟值，更新访问时间戳。\n\n然后，当 redis 每处理一个命令时，都会调用 freememoryifneeded 函数来判断是否需要释放内存。如果已使用内存超出了 maxmemory，那么，近似 lru 算法就会随机选择一些键值对，组成待淘汰候选集合，并根据它们的访问时间戳，选出最旧的数据，将其淘汰。\n\nredis 计算实例内存时，不会把「主从复制」的缓冲区计算在内，也就是说不管一个实例后面挂了多少个从库，主库不会把主从复制所需的「缓冲区」内存，计算到实例内存中，即这部分内存增加，不会对数据淘汰产生影响。",charsets:{cjk:!0},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T02:07:49.000Z",permalink:"/pages/73ef48/"},regularPath:"/01.%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1%E7%AE%97%E6%B3%95/",relativePath:"01.系统设计算法/README.md",key:"v-639e0f9a",path:"/pages/73ef48/",headersStr:null,content:"# 介绍",normalizedContent:"# 介绍",charsets:{cjk:!0},lastUpdated:"2024/09/13, 19:57:43",lastUpdatedTimestamp:1726257463e3},{title:"设计 微信",frontmatter:{title:"设计 微信",date:"2024-09-14T02:08:51.000Z",permalink:"/pages/a95d7d/"},regularPath:"/02.%E8%AE%BE%E8%AE%A1%E7%83%AD%E9%97%A8%E5%BA%94%E7%94%A8/01.%E7%A4%BE%E4%BA%A4%E7%B1%BB/01.%E8%AE%BE%E8%AE%A1%20%E5%BE%AE%E4%BF%A1.html",relativePath:"02.设计热门应用/01.社交类/01.设计 微信.md",key:"v-fb7b08d2",path:"/pages/a95d7d/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"设计Twitter",frontmatter:{title:"设计Twitter",date:"2024-09-14T02:08:51.000Z",permalink:"/pages/90ad66/"},regularPath:"/02.%E8%AE%BE%E8%AE%A1%E7%83%AD%E9%97%A8%E5%BA%94%E7%94%A8/01.%E7%A4%BE%E4%BA%A4%E7%B1%BB/02.%E8%AE%BE%E8%AE%A1Twitter.html",relativePath:"02.设计热门应用/01.社交类/02.设计Twitter.md",key:"v-d89ce0de",path:"/pages/90ad66/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T02:08:51.000Z",permalink:"/pages/6e86ba/"},regularPath:"/02.%E8%AE%BE%E8%AE%A1%E7%83%AD%E9%97%A8%E5%BA%94%E7%94%A8/",relativePath:"02.设计热门应用/README.md",key:"v-2b8f38b0",path:"/pages/6e86ba/",headersStr:null,content:"# 介绍",normalizedContent:"# 介绍",charsets:{cjk:!0},lastUpdated:"2024/09/13, 19:57:43",lastUpdatedTimestamp:1726257463e3},{title:"双写一致性",frontmatter:{title:"双写一致性",date:"2024-09-14T16:50:17.000Z",permalink:"/pages/def08a/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E5%8F%8C%E5%86%99%E4%B8%80%E8%87%B4%E6%80%A7.html",relativePath:"03.场景设计/01.热门场景设计/01.双写一致性.md",key:"v-345df50e",path:"/pages/def08a/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"任务补偿",frontmatter:{title:"任务补偿",date:"2024-09-14T16:51:13.000Z",permalink:"/pages/24abe0/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/04.%E4%BB%BB%E5%8A%A1%E8%A1%A5%E5%81%BF.html",relativePath:"03.场景设计/01.热门场景设计/04.任务补偿.md",key:"v-072dd135",path:"/pages/24abe0/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"缓存击穿",frontmatter:{title:"缓存击穿",date:"2024-09-14T16:50:56.000Z",permalink:"/pages/1d96b2/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/03.%E7%BC%93%E5%AD%98%E5%87%BB%E7%A9%BF.html",relativePath:"03.场景设计/01.热门场景设计/03.缓存击穿.md",key:"v-71660c7c",path:"/pages/1d96b2/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"秒杀",frontmatter:{title:"秒杀",date:"2024-09-14T16:51:28.000Z",permalink:"/pages/a72629/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/05.%E7%A7%92%E6%9D%80.html",relativePath:"03.场景设计/01.热门场景设计/05.秒杀.md",key:"v-4fb0b446",path:"/pages/a72629/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"海量数据计数",frontmatter:{title:"海量数据计数",date:"2024-09-14T16:52:01.000Z",permalink:"/pages/f3295f/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/06.%E6%B5%B7%E9%87%8F%E6%95%B0%E6%8D%AE%E8%AE%A1%E6%95%B0.html",relativePath:"03.场景设计/01.热门场景设计/06.海量数据计数.md",key:"v-2d6b4bec",path:"/pages/f3295f/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"多级缓存",frontmatter:{title:"多级缓存",date:"2024-09-14T16:52:24.000Z",permalink:"/pages/51aa8b/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/07.%E5%A4%9A%E7%BA%A7%E7%BC%93%E5%AD%98.html",relativePath:"03.场景设计/01.热门场景设计/07.多级缓存.md",key:"v-0ac18964",path:"/pages/51aa8b/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"超时&重试",frontmatter:{title:"超时&重试",date:"2024-09-14T16:52:35.000Z",permalink:"/pages/0dfb49/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/08.%E8%B6%85%E6%97%B6&%E9%87%8D%E8%AF%95.html",relativePath:"03.场景设计/01.热门场景设计/08.超时&重试.md",key:"v-5d56c92a",path:"/pages/0dfb49/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"幂等&防重",frontmatter:{title:"幂等&防重",date:"2024-09-14T16:52:57.000Z",permalink:"/pages/4fc8cb/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/09.%E5%B9%82%E7%AD%89&%E9%98%B2%E9%87%8D.html",relativePath:"03.场景设计/01.热门场景设计/09.幂等&防重.md",key:"v-23e43bec",path:"/pages/4fc8cb/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T16:58:03.000Z",permalink:"/pages/a027c2/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/",relativePath:"03.场景设计/README.md",key:"v-0e70e808",path:"/pages/a027c2/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3},{title:"分布式缓存",frontmatter:{title:"分布式缓存",date:"2024-09-14T02:09:39.000Z",permalink:"/pages/84cb49/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html",relativePath:"04.设计基础设施/01.基础设施/01.分布式缓存.md",key:"v-4e80661c",path:"/pages/84cb49/",headers:[{level:2,title:"需求",slug:"需求",normalizedTitle:"需求",charIndex:2},{level:2,title:"前置知识",slug:"前置知识",normalizedTitle:"前置知识",charIndex:124},{level:2,title:"渐进式设计",slug:"渐进式设计",normalizedTitle:"渐进式设计",charIndex:251},{level:3,title:"本地缓存",slug:"本地缓存",normalizedTitle:"本地缓存",charIndex:261},{level:3,title:"分布式缓存",slug:"分布式缓存",normalizedTitle:"分布式缓存",charIndex:272},{level:4,title:"认识分布式缓存",slug:"认识分布式缓存",normalizedTitle:"认识分布式缓存",charIndex:281},{level:4,title:"如何选择缓存节点？",slug:"如何选择缓存节点",normalizedTitle:"如何选择缓存节点？",charIndex:294},{level:4,title:"缓存客户端是什么？",slug:"缓存客户端是什么",normalizedTitle:"缓存客户端是什么？",charIndex:311},{level:4,title:"获取缓存节点列表",slug:"获取缓存节点列表",normalizedTitle:"获取缓存节点列表",charIndex:332},{level:2,title:"非功能设计",slug:"非功能设计",normalizedTitle:"非功能设计",charIndex:383},{level:3,title:"高可用",slug:"高可用",normalizedTitle:"高可用",charIndex:74},{level:3,title:"高可靠",slug:"高可靠",normalizedTitle:"高可靠",charIndex:403},{level:2,title:"还有什么重要的",slug:"还有什么重要的",normalizedTitle:"还有什么重要的",charIndex:482},{level:3,title:"一致性",slug:"一致性",normalizedTitle:"一致性",charIndex:149},{level:3,title:"数据过期",slug:"数据过期",normalizedTitle:"数据过期",charIndex:221},{level:3,title:"数据淘汰策略",slug:"数据淘汰策略",normalizedTitle:"数据淘汰策略",charIndex:533},{level:3,title:"本地缓存+远程缓存",slug:"本地缓存-远程缓存",normalizedTitle:"本地缓存+远程缓存",charIndex:544},{level:3,title:"安全",slug:"安全",normalizedTitle:"安全",charIndex:234},{level:3,title:"监控和日志",slug:"监控和日志",normalizedTitle:"监控和日志",charIndex:238},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:575}],headersStr:"需求 前置知识 渐进式设计 本地缓存 分布式缓存 认识分布式缓存 如何选择缓存节点？ 缓存客户端是什么？ 获取缓存节点列表 非功能设计 高可用 高可靠 还有什么重要的 一致性 数据过期 数据淘汰策略 本地缓存+远程缓存 安全 监控和日志 总结",content:"# 需求\n\n功能性\n\n * put(key,value)\n * get(key)\n\n非功能性\n\n * 高扩展（随着数据和请求的增加轻松扩展）\n * 高可用（硬件/网络故障下仍然可用）\n * 高性能（put和get的高性能！）\n * 持久化\n\n\n# 前置知识\n\n * LRU 算法\n\n * 哈希取模与一致性哈希算法\n\n * 专用缓存集群与共存缓存\n\n * 缓存客户端\n\n * 静态与动态缓存服务器列表配置\n\n * 主从复制\n\n * 缓存一致性、数据过期、本地和远程缓存、安全性、监控和日志记录。\n\n\n# 渐进式设计\n\n\n# 本地缓存\n\n\n\n\n# 分布式缓存\n\n# 认识分布式缓存\n\n\n\n# 如何选择缓存节点？\n\n\n\n\n\n# 缓存客户端是什么？\n\n\n\n * 客户端如何获取缓存节点列表？\n * 当扩容或缩容时，缓存节点列表如何更新？\n\n# 获取缓存节点列表\n\n\n\n\n# 非功能设计\n\n\n# 高可用\n\n\n\n\n# 高可靠\n\n * 数据异步复制到replica\n * 数据同步复制到replica\n * 数据同步复制到所有replica然后返回？\n\n我们需要权衡！\n\n\n# 还有什么重要的\n\n\n# 一致性\n\n引入同步复制，确保所有缓存节点的视图一致\n\n\n# 数据过期\n\n\n# 数据淘汰策略\n\n\n# 本地缓存+远程缓存\n\n\n# 安全\n\n\n# 监控和日志\n\n\n# 总结\n\n",normalizedContent:"# 需求\n\n功能性\n\n * put(key,value)\n * get(key)\n\n非功能性\n\n * 高扩展（随着数据和请求的增加轻松扩展）\n * 高可用（硬件/网络故障下仍然可用）\n * 高性能（put和get的高性能！）\n * 持久化\n\n\n# 前置知识\n\n * lru 算法\n\n * 哈希取模与一致性哈希算法\n\n * 专用缓存集群与共存缓存\n\n * 缓存客户端\n\n * 静态与动态缓存服务器列表配置\n\n * 主从复制\n\n * 缓存一致性、数据过期、本地和远程缓存、安全性、监控和日志记录。\n\n\n# 渐进式设计\n\n\n# 本地缓存\n\n\n\n\n# 分布式缓存\n\n# 认识分布式缓存\n\n\n\n# 如何选择缓存节点？\n\n\n\n\n\n# 缓存客户端是什么？\n\n\n\n * 客户端如何获取缓存节点列表？\n * 当扩容或缩容时，缓存节点列表如何更新？\n\n# 获取缓存节点列表\n\n\n\n\n# 非功能设计\n\n\n# 高可用\n\n\n\n\n# 高可靠\n\n * 数据异步复制到replica\n * 数据同步复制到replica\n * 数据同步复制到所有replica然后返回？\n\n我们需要权衡！\n\n\n# 还有什么重要的\n\n\n# 一致性\n\n引入同步复制，确保所有缓存节点的视图一致\n\n\n# 数据过期\n\n\n# 数据淘汰策略\n\n\n# 本地缓存+远程缓存\n\n\n# 安全\n\n\n# 监控和日志\n\n\n# 总结\n\n",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"热点探查（Top k）",frontmatter:{title:"热点探查（Top k）",date:"2024-09-14T03:52:03.000Z",permalink:"/pages/5dcb6b/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/03.%E7%83%AD%E7%82%B9%E6%8E%A2%E6%9F%A5%EF%BC%88Top%20k%EF%BC%89.html",relativePath:"04.设计基础设施/01.基础设施/03.热点探查（Top k）.md",key:"v-82af755a",path:"/pages/5dcb6b/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"前置知识",slug:"前置知识",normalizedTitle:"前置知识",charIndex:313},{level:2,title:"需求",slug:"需求",normalizedTitle:"需求",charIndex:373},{level:2,title:"渐进设计",slug:"渐进设计",normalizedTitle:"渐进设计",charIndex:600},{level:3,title:"哈希表+单主机",slug:"哈希表-单主机",normalizedTitle:"哈希表+单主机",charIndex:609},{level:3,title:"哈希表+多主机",slug:"哈希表-多主机",normalizedTitle:"哈希表+多主机",charIndex:739},{level:3,title:"哈希表+多主机+分区",slug:"哈希表-多主机-分区",normalizedTitle:"哈希表+多主机+分区",charIndex:830},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:959},{level:2,title:"高层架构",slug:"高层架构",normalizedTitle:"高层架构",charIndex:1630},{level:2,title:"客户端检索数据",slug:"客户端检索数据",normalizedTitle:"客户端检索数据",charIndex:2400},{level:2,title:"解答疑惑",slug:"解答疑惑",normalizedTitle:"解答疑惑",charIndex:2485},{level:2,title:"参考资料",slug:"参考资料",normalizedTitle:"参考资料",charIndex:5033}],headersStr:"概述 前置知识 需求 渐进设计 哈希表+单主机 哈希表+多主机 哈希表+多主机+分区 总结 高层架构 客户端检索数据 解答疑惑 参考资料",content:"# 概述\n\nTop k 问题解决方案的各种应用（Google/Twitter/YouTube 趋势、热门产品、波动性股票、DDoS 攻击预防）。\n\n在这样的规模下，数据库或分布式缓存不是一个选项。我们可能正在处理 1M RPS。如果我们使用 DB 来跟踪视图计数，首先写入/更新会非常慢，然后找到前 K 项需要扫描整个数据集。\n\n也许 MapReduce 可以提供帮助。但这还不够。我们需要尽可能接近实时地返回重磅统计数据。\n\n例如：\n\n * Calculate top 100 list for last\n * 1 min, 5 min, 15 mins, 60 mins etc.\n\n这使得这个问题成为流处理问题\n\n\n# 前置知识\n\nMapReduce\n\nCount-min sketch\n\n数据聚合原理\n\n合并 N 个排序列表问题\n\n\n# 需求\n\n功能\n\n * topK(k,startTime,endTime)\n\n非功能\n\n * 高扩展（随着数据量的增加而扩展：视频、推文、帖子等）\n * 高可用性（在硬件/网络故障中幸存，没有 SPOF）\n * 高性能（返回前100名列表需要几十毫秒，考虑到性能要求，这暗示了最终列表应该预先计算，我们应该避免在调用 top K API 时进行繁重的计算。）\n * 准确性（例如，通过使用数据采样，我们可能不会计算每个元素，而只计算一小部分事件）\n\n\n# 渐进设计\n\n\n# 哈希表+单主机\n\n * 在 hashmap 中保留传入事件列表的计数\n\n * * 按频率对 hashmap 中的条目列表进行排序，并返回前 K 个元素。时间 O(nLogN)\n   * 将元素放在大小为 K 的堆上。时间复杂度O(nLogK)\n\n\n\n\n\n\n# 哈希表+多主机\n\n * 如果您将所有 youtube 视频 ID 存储在您作为主机的内存中，内存将是一个问题\n\n\n\n虽然增加了吞吐量，但是有内存瓶颈，hash 表会越来越大\n\n\n# 哈希表+多主机+分区\n\n * 我们不会将所有哈希表数据从所有主机发送到存储主机。相反，我们会在每个主机上单独计算 topK 列表，最后我们需要在存储主机上合并这些排序的列表。\n\n\n\n数据分区可以不将所有数据存储到一个主机上，减少了每个主机内存的压力\n\n\n# 总结\n\n问题\n\n * 我们认为数据集是无界的，这就是为什么我们能够考虑将其划分为多个块。但流数据没有界限。它不断涌现。在这种情况下，处理器主机只能在一段时间内继续积累数据，在此之前它将耗尽内存。比如 1 分钟。\n\n * * 我们将 1 min 数据刷新到存储主机\n   * 存储主机存储每分钟的热点列表\n   * 我们故意丢失了有关非 topK 元素的所有信息。我们负担不起在内存中存储每个视频的信息。\n   * 但是，如果我们想找到过去 1 小时或过去 1 天的 topK，我们如何使用 60 个 1 分钟 list 来构建它呢。鉴于当前的方法，没有解决此问题的正确方法。要找到当天的 topK，我们需要全天的完整数据集。\n   * 需求冲突，保留完整的 1 天数据（以满足需求）或丢失它以负担存储。让我们把所有数据存储在磁盘上，因为它无法放入内存，并使用批处理框架来做 topK 列表。Map Reduce 架构将发挥作用\n\n * 每次引入数据分区时，我们都必须考虑数据复制，以便将每个分区的副本存储在多个节点上。我们需要考虑在集群中添加/删除新节点时重新平衡。我们需要处理热分区。\n\n解决方案\n\n在进入上面讨论的方法之前，让我们想一想是否有一个简单的解决方案来解决 topK 问题？\n\n权衡利弊权衡利弊，所有的选择，不过是权衡利弊罢了\n\n我们需要在此过程中做出牺牲。准确性就是牺牲\n\n我们要合理利用数据结构，这将帮助我们使用固定大小的内存计算 topK，但结果可能不是 100% 准确\n\nCount-Min Sketch！\n\n\n\n\n# 高层架构\n\n\n\n * API Gateway：连接到视频内容交付系统，该系统将提供视频请求\n\n * * 对于我们的用例，我们对 API 网关的 1 个功能感兴趣，即日志生成，其中记录对 API 的每次调用。通常这些日志用于监控、日志记录和审计。我们将使用这些日志来计算每个视频的观看次数。我们可能有一个后台进程，它从日志中读取数据，进行一些初始聚合并发送数据进行进一步处理。\n   * 为 API 网关服务上的缓冲区分配内存，读取日志行，并构建频率计数哈希表。此缓冲区的大小应有限，当缓冲区已满时，将刷新数据。如果缓冲区在某个时间段内未满，我们可以根据时间段进行 flush。\n   * 其他选项可以是动态聚合数据，而不写入日志文件。或者完全跳过 API 网关端的数据聚合，并将有关每个事件（正在查看的视频）的信息进一步发送以进行处理。评估每个选项的优缺点。\n   * 我们可以通过以紧凑的二进制格式（例如 Apache Avro）序列化数据来节省网络 IO 利用率，并让 CPU 付出代价。所有这些注意事项都取决于 API 网关主机上可用的资源，即内存、CPU、网络和磁盘 IO。\n\n * distributed messaging system：初始聚合数据将发送到分布式消息传递系统，如 Apache Kafka。\n\n * Fast path and Slow path\n\n * * 在 Fast path 中，我们将大致计算 topK hitter 的结果。结果将在几秒钟内提供。\n   * 在 slow path 中，我们将精确计算 topK hitter 的结果。几分钟/几小时内即可获得结果。\n   * 根据系统对系统时序的限制（是否需要近实时结果，或者延迟是否可以接受以实现精度），您应该选择任一路径。\n\n\n\n\n\n\n\n\n# 客户端检索数据\n\n\n\n合并 2 个不同的结果集来回答 API 调用并不准确，但这是一种权衡。您无法在任何时间聚合数据。您必须了解确切需要的东西，并据此进行构建。\n\n\n# 解答疑惑\n\n * 我们是否可以使用哈希映射，但每隔几秒钟将其内容（转换为堆后）刷新到存储中，而不是使用 CMS？\n\n * * 对于小规模，使用哈希映射是完全可以的。当规模增长时，哈希映射可能会变得太大（使用大量内存）。为了防止这种情况，我们可以对数据进行分区，以便只有所有数据的子集进入 Fast Processor 服务主机。但它使架构复杂化。CMS 的美妙之处在于它消耗有限的（定义的）内存，并且无需对数据进行分区。CMS 的缺点是它大约计算数字。权衡，权衡......\n\n * 我们如何将 count-min sketch 和 heap 存储到数据库中？如何设计 table 架构？\n\n * * Heap 只是一个一维数组。CMS 是一个二维数组。这意味着两者都可以很容易地序列化为字节数组。使用语言原生序列化 API 或备受推崇的序列化框架（Protobufs、Thrift、Avro）。我们可以将它们以这种形式存储在数据库中。\n\n * 虽然 CMS 是为了节省内存，但我们还有 n log k 时间来获得前 k，对吧？\n\n * * 是的。它是 O(nlogk)（用于堆）+ O(klogk)（用于对最终列表进行排序）。N 通常比 k 大得多。所以，O(nlogk) 是主导的。\n\n * 如果 CMS 只用于 1 min 计数，为什么我们不直接使用哈希表来计数呢？毕竟，数据集的大小不会无限增长。\n\n * * 对于中小规模，哈希表解决方案可能效果很好。但请记住，如果我们尝试创建一个需要为许多不同场景查找前 K 个列表的服务，则可能会有很多这样的哈希表，并且它不会很好地扩展。例如，最常喜欢/不喜欢的视频、观看次数最多（基于时间）的视频、评论次数最多的视频、视频打开期间异常数量最多的前 K 名等。类似的统计数据可以按渠道级别、每个国家/地区等进行计算。长话短说，我们可能需要使用我们的服务来计算许多不同的前 K 名列表\n\n * 如何合并两个 1 小时的 top k 列表，以获得 2 小时的 top k？\n\n * * 我们需要对相同标识符的值求和。换句话说，我们会汇总两个列表中相同视频的观看次数。并获取合并列表的前 K （通过排序或使用 Heap）。 [不过，这不一定是 100% 准确的结果]\n\n * 当存在您提到的不同情况时，CMS 如何工作......最赞/最不喜欢的视频。我们需要构建多个 CMS 吗？我们是否需要为每个类别指定哈希值？无论哪种方式，它们都需要更多的内存，就像哈希表一样。\n\n * * 正确。我们需要特定的 CMS 来计算不同的事件类型：视频观看次数、喜欢、不喜欢、提交评论等。\n\n * 关于慢路径，我对数据分区器感到困惑。我们是否可以删除第一个 Distribute Messaging System 和 data partitioner？API 网关将根据其分区直接向第二个 Distribute Messaging System 发送消息。例如，API 网关会将所有 B 消息发送到分区 1，将所有 A 消息发送到分区 2，将所有 C 消息发送到分区 3。为什么我们需要第一个 Distribute Messaging System 和data partitioner？如果我们使用 Kalfa 作为 Distribute Messaging System，我们可以只为一组消息类型创建一个主题。\n\n * * 在大规模（例如 YouTube 规模）的情况下，API Gateway 集群将处理大量请求。我假设这些是数千甚至数万台 CPU 密集型计算机。主要目标是提供视频内容并尽可能少地做 “其他” 事情。在这样的机器上，我们通常希望避免任何繁重的聚合或逻辑。我们能做的最简单的事情是将每个视频观看请求批处理在一起。我的意思是根本不做任何聚合。创建包含如下内容的单个消息：{A = 1， B = 1， C = 1}，并将其发送以进行进一步处理。在您提到的选项中，我们仍然需要在 API Gateway 端进行聚合。由于规模很大，我们无法承受每个视频观看请求向第二个 DMS 发送一条消息的后果。我的意思是我们不能有三条消息，比如：{A = 1}、{B = 1}、{C = 1}。如视频中所述，我们希望在每个下一个阶段降低请求率。\n\n * 我有一个关于快速路径的问题，似乎您将聚合后的 CMS 存储在存储系统中，但这足以计算前 k 个吗？我觉得我们需要有一个网站列表，并在某个地方维护一个大小为 k 的堆，以找出前 k 个。\n\n * * 你是对的。我们始终保留两种数据结构：一个 count-min sketch 和一个 Fast Processor 中的堆。我们使用 count-min sketch 进行计数，而 heap 存储前 k 个列表。在 Storage 服务中，我们也可以同时保留两者或仅保留堆。但是 heap 始终存在。\n\n * 所以总的来说，我们仍然需要存储 keys。。。Count-min Sketch 无需单独维护 Key 的计数，从而有助于节省成本...当必须找到前 k 个元素时，必须遍历每个键并使用 count-min sketch 来找到前 k 个元素......这种理解准确吗？\n\n * * 我们需要存储 keys ，但只需要存储其中的 K（或更多）。并非全部。\n   * 当每个 key 到来时，我们执行以下操作：\n * * * 将其添加到 count-min 草图中。\n     * 从 count-min 草图中获取密钥计数。\n     * 检查当前 key 是否在堆中。如果它出现在堆中，我们在那里更新它的 count 值。如果它不存在于堆中，我们检查堆是否已满。如果未满，我们将此键添加到堆中。如果 heap 已满，则检查最小 heap 元素并将其值与当前 key count 值进行比较。此时，我们可以删除最小元素并添加当前键（如果当前键计数 > 最小元素值）。\n * * 这样我们只保留预定义数量的 key。这保证了我们永远不会超过内存，因为 count-min sketch 和堆的大小都是有限的\n\n\n# 参考资料\n\nhttps://www.youtube.com/watch?v=kx-XDoPjoHw",normalizedContent:"# 概述\n\ntop k 问题解决方案的各种应用（google/twitter/youtube 趋势、热门产品、波动性股票、ddos 攻击预防）。\n\n在这样的规模下，数据库或分布式缓存不是一个选项。我们可能正在处理 1m rps。如果我们使用 db 来跟踪视图计数，首先写入/更新会非常慢，然后找到前 k 项需要扫描整个数据集。\n\n也许 mapreduce 可以提供帮助。但这还不够。我们需要尽可能接近实时地返回重磅统计数据。\n\n例如：\n\n * calculate top 100 list for last\n * 1 min, 5 min, 15 mins, 60 mins etc.\n\n这使得这个问题成为流处理问题\n\n\n# 前置知识\n\nmapreduce\n\ncount-min sketch\n\n数据聚合原理\n\n合并 n 个排序列表问题\n\n\n# 需求\n\n功能\n\n * topk(k,starttime,endtime)\n\n非功能\n\n * 高扩展（随着数据量的增加而扩展：视频、推文、帖子等）\n * 高可用性（在硬件/网络故障中幸存，没有 spof）\n * 高性能（返回前100名列表需要几十毫秒，考虑到性能要求，这暗示了最终列表应该预先计算，我们应该避免在调用 top k api 时进行繁重的计算。）\n * 准确性（例如，通过使用数据采样，我们可能不会计算每个元素，而只计算一小部分事件）\n\n\n# 渐进设计\n\n\n# 哈希表+单主机\n\n * 在 hashmap 中保留传入事件列表的计数\n\n * * 按频率对 hashmap 中的条目列表进行排序，并返回前 k 个元素。时间 o(nlogn)\n   * 将元素放在大小为 k 的堆上。时间复杂度o(nlogk)\n\n\n\n\n\n\n# 哈希表+多主机\n\n * 如果您将所有 youtube 视频 id 存储在您作为主机的内存中，内存将是一个问题\n\n\n\n虽然增加了吞吐量，但是有内存瓶颈，hash 表会越来越大\n\n\n# 哈希表+多主机+分区\n\n * 我们不会将所有哈希表数据从所有主机发送到存储主机。相反，我们会在每个主机上单独计算 topk 列表，最后我们需要在存储主机上合并这些排序的列表。\n\n\n\n数据分区可以不将所有数据存储到一个主机上，减少了每个主机内存的压力\n\n\n# 总结\n\n问题\n\n * 我们认为数据集是无界的，这就是为什么我们能够考虑将其划分为多个块。但流数据没有界限。它不断涌现。在这种情况下，处理器主机只能在一段时间内继续积累数据，在此之前它将耗尽内存。比如 1 分钟。\n\n * * 我们将 1 min 数据刷新到存储主机\n   * 存储主机存储每分钟的热点列表\n   * 我们故意丢失了有关非 topk 元素的所有信息。我们负担不起在内存中存储每个视频的信息。\n   * 但是，如果我们想找到过去 1 小时或过去 1 天的 topk，我们如何使用 60 个 1 分钟 list 来构建它呢。鉴于当前的方法，没有解决此问题的正确方法。要找到当天的 topk，我们需要全天的完整数据集。\n   * 需求冲突，保留完整的 1 天数据（以满足需求）或丢失它以负担存储。让我们把所有数据存储在磁盘上，因为它无法放入内存，并使用批处理框架来做 topk 列表。map reduce 架构将发挥作用\n\n * 每次引入数据分区时，我们都必须考虑数据复制，以便将每个分区的副本存储在多个节点上。我们需要考虑在集群中添加/删除新节点时重新平衡。我们需要处理热分区。\n\n解决方案\n\n在进入上面讨论的方法之前，让我们想一想是否有一个简单的解决方案来解决 topk 问题？\n\n权衡利弊权衡利弊，所有的选择，不过是权衡利弊罢了\n\n我们需要在此过程中做出牺牲。准确性就是牺牲\n\n我们要合理利用数据结构，这将帮助我们使用固定大小的内存计算 topk，但结果可能不是 100% 准确\n\ncount-min sketch！\n\n\n\n\n# 高层架构\n\n\n\n * api gateway：连接到视频内容交付系统，该系统将提供视频请求\n\n * * 对于我们的用例，我们对 api 网关的 1 个功能感兴趣，即日志生成，其中记录对 api 的每次调用。通常这些日志用于监控、日志记录和审计。我们将使用这些日志来计算每个视频的观看次数。我们可能有一个后台进程，它从日志中读取数据，进行一些初始聚合并发送数据进行进一步处理。\n   * 为 api 网关服务上的缓冲区分配内存，读取日志行，并构建频率计数哈希表。此缓冲区的大小应有限，当缓冲区已满时，将刷新数据。如果缓冲区在某个时间段内未满，我们可以根据时间段进行 flush。\n   * 其他选项可以是动态聚合数据，而不写入日志文件。或者完全跳过 api 网关端的数据聚合，并将有关每个事件（正在查看的视频）的信息进一步发送以进行处理。评估每个选项的优缺点。\n   * 我们可以通过以紧凑的二进制格式（例如 apache avro）序列化数据来节省网络 io 利用率，并让 cpu 付出代价。所有这些注意事项都取决于 api 网关主机上可用的资源，即内存、cpu、网络和磁盘 io。\n\n * distributed messaging system：初始聚合数据将发送到分布式消息传递系统，如 apache kafka。\n\n * fast path and slow path\n\n * * 在 fast path 中，我们将大致计算 topk hitter 的结果。结果将在几秒钟内提供。\n   * 在 slow path 中，我们将精确计算 topk hitter 的结果。几分钟/几小时内即可获得结果。\n   * 根据系统对系统时序的限制（是否需要近实时结果，或者延迟是否可以接受以实现精度），您应该选择任一路径。\n\n\n\n\n\n\n\n\n# 客户端检索数据\n\n\n\n合并 2 个不同的结果集来回答 api 调用并不准确，但这是一种权衡。您无法在任何时间聚合数据。您必须了解确切需要的东西，并据此进行构建。\n\n\n# 解答疑惑\n\n * 我们是否可以使用哈希映射，但每隔几秒钟将其内容（转换为堆后）刷新到存储中，而不是使用 cms？\n\n * * 对于小规模，使用哈希映射是完全可以的。当规模增长时，哈希映射可能会变得太大（使用大量内存）。为了防止这种情况，我们可以对数据进行分区，以便只有所有数据的子集进入 fast processor 服务主机。但它使架构复杂化。cms 的美妙之处在于它消耗有限的（定义的）内存，并且无需对数据进行分区。cms 的缺点是它大约计算数字。权衡，权衡......\n\n * 我们如何将 count-min sketch 和 heap 存储到数据库中？如何设计 table 架构？\n\n * * heap 只是一个一维数组。cms 是一个二维数组。这意味着两者都可以很容易地序列化为字节数组。使用语言原生序列化 api 或备受推崇的序列化框架（protobufs、thrift、avro）。我们可以将它们以这种形式存储在数据库中。\n\n * 虽然 cms 是为了节省内存，但我们还有 n log k 时间来获得前 k，对吧？\n\n * * 是的。它是 o(nlogk)（用于堆）+ o(klogk)（用于对最终列表进行排序）。n 通常比 k 大得多。所以，o(nlogk) 是主导的。\n\n * 如果 cms 只用于 1 min 计数，为什么我们不直接使用哈希表来计数呢？毕竟，数据集的大小不会无限增长。\n\n * * 对于中小规模，哈希表解决方案可能效果很好。但请记住，如果我们尝试创建一个需要为许多不同场景查找前 k 个列表的服务，则可能会有很多这样的哈希表，并且它不会很好地扩展。例如，最常喜欢/不喜欢的视频、观看次数最多（基于时间）的视频、评论次数最多的视频、视频打开期间异常数量最多的前 k 名等。类似的统计数据可以按渠道级别、每个国家/地区等进行计算。长话短说，我们可能需要使用我们的服务来计算许多不同的前 k 名列表\n\n * 如何合并两个 1 小时的 top k 列表，以获得 2 小时的 top k？\n\n * * 我们需要对相同标识符的值求和。换句话说，我们会汇总两个列表中相同视频的观看次数。并获取合并列表的前 k （通过排序或使用 heap）。 [不过，这不一定是 100% 准确的结果]\n\n * 当存在您提到的不同情况时，cms 如何工作......最赞/最不喜欢的视频。我们需要构建多个 cms 吗？我们是否需要为每个类别指定哈希值？无论哪种方式，它们都需要更多的内存，就像哈希表一样。\n\n * * 正确。我们需要特定的 cms 来计算不同的事件类型：视频观看次数、喜欢、不喜欢、提交评论等。\n\n * 关于慢路径，我对数据分区器感到困惑。我们是否可以删除第一个 distribute messaging system 和 data partitioner？api 网关将根据其分区直接向第二个 distribute messaging system 发送消息。例如，api 网关会将所有 b 消息发送到分区 1，将所有 a 消息发送到分区 2，将所有 c 消息发送到分区 3。为什么我们需要第一个 distribute messaging system 和data partitioner？如果我们使用 kalfa 作为 distribute messaging system，我们可以只为一组消息类型创建一个主题。\n\n * * 在大规模（例如 youtube 规模）的情况下，api gateway 集群将处理大量请求。我假设这些是数千甚至数万台 cpu 密集型计算机。主要目标是提供视频内容并尽可能少地做 “其他” 事情。在这样的机器上，我们通常希望避免任何繁重的聚合或逻辑。我们能做的最简单的事情是将每个视频观看请求批处理在一起。我的意思是根本不做任何聚合。创建包含如下内容的单个消息：{a = 1， b = 1， c = 1}，并将其发送以进行进一步处理。在您提到的选项中，我们仍然需要在 api gateway 端进行聚合。由于规模很大，我们无法承受每个视频观看请求向第二个 dms 发送一条消息的后果。我的意思是我们不能有三条消息，比如：{a = 1}、{b = 1}、{c = 1}。如视频中所述，我们希望在每个下一个阶段降低请求率。\n\n * 我有一个关于快速路径的问题，似乎您将聚合后的 cms 存储在存储系统中，但这足以计算前 k 个吗？我觉得我们需要有一个网站列表，并在某个地方维护一个大小为 k 的堆，以找出前 k 个。\n\n * * 你是对的。我们始终保留两种数据结构：一个 count-min sketch 和一个 fast processor 中的堆。我们使用 count-min sketch 进行计数，而 heap 存储前 k 个列表。在 storage 服务中，我们也可以同时保留两者或仅保留堆。但是 heap 始终存在。\n\n * 所以总的来说，我们仍然需要存储 keys。。。count-min sketch 无需单独维护 key 的计数，从而有助于节省成本...当必须找到前 k 个元素时，必须遍历每个键并使用 count-min sketch 来找到前 k 个元素......这种理解准确吗？\n\n * * 我们需要存储 keys ，但只需要存储其中的 k（或更多）。并非全部。\n   * 当每个 key 到来时，我们执行以下操作：\n * * * 将其添加到 count-min 草图中。\n     * 从 count-min 草图中获取密钥计数。\n     * 检查当前 key 是否在堆中。如果它出现在堆中，我们在那里更新它的 count 值。如果它不存在于堆中，我们检查堆是否已满。如果未满，我们将此键添加到堆中。如果 heap 已满，则检查最小 heap 元素并将其值与当前 key count 值进行比较。此时，我们可以删除最小元素并添加当前键（如果当前键计数 > 最小元素值）。\n * * 这样我们只保留预定义数量的 key。这保证了我们永远不会超过内存，因为 count-min sketch 和堆的大小都是有限的\n\n\n# 参考资料\n\nhttps://www.youtube.com/watch?v=kx-xdopjohw",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"限流器",frontmatter:{title:"限流器",date:"2024-09-14T02:09:39.000Z",permalink:"/pages/57d5a5/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/02.%E9%99%90%E6%B5%81%E5%99%A8.html",relativePath:"04.设计基础设施/01.基础设施/02.限流器.md",key:"v-ca3de854",path:"/pages/57d5a5/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"需求",slug:"需求",normalizedTitle:"需求",charIndex:190},{level:2,title:"前置知识",slug:"前置知识",normalizedTitle:"前置知识",charIndex:299},{level:2,title:"组件架构",slug:"组件架构",normalizedTitle:"组件架构",charIndex:438},{level:2,title:"接口和类",slug:"接口和类",normalizedTitle:"接口和类",charIndex:449},{level:2,title:"消息广播",slug:"消息广播",normalizedTitle:"消息广播",charIndex:355},{level:2,title:"如何集成",slug:"如何集成",normalizedTitle:"如何集成",charIndex:471},{level:2,title:"答疑解惑",slug:"答疑解惑",normalizedTitle:"答疑解惑",charIndex:482},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:753}],headersStr:"概述 需求 前置知识 组件架构 接口和类 消息广播 如何集成 答疑解惑 总结",content:"# 概述\n\n\n\n * 我们需要编写一个可扩展以处理高负载的软件吗？\n\n * 负载均衡器中已经实现了最大连接数和服务端点上的最大线程数呢。我们还需要节流吗？\n\n * * 这种机制是不加区别的，有些操作快，有些操作慢，负载均衡器不了解每个操作的成本，如果我们想对某个操作实现特定的限流，负载均衡器就不好使了\n\n * 我们如何单独控制每个主机呢？\n\n * * 主机间相互通信！\n\n\n# 需求\n\n功能性\n\n * allowRequest(request)\n\n非功能性\n\n * 低延迟（尽快做出决定）\n * 准确性（尽可能准确）\n * 可扩展（支持集群中任意数量的主机）\n * 高可用\n * 高可靠\n\n\n# 前置知识\n\n * 令牌桶算法\n * 速率限制解决方案的面向对象设计\n * 负载均衡器最大连接数，自动扩展\n * 消息广播：全网状网络拓扑、gossip 通信、分布式缓存、协调服务\n * 通信协议：TCP、UDP\n * 嵌入式速率限制器与守护进程\n * 存储桶管理、同步\n\n\n# 组件架构\n\n\n\n\n# 接口和类\n\n\n\n\n# 消息广播\n\n\n\n\n# 如何集成\n\n\n\n\n# 答疑解惑\n\n * 我的服务非常受欢迎，有数百万用户。这是否意味着内存中存储了数百万个桶？\n\n * * 可以瞬间增加很多桶，但是当桶没用的时候，可以删除桶\n\n * 有哪些失败的场景？\n\n * * 守护线程失败\n   * 网络分区，无法传播消息，每个主机将允许更多的请求\n\n * 我们是否需要一个自动配置管理服务？\n\n * 我有点担心同步问题。这不是瓶颈吗？\n\n * * 原则上来说 我们要重视并发安全\n   * 但是我们没有必要实现，会对性能造成影响\n\n * 当客户的请求被拒绝时，他们应该做什么？\n\n * * 重试（指数退避、抖动）\n\n\n# 总结\n\n",normalizedContent:"# 概述\n\n\n\n * 我们需要编写一个可扩展以处理高负载的软件吗？\n\n * 负载均衡器中已经实现了最大连接数和服务端点上的最大线程数呢。我们还需要节流吗？\n\n * * 这种机制是不加区别的，有些操作快，有些操作慢，负载均衡器不了解每个操作的成本，如果我们想对某个操作实现特定的限流，负载均衡器就不好使了\n\n * 我们如何单独控制每个主机呢？\n\n * * 主机间相互通信！\n\n\n# 需求\n\n功能性\n\n * allowrequest(request)\n\n非功能性\n\n * 低延迟（尽快做出决定）\n * 准确性（尽可能准确）\n * 可扩展（支持集群中任意数量的主机）\n * 高可用\n * 高可靠\n\n\n# 前置知识\n\n * 令牌桶算法\n * 速率限制解决方案的面向对象设计\n * 负载均衡器最大连接数，自动扩展\n * 消息广播：全网状网络拓扑、gossip 通信、分布式缓存、协调服务\n * 通信协议：tcp、udp\n * 嵌入式速率限制器与守护进程\n * 存储桶管理、同步\n\n\n# 组件架构\n\n\n\n\n# 接口和类\n\n\n\n\n# 消息广播\n\n\n\n\n# 如何集成\n\n\n\n\n# 答疑解惑\n\n * 我的服务非常受欢迎，有数百万用户。这是否意味着内存中存储了数百万个桶？\n\n * * 可以瞬间增加很多桶，但是当桶没用的时候，可以删除桶\n\n * 有哪些失败的场景？\n\n * * 守护线程失败\n   * 网络分区，无法传播消息，每个主机将允许更多的请求\n\n * 我们是否需要一个自动配置管理服务？\n\n * 我有点担心同步问题。这不是瓶颈吗？\n\n * * 原则上来说 我们要重视并发安全\n   * 但是我们没有必要实现，会对性能造成影响\n\n * 当客户的请求被拒绝时，他们应该做什么？\n\n * * 重试（指数退避、抖动）\n\n\n# 总结\n\n",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"消息队列",frontmatter:{title:"消息队列",date:"2024-09-14T16:43:00.000Z",permalink:"/pages/567090/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/04.%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97.html",relativePath:"04.设计基础设施/01.基础设施/04.消息队列.md",key:"v-f75dbe40",path:"/pages/567090/",headers:[{level:2,title:"概述",slug:"概述",normalizedTitle:"概述",charIndex:2},{level:2,title:"需求",slug:"需求",normalizedTitle:"需求",charIndex:11},{level:2,title:"高层抽象",slug:"高层抽象",normalizedTitle:"高层抽象",charIndex:78},{level:2,title:"虚拟IP和负载均衡",slug:"虚拟ip和负载均衡",normalizedTitle:"虚拟ip和负载均衡",charIndex:89},{level:2,title:"前端服务",slug:"前端服务",normalizedTitle:"前端服务",charIndex:105},{level:2,title:"元数据服务",slug:"元数据服务",normalizedTitle:"元数据服务",charIndex:116},{level:2,title:"后端服务",slug:"后端服务",normalizedTitle:"后端服务",charIndex:128},{level:2,title:"还有什么重要的？",slug:"还有什么重要的",normalizedTitle:"还有什么重要的？",charIndex:145},{level:3,title:"队列的创建与删除",slug:"队列的创建与删除",normalizedTitle:"队列的创建与删除",charIndex:160},{level:3,title:"消息的删除",slug:"消息的删除",normalizedTitle:"消息的删除",charIndex:173},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:183}],headersStr:"概述 需求 高层抽象 虚拟IP和负载均衡 前端服务 元数据服务 后端服务 还有什么重要的？ 队列的创建与删除 消息的删除 总结",content:"# 概述\n\n\n\n\n# 需求\n\n功能性\n\n * sendMessage(messageBody)\n * receiveMessage()\n\n非功能性\n\n\n# 高层抽象\n\n\n\n\n# 虚拟IP和负载均衡\n\n\n\n\n# 前端服务\n\n\n\n\n# 元数据服务\n\n\n\n\n# 后端服务\n\n\n\n\n\n\n\n\n\n\n# 还有什么重要的？\n\n\n\n\n# 队列的创建与删除\n\n\n# 消息的删除\n\n\n# 总结\n\n",normalizedContent:"# 概述\n\n\n\n\n# 需求\n\n功能性\n\n * sendmessage(messagebody)\n * receivemessage()\n\n非功能性\n\n\n# 高层抽象\n\n\n\n\n# 虚拟ip和负载均衡\n\n\n\n\n# 前端服务\n\n\n\n\n# 元数据服务\n\n\n\n\n# 后端服务\n\n\n\n\n\n\n\n\n\n\n# 还有什么重要的？\n\n\n\n\n# 队列的创建与删除\n\n\n# 消息的删除\n\n\n# 总结\n\n",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T02:09:39.000Z",permalink:"/pages/3c1db5/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/",relativePath:"04.设计基础设施/README.md",key:"v-4985a9a2",path:"/pages/3c1db5/",headersStr:null,content:"# 介绍",normalizedContent:"# 介绍",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"服务通知",frontmatter:{title:"服务通知",date:"2024-09-14T16:43:28.000Z",permalink:"/pages/8416e6/"},regularPath:"/04.%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/01.%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/05.%E8%AE%A2%E9%98%85%E5%8F%91%E5%B8%83.html",relativePath:"04.设计基础设施/01.基础设施/05.订阅发布.md",key:"v-15eefc95",path:"/pages/8416e6/",headers:[{level:2,title:"需求",slug:"需求",normalizedTitle:"需求",charIndex:2},{level:2,title:"高层架构",slug:"高层架构",normalizedTitle:"高层架构",charIndex:142},{level:2,title:"客户端主机",slug:"客户端主机",normalizedTitle:"客户端主机",charIndex:153}],headersStr:"需求 高层架构 客户端主机",content:"# 需求\n\n功能性\n\n * createTopic(topicname)\n * publish(topicName,message)\n * subscribe(topicName,endpoint)\n\n非功能性\n\n * 高可扩展性\n * 高可用性\n * 高性能\n * 持久性\n\n\n# 高层架构\n\n\n\n\n# 客户端主机",normalizedContent:"# 需求\n\n功能性\n\n * createtopic(topicname)\n * publish(topicname,message)\n * subscribe(topicname,endpoint)\n\n非功能性\n\n * 高可扩展性\n * 高可用性\n * 高性能\n * 持久性\n\n\n# 高层架构\n\n\n\n\n# 客户端主机",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T02:09:48.000Z",permalink:"/pages/92b2ee/"},regularPath:"/05.%E9%97%AE%E7%AD%94/",relativePath:"05.问答/README.md",key:"v-0b0ed22c",path:"/pages/92b2ee/",headersStr:null,content:"# 介绍",normalizedContent:"# 介绍",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"README",frontmatter:{title:"README",date:"2024-09-14T02:09:52.000Z",permalink:"/pages/9b3c80/"},regularPath:"/06.%E5%8A%A8%E6%80%81/",relativePath:"06.动态/README.md",key:"v-551313d7",path:"/pages/9b3c80/",headersStr:null,content:"# 介绍\n\n我每天的工作：\n\n 1. 打开图床 picgo\n 2. 在正确的路径下开始写文章\n 3. 技术调研\n 4. 总结所有问题\n 5. 睡觉",normalizedContent:"# 介绍\n\n我每天的工作：\n\n 1. 打开图床 picgo\n 2. 在正确的路径下开始写文章\n 3. 技术调研\n 4. 总结所有问题\n 5. 睡觉",charsets:{cjk:!0},lastUpdated:"2024/09/14, 08:54:46",lastUpdatedTimestamp:1726304086e3},{title:"博客文章",frontmatter:{archivesPage:!0,title:"博客文章",permalink:"/blog/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-61d0fb85",path:"/blog/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/13, 19:57:43",lastUpdatedTimestamp:1726257463e3},{title:"首页",frontmatter:{home:!0,title:"首页",heroImage:"/img/hero.png",heroText:"Echo 系统设计之美",tagline:"🚀将系统设计技能提升到一个新水平所需的一切🚀",actionText:"开始使用 →",actionLink:"/pages/3c1db5/",bannerBg:"none",features:[{title:"设计基础设施",details:"你可以跟随我一起去设计后端核心基础设施，并深入了解其原理"},{title:"设计热门应用",details:"你可以跟随我一起去设计当下最热门的应用，并深入了解其原理"},{title:"系统设计算法",details:"你可以在这里充分了解我们后端开发所必备的系统设计算法，算法是必需品"},{title:"设计理论",details:"对系统设计的相关概念理论进行详细讲解，良药苦口"},{title:"问答归档",details:"对系统设计的常见问题进行汇总、归档，定期对所有常见问题进行归档"},{title:"学习路线",details:"记录一些比较优质的学习方法与路线，别走弯路"}],postList:"none"},regularPath:"/",relativePath:"index.md",key:"v-a11d1cc4",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/13, 19:57:43",lastUpdatedTimestamp:1726257463e3},{title:"缓存穿透",frontmatter:{title:"缓存穿透",date:"2024-09-14T16:50:37.000Z",permalink:"/pages/1e9e8e/"},regularPath:"/03.%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/01.%E7%83%AD%E9%97%A8%E5%9C%BA%E6%99%AF%E8%AE%BE%E8%AE%A1/02.%E7%BC%93%E5%AD%98%E7%A9%BF%E9%80%8F.html",relativePath:"03.场景设计/01.热门场景设计/02.缓存穿透.md",key:"v-33f15289",path:"/pages/1e9e8e/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2024/09/14, 10:38:36",lastUpdatedTimestamp:1726310316e3}],themeConfig:{pageButton:!1,nav:[{text:"首页",link:"/"},{text:"设计基础设施",link:"/pages/3c1db5/"},{text:"设计热门应用",link:"/pages/6e86ba/"},{text:"场景设计",link:"/pages/a027c2/"},{text:"系统设计算法",link:"/pages/73ef48/"},{text:"问答归档",link:"/pages/92b2ee/"},{text:"网站动态",link:"/pages/9b3c80/"}],sidebarDepth:2,logo:"/img/logo.png",repo:"echo-lxy/echo-system-design",searchMaxSuggestions:10,lastUpdated:"上次更新",docsDir:"docs",editLinks:!0,editLinkText:"编辑",sidebar:{"/01.系统设计算法/":[{title:"系统设计算法",collapsable:!1,children:[["01.系统设计算法/01.布隆过滤.md","布隆过滤","/pages/fccd91/"],["01.系统设计算法/02.一致性哈希.md","一致性哈希","/pages/1e28a2/"],["01.系统设计算法/03.Count-Min Sketch.md","Count-Min Sketch","/pages/8624c5"],["01.系统设计算法/04.LRU.md","LRU 算法","/pages/87589a"],["01.系统设计算法/05.LFU.md","LFU","/pages/7d22be/"]]}],catalogue:{},"/02.设计热门应用/":[{title:"社交类",collapsable:!1,children:[["01.社交类/01.设计 微信.md","设计 微信","/pages/a95d7d/"],["01.社交类/02.设计Twitter.md","设计Twitter","/pages/90ad66/"]]}],"/03.场景设计/":[{title:"热门场景设计",collapsable:!1,children:[["01.热门场景设计/01.双写一致性.md","双写一致性","/pages/def08a/"],["01.热门场景设计/02.缓存穿透.md","缓存穿透","/pages/1e9e8e/"],["01.热门场景设计/03.缓存击穿.md","缓存击穿","/pages/1d96b2/"],["01.热门场景设计/04.任务补偿.md","任务补偿","/pages/24abe0/"],["01.热门场景设计/05.秒杀.md","秒杀","/pages/a72629/"],["01.热门场景设计/06.海量数据计数.md","海量数据计数","/pages/f3295f/"],["01.热门场景设计/07.多级缓存.md","多级缓存","/pages/51aa8b/"],["01.热门场景设计/08.超时&重试.md","超时&重试","/pages/0dfb49/"],["01.热门场景设计/09.幂等&防重.md","幂等&防重","/pages/4fc8cb/"]]}],"/04.设计基础设施/":[{title:"基础设施",collapsable:!1,children:[["01.基础设施/01.分布式缓存.md","分布式缓存","/pages/84cb49/"],["01.基础设施/02.限流器.md","限流器","/pages/57d5a5/"],["01.基础设施/03.热点探查（Top k）.md","热点探查（Top k）","/pages/5dcb6b/"],["01.基础设施/04.消息队列.md","消息队列","/pages/567090/"],["01.基础设施/05.订阅发布.md","服务通知","/pages/8416e6/"]]}]},updateBar:{showToArticle:!1},pageStyle:"line",category:!1,tag:!1,author:{name:"echo",href:"https://gitee.com/brother-one"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"mailto:lixinyang2002@163.com"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/echo-lxy"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/#/playlist?id=755597173"}]},footer:{createYear:2024,copyrightInfo:"Xinyang Li | MIT License"},htmlModules:{pageT:'\n    <div class="wwads-cn wwads-horizontal page-wwads" data-id="136"></div>\n    <style>\n      .page-wwads{\n        width:100%!important;\n        min-height: 0;\n        margin: 0;\n      }\n      .page-wwads .wwads-img img{\n        width:80px!important;\n      }\n      .page-wwads .wwads-poweredby{\n        width: 40px;\n        position: absolute;\n        right: 25px;\n        bottom: 3px;\n      }\n      .wwads-content .wwads-text, .page-wwads .wwads-text{\n        height: 100%;\n        padding-top: 5px;\n        display: block;\n      }\n  </style>\n  '}}};var Oc=t(95),Tc=t(96),Sc=t(11);var jc={computed:{$filterPosts(){return this.$site.pages.filter(e=>{const{frontmatter:{pageComponent:n,article:t,home:r}}=e;return!(n||!1===t||!0===r)})},$sortPosts(){return(e=this.$filterPosts).sort((e,n)=>{const t=e.frontmatter.sticky,r=n.frontmatter.sticky;return t&&r?t==r?Object(Sc.a)(e,n):t-r:t&&!r?-1:!t&&r?1:Object(Sc.a)(e,n)}),e;var e},$sortPostsByDate(){return(e=this.$filterPosts).sort((e,n)=>Object(Sc.a)(e,n)),e;var e},$groupPosts(){return function(e){const n={},t={};for(let r=0,o=e.length;r<o;r++){const{frontmatter:{categories:o,tags:i}}=e[r];"array"===Object(Sc.n)(o)&&o.forEach(t=>{t&&(n[t]||(n[t]=[]),n[t].push(e[r]))}),"array"===Object(Sc.n)(i)&&i.forEach(n=>{n&&(t[n]||(t[n]=[]),t[n].push(e[r]))})}return{categories:n,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(e){const n=[],t=[];for(let t in e.categories)n.push({key:t,length:e.categories[t].length});for(let n in e.tags)t.push({key:n,length:e.tags[n].length});return{categories:n,tags:t}}(this.$groupPosts)}}};Wt.component(Oc.default),Wt.component(Tc.default);function Uc(e){return e.toString().padStart(2,"0")}t(245);Wt.component("Badge",()=>Promise.all([t.e(0),t.e(3)]).then(t.bind(null,365))),Wt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,95))),Wt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,96)));t(246);var Rc=[({Vue:e,options:n,router:t,siteData:r,isServer:o})=>{o||t.afterEach(()=>{var e;e=function(){setTimeout((function(){void 0===window._AdBlockInit&&function(){const e=document.getElementsByClassName("wwads-cn"),n=document.querySelector(".wwads-content");e[0]&&!n&&(e[0].innerHTML=h)}()}),3e3)},"complete"===document.readyState||"interactive"===document.readyState?setTimeout(e,1):document.addEventListener("DOMContentLoaded",e),setTimeout(()=>{const e=document.querySelector(".page-wwads");if(!e)return;const n=e.querySelector(".wwads-hide");n&&(n.onclick=()=>{e.style.display="none"}),"none"===e.style.display&&(e.style.display="flex")},900)})},({Vue:e,options:n,router:t,siteData:r})=>{r.pages.map(e=>{const{frontmatter:{date:n,author:t}}=e;"string"==typeof n&&"Z"===n.charAt(n.length-1)&&(e.frontmatter.date=function(e){e instanceof Date||(e=new Date(e));return`${e.getUTCFullYear()}-${Uc(e.getUTCMonth()+1)}-${Uc(e.getUTCDate())} ${Uc(e.getUTCHours())}:${Uc(e.getUTCMinutes())}:${Uc(e.getUTCSeconds())}`}(n)),t?e.author=t:r.themeConfig.author&&(e.author=r.themeConfig.author)}),e.mixin(jc)},{},({Vue:e})=>{e.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({router:e})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var e=document.createElement("script");e.src="https://hm.baidu.com/hm.js?01293bffa6c3962016c08ba685c79d78";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}(),e.afterEach((function(e){_hmt.push(["_trackPageview",e.fullPath])})))}],Pc=[];class Ic extends class{constructor(){this.store=new Wt({data:{state:{}}})}$get(e){return this.store.state[e]}$set(e,n){Wt.set(this.store.state,e,n)}$emit(...e){this.store.$emit(...e)}$on(...e){this.store.$on(...e)}}{}Object.assign(Ic.prototype,{getPageAsyncComponent:cs,getLayoutAsyncComponent:ls,getAsyncComponent:us,getVueComponent:ds});var $c={install(e){const n=new Ic;e.$vuepress=n,e.prototype.$vuepress=n}};function Bc(e,n){const t=n.toLowerCase();return e.options.routes.some(e=>e.path.toLowerCase()===t)}var zc={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(e){const n=this.pageKey||this.$parent.$page.key;return fs("pageKey",n),Wt.component(n)||Wt.component(n,cs(n)),Wt.component(n)?e(n):e("")}},Mc={functional:!0,props:{slotKey:String,required:!0},render:(e,{props:n,slots:t})=>e("div",{class:["content__"+n.slotKey]},t()[n.slotKey])},Fc={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Dc=(t(247),t(248),Object(js.a)(Fc,(function(){var e=this._self._c;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Nc={functional:!0,render(e,{parent:n,children:t}){if(n._isMounted)return t;n.$once("hook:mounted",()=>{n.$forceUpdate()})}};Wt.config.productionTip=!1,Wt.use(Va),Wt.use($c),Wt.mixin(function(e,n,t=Wt){!function(e){e.locales&&Object.keys(e.locales).forEach(n=>{e.locales[n].path=n});Object.freeze(e)}(n),t.$vuepress.$set("siteData",n);const r=new(e(t.$vuepress.$get("siteData"))),o=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(r)),i={};return Object.keys(o).reduce((e,n)=>(n.startsWith("$")&&(e[n]=o[n].get),e),i),{computed:i}}(e=>class{setPage(e){this.__page=e}get $site(){return e}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:e={}}=this.$site;let n,t;for(const r in e)"/"===r?t=e[r]:0===this.$page.path.indexOf(r)&&(n=e[r]);return n||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:e}=this.$page.frontmatter;return"string"==typeof e&&e}get $title(){const e=this.$page,{metaTitle:n}=this.$page.frontmatter;if("string"==typeof n)return n;const t=this.$siteTitle,r=e.frontmatter.home?null:e.frontmatter.title||e.title;return t?r?r+" | "+t:t:r||"VuePress"}get $description(){const e=function(e){if(e){const n=e.filter(e=>"description"===e.name)[0];if(n)return n.content}}(this.$page.frontmatter.meta);return e||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(e,n){for(let t=0;t<e.length;t++){const r=e[t];if(r.path.toLowerCase()===n.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},Lc)),Wt.component("Content",zc),Wt.component("ContentSlotsDistributor",Mc),Wt.component("OutboundLink",Dc),Wt.component("ClientOnly",Nc),Wt.component("Layout",ls("Layout")),Wt.component("NotFound",ls("NotFound")),Wt.prototype.$withBase=function(e){const n=this.$site.base;return"/"===e.charAt(0)?n+e.slice(1):e},window.__VUEPRESS__={version:"1.9.9",hash:"b375815"},async function(e){const n="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:Lc.routerBase||Lc.base,t=new Va({base:n,mode:"history",fallback:!1,routes:Ac,scrollBehavior:(e,n,t)=>t||(e.hash?!Wt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(e.hash)}:{x:0,y:0})});!function(e){e.beforeEach((n,t,r)=>{if(Bc(e,n.path))r();else if(/(\/|\.html)$/.test(n.path))if(/\/$/.test(n.path)){const t=n.path.replace(/\/$/,"")+".html";Bc(e,t)?r(t):r()}else r();else{const t=n.path+"/",o=n.path+".html";Bc(e,o)?r(o):Bc(e,t)?r(t):r()}})}(t);const r={};try{await Promise.all(Rc.filter(e=>"function"==typeof e).map(n=>n({Vue:Wt,options:r,router:t,siteData:Lc,isServer:e})))}catch(e){console.error(e)}return{app:new Wt(Object.assign(r,{router:t,render:e=>e("div",{attrs:{id:"app"}},[e("RouterView",{ref:"layout"}),e("div",{class:"global-ui"},Pc.map(n=>e(n)))])})),router:t}}(!1).then(({app:e,router:n})=>{n.onReady(()=>{e.$mount("#app")})})}]);