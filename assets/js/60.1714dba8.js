(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{395:function(t,n,s){"use strict";s.r(n);var a=s(4),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[n("strong",[t._v("请点击下方窗口右下角进行全屏预览")])]),t._v(" "),n("iframe",{attrs:{src:"https://www.processon.com/view/link/66e727e56de05763d582ed93?cid=6556eaa66c98d6411d14edeb",width:"100%",height:"500",frameborder:"0",scrolling:"On",leftmargin:"0",topmargin:"0",allowfullscreen:"true"}}),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("Redis 启动流程")])]),t._v("\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("startRedis")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    # "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" Redis Server 初始化\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadConfig")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                         # 加载 redis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf 配置文件\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServerSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 # 创建 TCP 监听端口，准备接受客户端连接\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initEventLoop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                      # 初始化事件循环（epoll"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kqueue）\n\n    # 初始化支线功能\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initPersistence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                    # 初始化 RDB 和 AOF 持久化\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initReplication")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                    # 初始化主从复制机制\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initSentinel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                       # 如果是哨兵模式，初始化哨兵机制\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initCluster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                        # 如果是集群模式，初始化集群路由和分片\n\n    # 启动主事件循环\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eventLoop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n# 事件循环，负责处理所有事件\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("eventLoop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" server is running"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processTimers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 处理定时任务（如过期 key、AOF 持久化等）\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acceptClientConnections")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        # 接受新的客户端连接\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processClientRequests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          # 处理客户端命令请求\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleReplication")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              # 处理主从复制数据同步\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSentinel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 # 处理哨兵监控和故障切换\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCluster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 集群模式下，处理分片路由和数据迁移\n\n# 处理定时任务，如过期 key、持久化\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processTimers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("expireKeysIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                 # 检查并删除过期的键\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAOFAndRDBPersistence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         # 根据策略触发 AOF 和 RDB 持久化\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("evictKeysIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 如果内存超出上限，触发淘汰策略\n\n# 处理新客户端连接\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("acceptClientConnections")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    when new client connects"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        client "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createClient")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          # 创建客户端对象\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerReadEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        # 注册读事件，监听客户端请求\n\n# 处理客户端命令请求\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("processClientRequests")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each client in server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clients"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" client has data to read"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readDataFromClient")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   # 从 socket 中读取请求数据\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" data is valid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                command "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseCommand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  # 解析 Redis 命令\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeCommand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 执行命令\n\n# 执行 Redis 命令\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeCommand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" command is valid"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        cmdFunction "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookupCommand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  # 查找命令函数\n        result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cmdFunction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          # 执行命令\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addToClientOutputBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 将结果写入输出缓冲区\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replicateCommandToSlaves")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     # 同步命令到从服务器（主从复制）\n\n        # 在命令执行过程中，可能触发支线操作\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkKeyExpiration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  # 检查 key 是否过期，进行惰性删除\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handlePersistence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           # 根据配置，触发 AOF 或 RDB 持久化\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("evictKeysIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 当内存不足时，触发淘汰策略\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid command"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 返回错误消息\n\n# 返回响应给客户端\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addToClientOutputBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outputBuffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("       # 将命令执行结果添加到输出缓冲区\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerWriteEvent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               # 注册写事件，准备发送给客户端\n\n# 发送响应\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendResponseToClient")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeDataToSocket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outputBuffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  # 将数据发送给客户端\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" write success"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearClientOutputBuffer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      # 清空缓冲区\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSocketError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            # 处理 socket 错误\n\n# 支线：检查 key 过期，过期策略\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("checkKeyExpiration")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getKeyFromCommand")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isKeyExpired")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            # 惰性删除过期的 key\n\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("expireKeysIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each db in server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("databases"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each key in db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isKeyExpired")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           # 主动删除过期的 key\n\n# 支线：持久化，处理 RDB 和 AOF 逻辑\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handlePersistence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" AOF is enabled"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeCommandToAOF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           # 将命令写入 AOF 文件\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" RDB snapshot is needed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveRDBSnapshot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                    # 触发 RDB 快照生成\n\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleAOFAndRDBPersistence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeToSaveRDB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("saveRDB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                            # 持久化 RDB 快照\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeToRewriteAOF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rewriteAOF")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                         # 触发 AOF 重写以压缩日志\n\n# 支线：淘汰策略，LRU、LFU\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("evictKeysIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("memoryUsageExceedsLimit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        candidates "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sampleKeys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            # 随机采样 key\n        keyToEvict "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findLRUOrLFUKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("candidates"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 根据 LRU"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("LFU 策略选择淘汰 key\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("deleteKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("db"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" keyToEvict"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            # 删除 key 以释放内存\n\n# 支线：主从复制，主服务器将命令同步给从服务器\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replicateCommandToSlaves")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each slave in server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slaves"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendCommandToSlave")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slave"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  # 复制命令到从服务器\n\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleReplication")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isMaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendReplicationDataToSlaves")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          # 主服务器向从服务器同步数据\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSlave")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("syncWithMaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                       # 从服务器与主服务器同步数据\n\n# 支线：哨兵监控与故障转移\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleSentinel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isSentinel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("monitorMasterStatus")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 哨兵模式，监控主服务器状态\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("masterIsDown")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performFailover")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  # 主服务器故障时，触发故障转移\n\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performFailover")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    newMaster "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectNewMaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              # 选举新的主服务器\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("promoteSlaveToMaster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newMaster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            # 提升从服务器为主服务器\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("notifyOtherSlavesAndClients")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newMaster"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     # 通知其他从服务器和客户端\n\n# 支线：集群模式下的分片与数据路由\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleCluster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isCluster")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each command in client"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            keyHashSlot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("computeKeyHashSlot")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 计算 key 的哈希槽\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hashSlotIsLocal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyHashSlot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeCommandLocally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   # 如果哈希槽属于本节点，执行命令\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forwardCommandToCorrectNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" # 将命令转发到正确的节点\n\nfunction "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("migrateKeysDuringRebalance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clusterNeedsRebalancing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" each slot in migratingSlots"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("migrateKeys")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" targetNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      # 将哈希槽的数据迁移到目标节点\n\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);