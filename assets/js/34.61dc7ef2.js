(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{364:function(e,r,t){"use strict";t.r(r);var n=t(4),o=Object(n.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"应用层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[e._v("#")]),e._v(" 应用层")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://echo798.oss-cn-shenzhen.aliyuncs.com/img/202409151053763.png",alt:"img"}})]),e._v(" "),r("p",[e._v("将 Web 服务层与应用层（也被称作平台层）分离，可以独立缩放和配置这两层。添加新的 API 只需要添加应用服务器，而不必添加额外的 web 服务器。")]),e._v(" "),r("p",[r("strong",[e._v("单一职责原则")]),e._v("提倡小型的，自治的服务共同合作。小团队通过提供小型的服务，可以更激进地计划增长。")]),e._v(" "),r("p",[e._v("应用层中的工作进程也有可以实现"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%BC%82%E6%AD%A5",target:"_blank",rel:"noopener noreferrer"}},[e._v("异步化"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h4",{attrs:{id:"微服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[e._v("#")]),e._v(" 微服务")]),e._v(" "),r("p",[e._v("与此讨论相关的话题是 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Microservices",target:"_blank",rel:"noopener noreferrer"}},[e._v("微服务"),r("OutboundLink")],1),e._v("，可以被描述为一系列可以独立部署的小型的，模块化服务。每个服务运行在一个独立的线程中，通过明确定义的轻量级机制通讯，共同实现业务目标。"),r("a",{attrs:{href:"https://smartbear.com/learn/api-design/what-are-microservices",target:"_blank",rel:"noopener noreferrer"}},[e._v("1"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("例如，Pinterest 可能有这些微服务： 用户资料、关注者、Feed 流、搜索、照片上传等。")]),e._v(" "),r("h4",{attrs:{id:"服务发现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[e._v("#")]),e._v(" 服务发现")]),e._v(" "),r("p",[e._v("像 "),r("a",{attrs:{href:"https://www.consul.io/docs/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Consul"),r("OutboundLink")],1),e._v("，"),r("a",{attrs:{href:"https://coreos.com/etcd/docs/latest",target:"_blank",rel:"noopener noreferrer"}},[e._v("Etcd"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zookeeper"),r("OutboundLink")],1),e._v(" 这样的系统可以通过追踪注册名、地址、端口等信息来帮助服务互相发现对方。"),r("a",{attrs:{href:"https://www.consul.io/intro/getting-started/checks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Health checks"),r("OutboundLink")],1),e._v(" 可以帮助确认服务的完整性和是否经常使用一个 "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEhttp",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP"),r("OutboundLink")],1),e._v(" 路径。Consul 和 Etcd 都有一个内建的 "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E9%94%AE-%E5%80%BC%E5%AD%98%E5%82%A8",target:"_blank",rel:"noopener noreferrer"}},[e._v("key-value 存储"),r("OutboundLink")],1),e._v(" 用来存储配置信息和其他的共享信息。")]),e._v(" "),r("h4",{attrs:{id:"不利之处-应用层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不利之处-应用层"}},[e._v("#")]),e._v(" 不利之处：应用层")]),e._v(" "),r("ul",[r("li",[e._v("添加由多个松耦合服务组成的应用层，从架构、运营、流程等层面来讲将非常不同（相对于单体系统）。")]),e._v(" "),r("li",[e._v("微服务会增加部署和运营的复杂度。")])]),e._v(" "),r("h4",{attrs:{id:"来源及延伸阅读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#来源及延伸阅读"}},[e._v("#")]),e._v(" 来源及延伸阅读")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://lethain.com/introduction-to-architecting-systems-for-scale",target:"_blank",rel:"noopener noreferrer"}},[e._v("可缩放系统构架介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.puncsky.com/blog/2016-02-13-crack-the-system-design-interview",target:"_blank",rel:"noopener noreferrer"}},[e._v("破解系统设计面试"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Service-oriented_architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("面向服务架构"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zookeeper 介绍"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cloudncode.wordpress.com/2016/07/22/msa-getting-started/",target:"_blank",rel:"noopener noreferrer"}},[e._v("构建微服务，你所需要知道的一切"),r("OutboundLink")],1)])]),e._v(" "),r("h3",{attrs:{id:"数据库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[e._v("#")]),e._v(" 数据库")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://echo798.oss-cn-shenzhen.aliyuncs.com/img/202409151054318.png",alt:"img"}})]),e._v(" "),r("h4",{attrs:{id:"关系型数据库管理系统-rdbms"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关系型数据库管理系统-rdbms"}},[e._v("#")]),e._v(" 关系型数据库管理系统（RDBMS）")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("主从复制")]),e._v(" "),r("ul",[r("li",[e._v("主库同时负责读取和写入操作，并复制写入到一个或多个从库中，从库只负责读操作。树状形式的从库再将写入复制到更多的从库中去。如果主库离线，系统可以以只读模式运行，直到某个从库被提升为主库或有新的主库出现。")]),e._v(" "),r("li",[e._v("缺点\n"),r("ul",[r("li",[e._v("将从库提升为主库需要额外的逻辑")]),e._v(" "),r("li",[e._v("参考"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E4%B8%8D%E5%88%A9%E4%B9%8B%E5%A4%84%E5%A4%8D%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("不利之处：复制"),r("OutboundLink")],1),e._v("中，主从复制和主主复制"),r("strong",[e._v("共同")]),e._v("的问题。")])])])])]),e._v(" "),r("li",[r("p",[e._v("主主复制")]),e._v(" "),r("ul",[r("li",[e._v("两个主库都负责读操作和写操作，写入操作时互相协调。如果其中一个主库挂机，系统可以继续读取和写入。")]),e._v(" "),r("li",[e._v("缺点：\n"),r("ul",[r("li",[e._v("你需要添加负载均衡器或者在应用逻辑中做改动，来确定写入哪一个数据库。")]),e._v(" "),r("li",[e._v("多数主-主系统要么不能保证一致性（违反 ACID），要么因为同步产生了写入延迟。")]),e._v(" "),r("li",[e._v("随着更多写入节点的加入和延迟的提高，如何解决冲突显得越发重要。")]),e._v(" "),r("li",[e._v("参考"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E4%B8%8D%E5%88%A9%E4%B9%8B%E5%A4%84%E5%A4%8D%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("不利之处：复制"),r("OutboundLink")],1),e._v("中，主从复制和主主复制"),r("strong",[e._v("共同")]),e._v("的问题")])])])])]),e._v(" "),r("li",[r("p",[e._v("不利之处：复制")]),e._v(" "),r("ul",[r("li",[e._v("如果主库在将新写入的数据复制到其他节点前挂掉，则有数据丢失的可能。")]),e._v(" "),r("li",[e._v("写入会被重放到负责读取操作的副本。副本可能因为过多写操作阻塞住，导致读取功能异常。")]),e._v(" "),r("li",[e._v("读取从库越多，需要复制的写入数据就越多，导致更严重的复制延迟。")]),e._v(" "),r("li",[e._v("在某些数据库系统中，写入主库的操作可以用多个线程并行写入，但读取副本只支持单线程顺序地写入。")]),e._v(" "),r("li",[e._v("复制意味着更多的硬件和额外的复杂度。")])])]),e._v(" "),r("li",[r("p",[e._v("联合")]),e._v(" "),r("ul",[r("li",[e._v("联合（或按功能划分）将数据库按对应功能分割。例如，你可以有三个数据库："),r("strong",[e._v("论坛")]),e._v("、"),r("strong",[e._v("用户")]),e._v("和"),r("strong",[e._v("产品")]),e._v("，而不仅是一个单体数据库，从而减少每个数据库的读取和写入流量，减少复制延迟。较小的数据库意味着更多适合放入内存的数据，进而意味着更高的缓存命中几率。没有只能串行写入的中心化主库，你可以并行写入，提高负载能力。")]),e._v(" "),r("li",[e._v("缺点\n"),r("ul",[r("li",[e._v("如果你的数据库模式需要大量的功能和数据表，联合的效率并不好。")]),e._v(" "),r("li",[e._v("你需要更新应用程序的逻辑来确定要读取和写入哪个数据库。")]),e._v(" "),r("li",[e._v("用 "),r("a",{attrs:{href:"http://stackoverflow.com/questions/5145637/querying-data-by-joining-two-tables-in-two-database-on-different-servers",target:"_blank",rel:"noopener noreferrer"}},[e._v("server link"),r("OutboundLink")],1),e._v(" 从两个库联结数据更复杂。")]),e._v(" "),r("li",[e._v("联合需要更多的硬件和额外的复杂度。")])])])])]),e._v(" "),r("li",[r("p",[e._v("分片")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("分片将数据分配在不同的数据库上，使得每个数据库仅管理整个数据集的一个子集。以用户数据库为例，随着用户数量的增加，越来越多的分片会被添加到集群中。")]),e._v(" "),r("p",[e._v("类似"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%81%94%E5%90%88",target:"_blank",rel:"noopener noreferrer"}},[e._v("联合"),r("OutboundLink")],1),e._v("的优点，分片可以减少读取和写入流量，减少复制并提高缓存命中率。也减少了索引，通常意味着查询更快，性能更好。如果一个分片出问题，其他的仍能运行，你可以使用某种形式的冗余来防止数据丢失。类似联合，没有只能串行写入的中心化主库，你可以并行写入，提高负载能力。")]),e._v(" "),r("p",[e._v("常见的做法是用户姓氏的首字母或者用户的地理位置来分隔用户表。")])]),e._v(" "),r("li",[r("p",[e._v("缺点")]),e._v(" "),r("ul",[r("li",[e._v("你需要修改应用程序的逻辑来实现分片，这会带来复杂的 SQL 查询。")]),e._v(" "),r("li",[e._v("分片不合理可能导致数据负载不均衡。例如，被频繁访问的用户数据会导致其所在分片的负载相对其他分片高。\n"),r("ul",[r("li",[e._v("再平衡会引入额外的复杂度。基于"),r("a",{attrs:{href:"http://www.paperplanes.de/2011/12/9/the-magic-of-consistent-hashing.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("一致性哈希"),r("OutboundLink")],1),e._v("的分片算法可以减少这种情况。")])])]),e._v(" "),r("li",[e._v("联结多个分片的数据操作更复杂。")]),e._v(" "),r("li",[e._v("分片需要更多的硬件和额外的复杂度。")])])])])]),e._v(" "),r("li",[r("p",[e._v("非规范化")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("非规范化试图以写入性能为代价来换取读取性能。在多个表中冗余数据副本，以避免高成本的联结操作。一些关系型数据库，比如 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/PostgreSQL",target:"_blank",rel:"noopener noreferrer"}},[e._v("PostgreSQL"),r("OutboundLink")],1),e._v(" 和 Oracle 支持"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Materialized_view",target:"_blank",rel:"noopener noreferrer"}},[e._v("物化视图"),r("OutboundLink")],1),e._v("，可以处理冗余信息存储和保证冗余副本一致。")]),e._v(" "),r("p",[e._v("当数据使用诸如"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%81%94%E5%90%88",target:"_blank",rel:"noopener noreferrer"}},[e._v("联合"),r("OutboundLink")],1),e._v("和"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%88%86%E7%89%87",target:"_blank",rel:"noopener noreferrer"}},[e._v("分片"),r("OutboundLink")],1),e._v("等技术被分割，进一步提高了处理跨数据中心的联结操作复杂度。非规范化可以规避这种复杂的联结操作。")]),e._v(" "),r("p",[e._v("在多数系统中，读取操作的频率远高于写入操作，比例可达到 100:1，甚至 1000:1。需要复杂的数据库联结的读取操作成本非常高，在磁盘操作上消耗了大量时间。")])]),e._v(" "),r("li",[r("p",[e._v("缺点")]),e._v(" "),r("ul",[r("li",[e._v("数据会冗余。")]),e._v(" "),r("li",[e._v("约束可以帮助冗余的信息副本保持同步，但这样会增加数据库设计的复杂度。")]),e._v(" "),r("li",[e._v("非规范化的数据库在高写入负载下性能可能比规范化的数据库差。")])])])])]),e._v(" "),r("li",[r("p",[e._v("SQL 调优")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("SQL 调优是一个范围很广的话题，有很多相关的"),r("a",{attrs:{href:"https://www.amazon.com/s/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning",target:"_blank",rel:"noopener noreferrer"}},[e._v("书"),r("OutboundLink")],1),e._v("可以作为参考。")]),e._v(" "),r("p",[e._v("利用"),r("strong",[e._v("基准测试")]),e._v("和"),r("strong",[e._v("性能分析")]),e._v("来模拟和发现系统瓶颈很重要。")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("基准测试")]),e._v(" - 用 "),r("a",{attrs:{href:"http://httpd.apache.org/docs/2.2/programs/ab.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ab"),r("OutboundLink")],1),e._v(" 等工具模拟高负载情况。")]),e._v(" "),r("li",[r("strong",[e._v("性能分析")]),e._v(" - 通过启用如"),r("a",{attrs:{href:"http://dev.mysql.com/doc/refman/5.7/en/slow-query-log.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("慢查询日志"),r("OutboundLink")],1),e._v("等工具来辅助追踪性能问题。")])]),e._v(" "),r("p",[e._v("基准测试和性能分析可能会指引你到以下优化方案。")])]),e._v(" "),r("li",[r("p",[e._v("使用正确的索引")])]),e._v(" "),r("li",[r("p",[e._v("避免高成本的联结操作")])]),e._v(" "),r("li",[r("p",[e._v("分割数据表")])]),e._v(" "),r("li",[r("p",[e._v("调优查询缓存")])])])])]),e._v(" "),r("h4",{attrs:{id:"nosql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#nosql"}},[e._v("#")]),e._v(" NoSQL")]),e._v(" "),r("p",[e._v("NoSQL 是"),r("strong",[e._v("键-值数据库")]),e._v("、"),r("strong",[e._v("文档型数据库")]),e._v("、"),r("strong",[e._v("列型数据库")]),e._v("或"),r("strong",[e._v("图数据库")]),e._v("的统称。数据库是非规范化的，表联结大多在应用程序代码中完成。大多数 NoSQL 无法实现真正符合 ACID 的事务，支持"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[e._v("最终一致"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[r("strong",[e._v("BASE")]),e._v(" 通常被用于描述 NoSQL 数据库的特性。相比 "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#cap-%E7%90%86%E8%AE%BA",target:"_blank",rel:"noopener noreferrer"}},[e._v("CAP 理论"),r("OutboundLink")],1),e._v("，BASE 强调可用性超过一致性。")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("基本可用")]),e._v(" - 系统保证可用性。")]),e._v(" "),r("li",[r("strong",[e._v("软状态")]),e._v(" - 即使没有输入，系统状态也可能随着时间变化。")]),e._v(" "),r("li",[r("strong",[e._v("最终一致性")]),e._v(" - 经过一段时间之后，系统最终会变一致，因为系统在此期间没有收到任何输入。")])]),e._v(" "),r("p",[e._v("除了在 "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#sql-%E8%BF%98%E6%98%AF-nosql",target:"_blank",rel:"noopener noreferrer"}},[e._v("SQL 还是 NoSQL"),r("OutboundLink")],1),e._v(" 之间做选择，了解哪种类型的 NoSQL 数据库最适合你的用例也是非常有帮助的。我们将在下一节中快速了解下 "),r("strong",[e._v("键-值存储")]),e._v("、"),r("strong",[e._v("文档型存储")]),e._v("、"),r("strong",[e._v("列型存储")]),e._v("和"),r("strong",[e._v("图存储")]),e._v("数据库。")]),e._v(" "),r("p",[r("strong",[e._v("键-值存储")])]),e._v(" "),r("blockquote",[r("p",[e._v("抽象模型：哈希表")])]),e._v(" "),r("p",[e._v("键-值存储通常可以实现 O(1) 时间读写，用内存或 SSD 存储数据。数据存储可以按"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Lexicographical_order",target:"_blank",rel:"noopener noreferrer"}},[e._v("字典顺序"),r("OutboundLink")],1),e._v("维护键，从而实现键的高效检索。键-值存储可以用于存储元数据。")]),e._v(" "),r("p",[e._v("键-值存储性能很高，通常用于存储简单数据模型或频繁修改的数据，如存放在内存中的缓存。键-值存储提供的操作有限，如果需要更多操作，复杂度将转嫁到应用程序层面。")]),e._v(" "),r("p",[e._v("键-值存储是如文档存储，在某些情况下，甚至是图存储等更复杂的存储系统的基础。")]),e._v(" "),r("p",[r("strong",[e._v("文档类型存储")])]),e._v(" "),r("blockquote",[r("p",[e._v("抽象模型：将文档作为值的键-值存储")])]),e._v(" "),r("p",[e._v("文档类型存储以文档（XML、JSON、二进制文件等）为中心，文档存储了指定对象的全部信息。文档存储根据文档自身的内部结构提供 API 或查询语句来实现查询。请注意，许多键-值存储数据库有用值存储元数据的特性，这也模糊了这两种存储类型的界限。")]),e._v(" "),r("p",[e._v("基于底层实现，文档可以根据集合、标签、元数据或者文件夹组织。尽管不同文档可以被组织在一起或者分成一组，但相互之间可能具有完全不同的字段。")]),e._v(" "),r("p",[e._v("MongoDB 和 CouchDB 等一些文档类型存储还提供了类似 SQL 语言的查询语句来实现复杂查询。DynamoDB 同时支持键-值存储和文档类型存储。")]),e._v(" "),r("p",[e._v("文档类型存储具备高度的灵活性，常用于处理偶尔变化的数据。")]),e._v(" "),r("p",[r("strong",[e._v("图数据库")])]),e._v(" "),r("p",[e._v("在图数据库中，一个节点对应一条记录，一个弧对应两个节点之间的关系。图数据库被优化用于表示外键繁多的复杂关系或多对多关系。")]),e._v(" "),r("p",[e._v("图数据库为存储复杂关系的数据模型，如社交网络，提供了很高的性能。它们相对较新，尚未广泛应用，查找开发工具或者资源相对较难。许多图只能通过 "),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%A1%A8%E8%BF%B0%E6%80%A7%E7%8A%B6%E6%80%81%E8%BD%AC%E7%A7%BBrest",target:"_blank",rel:"noopener noreferrer"}},[e._v("REST API"),r("OutboundLink")],1),e._v(" 访问。")]),e._v(" "),r("h4",{attrs:{id:"sql-还是-nosql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sql-还是-nosql"}},[e._v("#")]),e._v(" SQL 还是 NoSQL")]),e._v(" "),r("p",[e._v("选取 "),r("strong",[e._v("SQL")]),e._v(" 的原因:")]),e._v(" "),r("ul",[r("li",[e._v("结构化数据")]),e._v(" "),r("li",[e._v("严格的模式")]),e._v(" "),r("li",[e._v("关系型数据")]),e._v(" "),r("li",[e._v("需要复杂的联结操作")]),e._v(" "),r("li",[e._v("事务")]),e._v(" "),r("li",[e._v("清晰的扩展模式")]),e._v(" "),r("li",[e._v("既有资源更丰富：开发者、社区、代码库、工具等")]),e._v(" "),r("li",[e._v("通过索引进行查询非常快")])]),e._v(" "),r("p",[e._v("选取 "),r("strong",[e._v("NoSQL")]),e._v(" 的原因：")]),e._v(" "),r("ul",[r("li",[e._v("半结构化数据")]),e._v(" "),r("li",[e._v("动态或灵活的模式")]),e._v(" "),r("li",[e._v("非关系型数据")]),e._v(" "),r("li",[e._v("不需要复杂的联结操作")]),e._v(" "),r("li",[e._v("存储 TB （甚至 PB）级别的数据")]),e._v(" "),r("li",[e._v("高数据密集的工作负载")]),e._v(" "),r("li",[e._v("IOPS 高吞吐量")])]),e._v(" "),r("p",[e._v("适合 NoSQL 的示例数据：")]),e._v(" "),r("ul",[r("li",[e._v("埋点数据和日志数据")]),e._v(" "),r("li",[e._v("排行榜或者得分数据")]),e._v(" "),r("li",[e._v("临时数据，如购物车")]),e._v(" "),r("li",[e._v("频繁访问的（“热”）表")]),e._v(" "),r("li",[e._v("元数据／查找表")])]),e._v(" "),r("h3",{attrs:{id:"缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[e._v("#")]),e._v(" 缓存")]),e._v(" "),r("p",[e._v("缓存可以提高页面加载速度，并可以减少服务器和数据库的负载。在这个模型中，分发器先查看请求之前是否被响应过，如果有则将之前的结果直接返回，来省掉真正的处理。")]),e._v(" "),r("p",[e._v("数据库分片均匀分布的读取是最好的。但是热门数据会让读取分布不均匀，这样就会造成瓶颈，如果在数据库前加个缓存，就会抹平不均匀的负载和突发流量对数据库的影响。")]),e._v(" "),r("p",[e._v("缓存类型")]),e._v(" "),r("ul",[r("li",[e._v("客户端缓存")]),e._v(" "),r("li",[e._v("CDN 缓存")]),e._v(" "),r("li",[e._v("Web 服务器缓存（Nginx）")]),e._v(" "),r("li",[e._v("数据库缓存")]),e._v(" "),r("li",[e._v("应用缓存（Redis）")])]),e._v(" "),r("p",[e._v("缓存相关")]),e._v(" "),r("ul",[r("li",[e._v("数据库查询级别的缓存")]),e._v(" "),r("li",[e._v("对象级别的缓存")]),e._v(" "),r("li",[e._v("缓存的模式：https://javaguide.cn/database/redis/3-commonly-used-cache-read-and-write-strategies.html")])]),e._v(" "),r("h3",{attrs:{id:"异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[e._v("#")]),e._v(" 异步")]),e._v(" "),r("p",[r("img",{attrs:{src:"https://echo798.oss-cn-shenzhen.aliyuncs.com/img/202409151107255.png",alt:"img"}})]),e._v(" "),r("p",[e._v("异步工作流有助于减少那些原本顺序执行的请求时间。它们可以通过提前进行一些耗时的工作来帮助减少请求时间，比如定期汇总数据。")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("消息队列：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("消息队列接收，保留和传递消息。如果按顺序执行操作太慢的话，你可以使用有以下工作流的消息队列：")]),e._v(" "),r("ul",[r("li",[e._v("应用程序将作业发布到队列，然后通知用户作业状态")]),e._v(" "),r("li",[e._v("一个 worker 从队列中取出该作业，对其进行处理，然后显示该作业完成")])]),e._v(" "),r("p",[e._v("不去阻塞用户操作，作业在后台处理。在此期间，客户端可能会进行一些处理使得看上去像是任务已经完成了。例如，如果要发送一条推文，推文可能会马上出现在你的时间线上，但是可能需要一些时间才能将你的推文推送到你的所有关注者那里去。")]),e._v(" "),r("p",[r("strong",[e._v("Redis")]),e._v(" 是一个令人满意的简单的消息代理，但是消息有可能会丢失。")]),e._v(" "),r("p",[r("strong",[e._v("RabbitMQ")]),e._v(" 很受欢迎但是要求你适应「AMQP」协议并且管理你自己的节点。")]),e._v(" "),r("p",[r("strong",[e._v("Amazon SQS")]),e._v(" 是被托管的，但可能具有高延迟，并且消息可能会被传送两次。")])])])]),e._v(" "),r("li",[r("p",[e._v("任务队列")]),e._v(" "),r("ul",[r("li",[e._v("任务队列接收任务及其相关数据，运行它们，然后传递其结果。 它们可以支持调度，并可用于在后台运行计算密集型作业。")])])]),e._v(" "),r("li",[r("p",[e._v("背压")]),e._v(" "),r("ul",[r("li",[e._v("如果队列开始明显增长，那么队列大小可能会超过内存大小，导致高速缓存未命中，磁盘读取，甚至性能更慢。"),r("a",{attrs:{href:"http://mechanical-sympathy.blogspot.com/2012/05/apply-back-pressure-when-overloaded.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("背压"),r("OutboundLink")],1),e._v("可以通过限制队列大小来帮助我们，从而为队列中的作业保持高吞吐率和良好的响应时间。一旦队列填满，客户端将得到服务器忙或者 HTTP 503 状态码，以便稍后重试。客户端可以在稍后时间重试该请求，也许是"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Exponential_backoff",target:"_blank",rel:"noopener noreferrer"}},[e._v("指数退避"),r("OutboundLink")],1),e._v("。")])])]),e._v(" "),r("li",[r("p",[e._v("异步的缺点")]),e._v(" "),r("ul",[r("li",[e._v("简单的计算和实时工作流等用例可能更适用于同步操作，因为引入队列可能会增加延迟和复杂性。")])])])]),e._v(" "),r("h3",{attrs:{id:"通讯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通讯"}},[e._v("#")]),e._v(" 通讯")]),e._v(" "),r("ul",[r("li",[e._v("超文本传输协议（HTTP）")]),e._v(" "),r("li",[e._v("传输控制协议（TCP）")]),e._v(" "),r("li",[e._v("用户数据报协议（UDP）")]),e._v(" "),r("li",[e._v("远程过程调用协议（RPC）")]),e._v(" "),r("li",[e._v("表述性状态转移（REST）")]),e._v(" "),r("li",[e._v("RPC 与 REST 比较")])]),e._v(" "),r("h3",{attrs:{id:"安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[e._v("#")]),e._v(" 安全")]),e._v(" "),r("p",[e._v("这一部分需要更多内容。"),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%B4%A1%E7%8C%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("一起来吧"),r("OutboundLink")],1),e._v("！")]),e._v(" "),r("p",[e._v("安全是一个宽泛的话题。除非你有相当的经验、安全方面背景或者正在申请的职位要求安全知识，你不需要了解安全基础知识以外的内容：")]),e._v(" "),r("ul",[r("li",[e._v("在运输和等待过程中加密")]),e._v(" "),r("li",[e._v("对所有的用户输入和从用户那里发来的参数进行处理以防止 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Cross-site_scripting",target:"_blank",rel:"noopener noreferrer"}},[e._v("XSS"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/SQL_injection",target:"_blank",rel:"noopener noreferrer"}},[e._v("SQL 注入"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("li",[e._v("使用参数化的查询来防止 SQL 注入。")]),e._v(" "),r("li",[e._v("使用"),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Principle_of_least_privilege",target:"_blank",rel:"noopener noreferrer"}},[e._v("最小权限原则"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("h2",{attrs:{id:"附录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[e._v("#")]),e._v(" 附录")]),e._v(" "),r("h3",{attrs:{id:"其它的系统设计面试题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#其它的系统设计面试题"}},[e._v("#")]),e._v(" 其它的系统设计面试题")]),e._v(" "),r("p",[e._v("常见的系统设计面试问题，给出了如何解决的方案链接")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("问题")])]),e._v(" "),r("th",[r("strong",[e._v("引用")])])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("设计类似于 Dropbox 的文件同步服务")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=PE4gwstWhmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("youtube.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似于 Google 的搜索引擎")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://queue.acm.org/detail.cfm?id=988407",target:"_blank",rel:"noopener noreferrer"}},[e._v("queue.acm.org"),r("OutboundLink")],1),r("a",{attrs:{href:"http://programmers.stackexchange.com/questions/38324/interview-question-how-would-you-implement-google-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("stackexchange.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://www.ardendertat.com/2012/01/11/implementing-search-engines/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ardendertat.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://infolab.stanford.edu/~backrub/google.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("stanford.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似于 Google 的可扩展网络爬虫")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.quora.com/How-can-I-build-a-web-crawler-from-scratch",target:"_blank",rel:"noopener noreferrer"}},[e._v("quora.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计 Google 文档")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://code.google.com/p/google-mobwrite/",target:"_blank",rel:"noopener noreferrer"}},[e._v("code.google.com"),r("OutboundLink")],1),r("a",{attrs:{href:"https://neil.fraser.name/writing/sync/",target:"_blank",rel:"noopener noreferrer"}},[e._v("neil.fraser.name"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Redis 的键值存储")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/dvirsky/introduction-to-redis",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Memcached 的缓存系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/oemebamo/introduction-to-memcached",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似亚马逊的推荐系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://tech.hulu.com/blog/2011/09/19/recommendation-system.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("hulu.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://ijcai13.org/files/tutorial_slides/td3.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("ijcai13.org"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Bitly 的短链接系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://n00tc0d3r.blogspot.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("n00tc0d3r.blogspot.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 WhatsApp 的聊天应用")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Instagram 的图片分享系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/flickr-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计 Facebook 的新闻推荐方法")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.quora.com/What-are-best-practices-for-building-something-like-a-News-Feed",target:"_blank",rel:"noopener noreferrer"}},[e._v("quora.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://www.quora.com/Activity-Streams/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed",target:"_blank",rel:"noopener noreferrer"}},[e._v("quora.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://www.slideshare.net/danmckinley/etsy-activity-feeds-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计 Facebook 的时间线系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.facebook.com/note.php?note_id=10150468255628920",target:"_blank",rel:"noopener noreferrer"}},[e._v("facebook.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/blog/2012/1/23/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计 Facebook 的聊天系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.erlang-factory.com/upload/presentations/31/EugeneLetuchy-ErlangatFacebook.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("erlang-factory.com"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.facebook.com/note.php?note_id=14218138919&id=9445547199&index=0",target:"_blank",rel:"noopener noreferrer"}},[e._v("facebook.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Facebook 的图表搜索系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.facebook.com/notes/facebook-engineering/under-the-hood-building-out-the-infrastructure-for-graph-search/10151347573598920",target:"_blank",rel:"noopener noreferrer"}},[e._v("facebook.com"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.facebook.com/notes/facebook-engineering/under-the-hood-indexing-and-ranking-in-graph-search/10151361720763920",target:"_blank",rel:"noopener noreferrer"}},[e._v("facebook.com"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-natural-language-interface-of-graph-search/10151432733048920",target:"_blank",rel:"noopener noreferrer"}},[e._v("facebook.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 CloudFlare 的内容传递网络")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&context=compsci",target:"_blank",rel:"noopener noreferrer"}},[e._v("cmu.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计类似 Twitter 的热门话题系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.michael-noll.com/blog/2013/01/18/implementing-real-time-trending-topics-in-storm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("michael-noll.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://snikolov.wordpress.com/2012/11/14/early-detection-of-twitter-trends/",target:"_blank",rel:"noopener noreferrer"}},[e._v("snikolov .wordpress.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计一个随机 ID 生成系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://blog.twitter.com/2010/announcing-snowflake",target:"_blank",rel:"noopener noreferrer"}},[e._v("blog.twitter.com"),r("OutboundLink")],1),r("a",{attrs:{href:"https://github.com/twitter/snowflake/",target:"_blank",rel:"noopener noreferrer"}},[e._v("github.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("返回一定时间段内次数前 k 高的请求")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("ucsb.edu"),r("OutboundLink")],1),r("a",{attrs:{href:"http://davis.wpi.edu/xmdv/docs/EDBT11-diyang.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("wpi.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计一个数据源于多个数据中心的服务系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2009/8/24/how-google-serves-data-from-multiple-datacenters.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计一个多人网络卡牌游戏")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://web.archive.org/web/20180929181117/http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("indieflashblog.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://buildnewgames.com/real-time-multiplayer/",target:"_blank",rel:"noopener noreferrer"}},[e._v("buildnewgames.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("设计一个垃圾回收系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://journal.stuffwithstuff.com/2013/12/08/babys-first-garbage-collector/",target:"_blank",rel:"noopener noreferrer"}},[e._v("stuffwithstuff.com"),r("OutboundLink")],1),r("a",{attrs:{href:"http://courses.cs.washington.edu/courses/csep521/07wi/prj/rick.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("washington.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("添加更多的系统设计问题")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%B4%A1%E7%8C%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("贡献"),r("OutboundLink")],1)])])])]),e._v(" "),r("h3",{attrs:{id:"真实架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#真实架构"}},[e._v("#")]),e._v(" 真实架构")]),e._v(" "),r("p",[e._v("关于现实中真实的系统是怎么设计的文章。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/images/TcUo2fw.png",target:"_blank",rel:"noopener noreferrer"}},[r("img",{attrs:{src:"https://echo798.oss-cn-shenzhen.aliyuncs.com/img/202409150430883.png",alt:"img"}}),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.infoq.com/presentations/Twitter-Timeline-Scalability",target:"_blank",rel:"noopener noreferrer"}},[r("strong",[e._v("Source: Twitter timelines at scale")]),r("OutboundLink")],1)]),e._v(" "),r("p",[r("strong",[e._v("不要专注于以下文章的细节，专注于以下方面：")])]),e._v(" "),r("ul",[r("li",[e._v("发现这些文章中的共同的原则、技术和模式。")]),e._v(" "),r("li",[e._v("学习每个组件解决哪些问题，什么情况下使用，什么情况下不适用")]),e._v(" "),r("li",[e._v("复习学过的文章")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("类型")])]),e._v(" "),r("th",[r("strong",[e._v("系统")])]),e._v(" "),r("th",[r("strong",[e._v("引用")])])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("Data processing")]),e._v(" "),r("td",[r("strong",[e._v("MapReduce")]),e._v(" - Google 的分布式数据处理")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/mapreduce-osdi04.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("research.google.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data processing")]),e._v(" "),r("td",[r("strong",[e._v("Spark")]),e._v(" - Databricks 的分布式数据处理")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/AGrishchenko/apache-spark-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data processing")]),e._v(" "),r("td",[r("strong",[e._v("Storm")]),e._v(" - Twitter 的分布式数据处理")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/previa/storm-16094009",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td"),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("Bigtable")]),e._v(" - Google 的列式数据库")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/chang06bigtable.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("harvard.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("HBase")]),e._v(" - Bigtable 的开源实现")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/alexbaranau/intro-to-hbase",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("Cassandra")]),e._v(" - Facebook 的列式数据库")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/planetcassandra/cassandra-introduction-features-30103666",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("DynamoDB")]),e._v(" - Amazon 的文档数据库")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.read.seas.harvard.edu/~kohler/class/cs239-w08/decandia07dynamo.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("harvard.edu"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("MongoDB")]),e._v(" - 文档数据库")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/mdirolf/introduction-to-mongodb",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("Spanner")]),e._v(" - Google 的全球分布数据库")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://research.google.com/archive/spanner-osdi2012.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("research.google.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("Memcached")]),e._v(" - 分布式内存缓存系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/oemebamo/introduction-to-memcached",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Data store")]),e._v(" "),r("td",[r("strong",[e._v("Redis")]),e._v(" - 能够持久化及具有值类型的分布式内存缓存系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/dvirsky/introduction-to-redis",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td"),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("File system")]),e._v(" "),r("td",[r("strong",[e._v("Google File System (GFS)")]),e._v(" - 分布式文件系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/zh-CN/us/archive/gfs-sosp2003.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("research.google.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("File system")]),e._v(" "),r("td",[r("strong",[e._v("Hadoop File System (HDFS)")]),e._v(" - GFS 的开源实现")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("apache.org"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td"),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[e._v("Misc")]),e._v(" "),r("td",[r("strong",[e._v("Chubby")]),e._v(" - Google 的分布式系统的低耦合锁服务")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://static.googleusercontent.com/external_content/untrusted_dlcp/research.google.com/en/us/archive/chubby-osdi06.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("research.google.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Misc")]),e._v(" "),r("td",[r("strong",[e._v("Dapper")]),e._v(" - 分布式系统跟踪基础设施")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36356.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("research.google.com"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Misc")]),e._v(" "),r("td",[r("strong",[e._v("Kafka")]),e._v(" - LinkedIn 的发布订阅消息系统")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/mumrah/kafka-talk-tri-hug",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Misc")]),e._v(" "),r("td",[r("strong",[e._v("Zookeeper")]),e._v(" - 集中的基础架构和协调服务")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper",target:"_blank",rel:"noopener noreferrer"}},[e._v("slideshare.net"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td"),e._v(" "),r("td",[e._v("添加更多")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E8%B4%A1%E7%8C%AE",target:"_blank",rel:"noopener noreferrer"}},[e._v("贡献"),r("OutboundLink")],1)])])])]),e._v(" "),r("h3",{attrs:{id:"公司的系统架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#公司的系统架构"}},[e._v("#")]),e._v(" 公司的系统架构")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("Company")])]),e._v(" "),r("th",[r("strong",[e._v("Reference(s)")])])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("Amazon")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/amazon-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Cinchcast")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每天产生 1500 小时的音频"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("DataSift")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2011/11/29/datasift-architecture-realtime-datamining-at-120000-tweets-p.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每秒实时挖掘 120000 条 tweet"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("DropBox")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=PE4gwstWhmc",target:"_blank",rel:"noopener noreferrer"}},[e._v("我们如何缩放 Dropbox"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("ESPN")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每秒操作 100000 次"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Google")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/google-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Instagram")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("1400 万用户，达到兆级别的照片存储"),r("OutboundLink")],1),r("a",{attrs:{href:"http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances",target:"_blank",rel:"noopener noreferrer"}},[e._v("是什么在驱动 Instagram"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Justin.tv")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Justin.Tv 的直播广播架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Facebook")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/key-value/fb-memcached-nsdi-2013.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Facebook 的可扩展 memcached"),r("OutboundLink")],1),r("a",{attrs:{href:"https://cs.uwaterloo.ca/~brecht/courses/854-Emerging-2014/readings/data-store/tao-facebook-distributed-datastore-atc-2013.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("TAO: Facebook 社交图的分布式数据存储"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.usenix.org/legacy/event/osdi10/tech/full_papers/Beaver.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("Facebook 的图片存储"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Flickr")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/flickr-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flickr 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Mailbox")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2013/6/18/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("在 6 周内从 0 到 100 万用户"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Pinterest")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2013/4/15/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("从零到每月数十亿的浏览量"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/blog/2012/5/21/pinterest-architecture-update-18-million-visitors-10x-growth.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("1800 万访问用户，10 倍增长，12 名员工"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Playfish")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("月用户量 5000 万并在不断增长"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("PlentyOfFish")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/plentyoffish-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("PlentyOfFish 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Salesforce")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("他们每天如何处理 13 亿笔交易"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Stack Overflow")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2009/8/5/stack-overflow-architecture.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Stack Overflow 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("TripAdvisor")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("40M 访问者，200M 页面浏览量，30TB 数据"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Tumblr")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2012/2/13/tumblr-architecture-15-billion-page-views-a-month-and-harder.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每月 150 亿的浏览量"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Twitter")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/scaling-twitter-making-twitter-10000-percent-faster",target:"_blank",rel:"noopener noreferrer"}},[e._v("Making Twitter 10000 percent faster"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/blog/2011/12/19/how-twitter-stores-250-million-tweets-a-day-using-mysql.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("每天使用 MySQL 存储 2.5 亿条 tweet"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/blog/2013/7/8/the-architecture-twitter-uses-to-deal-with-150m-active-users.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("150M 活跃用户，300K QPS，22 MB/S 的防火墙"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.infoq.com/presentations/Twitter-Timeline-Scalability",target:"_blank",rel:"noopener noreferrer"}},[e._v("可扩展时间表"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.youtube.com/watch?v=5cKTP36HVgI",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter 的大小数据"),r("OutboundLink")],1),r("a",{attrs:{href:"https://www.youtube.com/watch?v=z8LU0Cj6BOU",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter 的行为：规模超过 1 亿用户"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("Uber")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uber 如何扩展自己的实时化市场"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("WhatsApp")]),e._v(" "),r("td",[r("a",{attrs:{href:"http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Facebook 用 190 亿美元购买 WhatsApp 的架构"),r("OutboundLink")],1)])]),e._v(" "),r("tr",[r("td",[e._v("YouTube")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://www.youtube.com/watch?v=w5WVu624fY8",target:"_blank",rel:"noopener noreferrer"}},[e._v("YouTube 的可扩展性"),r("OutboundLink")],1),r("a",{attrs:{href:"http://highscalability.com/youtube-architecture",target:"_blank",rel:"noopener noreferrer"}},[e._v("YouTube 的架构"),r("OutboundLink")],1)])])])]),e._v(" "),r("h3",{attrs:{id:"公司工程博客"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#公司工程博客"}},[e._v("#")]),e._v(" 公司工程博客")]),e._v(" "),r("p",[e._v("你即将面试的公司的架构")]),e._v(" "),r("p",[e._v("你面对的问题可能就来自于同样领域")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"http://nerds.airbnb.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Airbnb Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.atlassian.com/blog/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Atlassian Developers"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://cloudengineering.autodesk.com/blog/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Autodesk Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://aws.amazon.com/blogs/aws/",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://word.bitly.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitly Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.box.com/blog/engineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Box Blogs"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://blog.cloudera.com/blog/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cloudera Developer Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://tech.dropbox.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dropbox Tech Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineering.quora.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Engineering at Quora"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.ebaytechblog.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Ebay Tech Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blog.evernote.com/tech/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Evernote Tech Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://codeascraft.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Etsy Code as Craft"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.facebook.com/Engineering",target:"_blank",rel:"noopener noreferrer"}},[e._v("Facebook Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://code.flickr.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flickr Code"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineering.foursquare.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Foursquare Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.blog/category/engineering",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://googleresearch.blogspot.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google Research Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://engineering.groupon.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Groupon Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://engineering.heroku.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Heroku Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://product.hubspot.com/blog/topic/engineering",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hubspot Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://highscalability.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("High Scalability"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://instagram-engineering.tumblr.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Instagram Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://software.intel.com/en-us/blogs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Intel Software Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blogs.janestreet.com/category/ocaml/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jane Street Tech Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineering.linkedin.com/blog",target:"_blank",rel:"noopener noreferrer"}},[e._v("LinkedIn Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://engineering.microsoft.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://blogs.msdn.microsoft.com/pythonengineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Microsoft Python Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://techblog.netflix.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Netflix Tech Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://devblog.paypal.com/category/engineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Paypal Developer Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineering.pinterest.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pinterest Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://engineering.quora.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Quora Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.redditblog.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Reddit Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://developer.salesforce.com/blogs/engineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Salesforce Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://slack.engineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Slack Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://labs.spotify.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spotify Labs"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://www.twilio.com/engineering",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twilio Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://engineering.twitter.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Twitter Engineering"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://eng.uber.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Uber Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://yahooeng.tumblr.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Yahoo Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"http://engineeringblog.yelp.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Yelp Engineering Blog"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.zynga.com/blogs/engineering",target:"_blank",rel:"noopener noreferrer"}},[e._v("Zynga Engineering Blog"),r("OutboundLink")],1)])]),e._v(" "),r("h4",{attrs:{id:"来源及延伸阅读-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#来源及延伸阅读-2"}},[e._v("#")]),e._v(" 来源及延伸阅读")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/kilimchoi/engineering-blogs",target:"_blank",rel:"noopener noreferrer"}},[e._v("kilimchoi/engineering-blogs"),r("OutboundLink")],1)])]),e._v(" "),r("h2",{attrs:{id:"参考文献"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文献"}},[e._v("#")]),e._v(" 参考文献")]),e._v(" "),r("ul",[r("li",[e._v("原文地址："),r("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer",target:"_blank",rel:"noopener noreferrer"}},[e._v("github.com/donnemartin/system-design-primer"),r("OutboundLink")],1)]),e._v(" "),r("li",[e._v("译文出自："),r("a",{attrs:{href:"https://github.com/xitu/gold-miner",target:"_blank",rel:"noopener noreferrer"}},[e._v("掘金翻译计划"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=o.exports}}]);